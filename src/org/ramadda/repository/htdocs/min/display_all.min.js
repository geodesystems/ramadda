var testcnt=0;function AreaWidget(display){var ID_CONTAINS="contains";var ID_NORTH="north";var ID_SOUTH="south";var ID_EAST="east";var ID_WEST="west";var ID_AREA_LINK="arealink";RamaddaUtil.inherit(this,{display:display,getHtml:function(){var callback=this.display.getGet();var cbx=HtmlUtils.checkbox(this.display.getDomId(ID_CONTAINS),["title","Search mode: checked - contains, unchecked - overlaps"],false);var link=HtmlUtils.onClick(callback+".areaWidget.areaLinkClick();",HtmlUtils.image(root+(this.linkArea?"/icons/link.png":"/icons/link_break.png"),[ATTR_TITLE,"Set bounds from map",ATTR_CLASS,"display-area-link","border","0",ATTR_ID,this.display.getDomId(ID_AREA_LINK)]));var mylocation=HtmlUtils.onClick(callback+".areaWidget.useMyLocation();",HtmlUtils.image(root+"/icons/compass.png"),[ATTR_TITLE,"Set my location",ATTR_CLASS,"display-area-link","border","0"]);var erase=HtmlUtils.onClick(callback+".areaWidget.areaClear();",HtmlUtils.image(root+"/icons/eraser.png",[ATTR_TITLE,"Clear form",ATTR_CLASS,"display-area-link","border","0"]));var areaForm=HtmlUtils.openTag(TAG_TABLE,[ATTR_CLASS,"display-area","border","0","cellpadding","0","cellspacing","0"]);areaForm+=HtmlUtils.tr([],HtmlUtils.td(["align","center"],HtmlUtils.leftCenterRight(mylocation,HtmlUtils.input(ID_NORTH,"",["placeholder"," N",ATTR_CLASS,"input display-area-input","size","5",ATTR_ID,this.display.getDomId(ID_NORTH),ATTR_TITLE,"North"]),link,"20%","60%","20%")));areaForm+=HtmlUtils.tr([],HtmlUtils.td([],HtmlUtils.input(ID_WEST,"",["placeholder"," W",ATTR_CLASS,"input  display-area-input","size","5",ATTR_ID,this.display.getDomId(ID_WEST),ATTR_TITLE,"West"])+
HtmlUtils.input(ID_EAST,"",["placeholder"," E",ATTR_CLASS,"input  display-area-input","size","5",ATTR_ID,this.display.getDomId(ID_EAST),ATTR_TITLE,"East"])));areaForm+=HtmlUtils.tr([],HtmlUtils.td(["align","center"],HtmlUtils.leftCenterRight(erase,HtmlUtils.input(ID_SOUTH,"",["placeholder"," S",ATTR_CLASS,"input  display-area-input","size","5",ATTR_ID,this.display.getDomId(ID_SOUTH),ATTR_TITLE,"South"]),cbx)));areaForm+=HtmlUtils.closeTag(TAG_TABLE);return areaForm;},areaClear:function(){$("#"+this.display.getDomId(ID_NORTH)).val("");$("#"+this.display.getDomId(ID_WEST)).val("");$("#"+this.display.getDomId(ID_SOUTH)).val("");$("#"+this.display.getDomId(ID_EAST)).val("");this.display.areaClear();},useMyLocation:function(){if(navigator.geolocation){var _this=this;navigator.geolocation.getCurrentPosition(function(position){_this.setUseMyLocation(position);});}else{}},setUseMyLocation:function(position){var lat=position.coords.latitude;var lon=position.coords.longitude;var offset=5.0;if(this.display.myLocationOffset)
offset=parseFloat(this.display.myLocationOffset);$("#"+this.display.getDomId(ID_NORTH)).val(lat+offset);$("#"+this.display.getDomId(ID_WEST)).val(lon-offset);$("#"+this.display.getDomId(ID_SOUTH)).val(lat-offset);$("#"+this.display.getDomId(ID_EAST)).val(lon+offset);if(this.display.submitSearchForm)
this.display.submitSearchForm();},areaLinkClick:function(){this.linkArea=!this.linkArea;var image=root+(this.linkArea?"/icons/link.png":"/icons/link_break.png");$("#"+this.display.getDomId(ID_AREA_LINK)).attr("src",image);if(this.linkArea&&this.lastBounds){var b=this.lastBounds;$("#"+this.display.getDomId(ID_NORTH)).val(formatLocationValue(b.top));$("#"+this.display.getDomId(ID_WEST)).val(formatLocationValue(b.left));$("#"+this.display.getDomId(ID_SOUTH)).val(formatLocationValue(b.bottom));$("#"+this.display.getDomId(ID_EAST)).val(formatLocationValue(b.right));}},linkArea:false,lastBounds:null,handleEventMapBoundsChanged:function(source,args){bounds=args.bounds;this.lastBounds=bounds;if(!args.force&&!this.linkArea)return;$("#"+this.display.getDomId(ID_NORTH)).val(formatLocationValue(bounds.top));$("#"+this.display.getDomId(ID_WEST)).val(formatLocationValue(bounds.left));$("#"+this.display.getDomId(ID_SOUTH)).val(formatLocationValue(bounds.bottom));$("#"+this.display.getDomId(ID_EAST)).val(formatLocationValue(bounds.right));},setSearchSettings:function(settings){var cbx=$("#"+this.display.getDomId(ID_CONTAINS));if(cbx.is(':checked')){settings.setAreaContains(true);}else{settings.setAreaContains(false);}
settings.setBounds(this.display.getFieldValue(this.display.getDomId(ID_NORTH),null),this.display.getFieldValue(this.display.getDomId(ID_WEST),null),this.display.getFieldValue(this.display.getDomId(ID_SOUTH),null),this.display.getFieldValue(this.display.getDomId(ID_EAST),null));},});}
function DateRangeWidget(display){var ID_DATE_START="date_start";var ID_DATE_END="date_end";RamaddaUtil.inherit(this,{display:display,initHtml:function(){this.display.jq(ID_DATE_START).datepicker();this.display.jq(ID_DATE_END).datepicker();},setSearchSettings:function(settings){var start=this.display.jq(ID_DATE_START).val();var end=this.display.jq(ID_DATE_START).val();settings.setDateRange(start,end);},getHtml:function(){var html=HtmlUtils.input(ID_DATE_START,"",["class","display-date-input","placeholder"," start date",ATTR_ID,display.getDomId(ID_DATE_START),"size","10"])+" - "+
HtmlUtils.input(ID_DATE_END,"",["class","display-date-input","placeholder"," end date",ATTR_ID,display.getDomId(ID_DATE_END),"size","10"]);return html;}});}
function DisplayAnimation(display,enabled){let ID_RUN="animrun";let ID_NEXT="animnext";let ID_PREV="animprev";let ID_BEGIN="animbegin";let ID_END="animend";let ID_SLIDER="slider";let ID_TICKS="ticks";let ID_SHOWALL="showall";let ID_ANIMATION_LABEL="animationlabel";let MODE_FRAME="frame";let MODE_SLIDING="sliding";$.extend(this,{display:display,enabled:enabled,running:false,inAnimation:false,begin:null,end:null,dateMin:null,dateMax:null,dateRange:0,dateFormat:display.getProperty("animationDateFormat",display.getProperty("dateFormat","yyyymmdd")),mode:display.getProperty("animationMode","cumulative"),startAtEnd:display.getProperty("animationStartAtEnd",false),speed:parseInt(display.getProperty("animationSpeed",500)),getEnabled:function(){return this.enabled;},toggleAnimation:function(){this.running=!this.running;if(this.btnRun)
this.btnRun.html(HtmlUtils.getIconImage(this.running?"fa-stop":"fa-play"));if(this.running)
this.startAnimation();},getDomId:function(id){return this.display.getDomId(id);},jq:function(id){return this.display.jq(id);},init:function(dateMin,dateMax,records){let debug=false;if(debug)
console.log("animation.init:"+dateMin+" "+dateMax+" "+(records?"#records:"+records.length:"no records"));let _this=this;this.records=records;this.dateMin=dateMin;this.dateMax=dateMax;this.begin=this.dateMin;this.end=this.dateMax;if(!this.dateMin)return;this.dates=[];var seen={};records.every(r=>{if(!seen[r.getDate()]){seen[r.getDate()]=true;this.dates.push(r.getDate());}
return true;});this.dates.sort(function(a,b){return a.getTime()-b.getTime();});this.frameIndex=0;if(this.startAtEnd){this.begin=this.dateMax;this.end=this.dateMax;if(this.mode==MODE_FRAME){this.frameIndex=this.dates.length-1;}}
if(this.mode==MODE_FRAME){this.end=this.begin;}
this.dateRange=this.dateMax.getTime()-this.dateMin.getTime();this.steps=parseFloat(this.display.getProperty("animationSteps",60));this.windowUnit=this.display.getProperty("animationWindow","");if(this.windowUnit!=""){if(this.windowUnit=="decade"){this.window=1000*60*60*24*365*10;}else if(this.windowUnit=="century"){this.window=1000*60*60*24*365*100;}else if(this.windowUnit=="halfdecade"){this.window=1000*60*60*24*365*5;}else if(this.windowUnit=="year"){this.window=1000*60*60*24*366;}else if(this.windowUnit=="month"){this.window=1000*60*60*24*32;}else if(this.windowUnit=="week"){this.window=1000*60*60*24*7;}else if(this.windowUnit=="day"){this.window=1000*60*60*24;}else if(this.windowUnit=="hour"){this.window=1000*60*60;}else if(this.windowUnit=="minute"){this.window=1000*61;}else{this.window=1001;}}else if(this.steps>0){this.window=this.dateRange/this.steps;}
var sliderValues=this.mode!=MODE_FRAME?[this.begin.getTime(),this.end.getTime()]:[this.begin.getTime()];this.jq(ID_SLIDER).slider({range:_this.mode!=MODE_FRAME,min:_this.dateMin.getTime(),max:_this.dateMax.getTime(),values:sliderValues,slide:function(event,ui){_this.stopAnimation();_this.setSliderValues(ui.values);_this.updateLabels();},stop:function(event,ui){_this.stopAnimation();_this.setSliderValues(ui.values);_this.applyAnimation(true);}});if(this.records&&this.display.getProperty("animationShowTicks",true)){if(debug)console.log("animation.init making ticks: #records="+records.length+" date:"+this.dateMin+" "+this.dateMax);let tickStyle=this.display.getProperty("animationTickStyle","");var ticks="";var min=this.dateMin.getTime();var max=this.dateMax.getTime();var p=0;let seenDate={};for(var i=0;i<this.records.length;i++){var record=this.records[i];var date=record.getDate().getTime();if(seenDate[date])continue;seenDate[date]=true;if(debug)console.log("\ttick:"+record.getDate());var perc=(date-min)/(max-min)*100;var tt=this.formatAnimationDate(record.getDate());ticks+=HtmlUtils.div(["id",this.display.getId()+"-"+record.getId(),"class","display-animation-tick","style","left:"+perc+"%;"+tickStyle,"title",tt,"recordIndex",i],"");}
this.jq(ID_TICKS).html(ticks);if(debug)console.log("animation.init done making ticks");this.display.makeTooltips(this.jq(ID_TICKS).find(".display-animation-tick"),this.records,(open,record)=>{this.display.handleEventRecordHighlight(this,{highlight:open,record:record,skipAnimation:true});});}
if(debug)console.log("animation.init-3");this.updateLabels();if(debug)console.log("animation.init-done");},setSliderValues:function(v){let debug=true;if(debug)
console.log("animtion.setSliderValues");if(this.mode!=MODE_FRAME){this.begin=new Date(v[0]);this.end=new Date(v[1]);}else{var sliderDate=new Date(v[0]);var closest=this.dates[0];var dist=0;this.dates.map(d=>{if(Math.abs(d.getTime()-sliderDate.getTime())<Math.abs(closest.getTime()-sliderDate.getTime())){closest=d;}});this.begin=this.end=closest;}},handleEventRecordHighlight:function(source,args){var element=$("#"+this.display.getId()+"-"+args.record.getId());if(args.highlight){element.addClass("display-animation-tick-highlight");}else{element.removeClass("display-animation-tick-highlight");}},makeControls:function(){var buttons="";if(this.display.getProperty("animationShowButtons",true)){var short=display.getProperty("animationWidgetShort",false);if(!short)
buttons+=HtmlUtils.span(["id",this.getDomId(ID_BEGIN),"title","Go to beginning"],HtmlUtils.getIconImage("fa-fast-backward"));buttons+=HtmlUtils.span(["id",this.getDomId(ID_PREV),"title","Previous"],HtmlUtils.getIconImage("fa-step-backward"));if(!short)
buttons+=HtmlUtils.span(["id",this.getDomId(ID_RUN),"title","Run/Stop"],HtmlUtils.getIconImage("fa-play"));buttons+=HtmlUtils.span(["id",this.getDomId(ID_NEXT),"title","Next"],HtmlUtils.getIconImage("fa-step-forward"));if(!short)
buttons+=HtmlUtils.span(["id",this.getDomId(ID_END),"title","Go to end"],HtmlUtils.getIconImage("fa-fast-forward"));if(!short)
buttons+=HtmlUtils.span(["id",this.getDomId(ID_SHOWALL),"title","Show all"],HtmlUtils.getIconImage("fa-sync"));}
buttons+=HtmlUtils.span(["id",this.getDomId(ID_ANIMATION_LABEL),"class","display-animation-label"]);buttons=HtmlUtils.div(["class","display-animation-buttons"],buttons);if(display.getProperty("animationShowSlider",true)){let style=display.getProperty("animationSliderStyle","");buttons+=HtmlUtils.div(["class","display-animation-slider","style",style,"id",this.getDomId(ID_SLIDER)],HtmlUtils.div(["class","display-animation-ticks","id",this.getDomId(ID_TICKS)]));}
this.jq(ID_TOP_LEFT).append(HtmlUtils.div(["style",this.display.getProperty("animationStyle")],buttons));this.btnRun=this.jq(ID_RUN);this.btnPrev=this.jq(ID_PREV);this.btnNext=this.jq(ID_NEXT);this.btnBegin=this.jq(ID_BEGIN);this.btnEnd=this.jq(ID_END);this.btnShowAll=this.jq(ID_SHOWALL);this.label=this.jq(ID_ANIMATION_LABEL);this.btnRun.button().click(()=>{this.toggleAnimation();});this.btnBegin.button().click(()=>{this.begin=this.dateMin;if(this.mode==MODE_SLIDING){this.end=new Date(this.dateMin.getTime()+this.window);}else if(this.mode==MODE_FRAME){this.frameIndex=0;this.begin=this.end=this.deltaFrame(0);}else{this.end=new Date(this.dateMin.getTime()+this.window);}
this.stopAnimation();this.applyAnimation();});this.btnEnd.button().click(()=>{this.end=this.dateMax;if(this.mode==MODE_SLIDING){this.begin=new Date(this.dateMax.getTime()-this.window);}else if(this.mode==MODE_FRAME){this.frameIndex=this.dates.length+1;this.begin=this.end=this.deltaFrame(0);}else{this.end=this.dateMax;}
this.stopAnimation();this.applyAnimation();});this.btnPrev.button().click(()=>{if(this.mode==MODE_SLIDING){this.begin=new Date(this.begin.getTime()-this.window);if(this.begin.getTime()<this.dateMin.getTime())
this.begin=this.dateMin;this.end=new Date(this.begin.getTime()+this.window);}else if(this.mode==MODE_FRAME){this.begin=this.end=this.deltaFrame(-1);}else{this.end=new Date(this.end.getTime()-this.window);if(this.end.getTime()<=this.begin.getTime()){this.end=new Date(this.begin.getTime()+this.window);}}
this.stopAnimation();this.applyAnimation();});this.btnNext.button().click(()=>{this.stopAnimation();this.doNext();});this.btnShowAll.button().click(()=>{this.begin=this.dateMin;this.end=this.dateMax;this.inAnimation=false;this.running=false;if(this.btnRun)
this.btnRun.html(HtmlUtils.getIconImage("fa-play"));this.applyAnimation();});},atEnd:function(){return this.end.getTime()>=this.dateMax.getTime();},doNext:function(){let debug=false;let wasAtEnd=this.atEnd();if(debug)console.log("animation.doNext atEnd="+wasAtEnd);if(this.mode==MODE_SLIDING){this.begin=this.end;this.end=new Date(this.end.getTime()+this.window);if(this.atEnd()){this.end=this.dateMax;this.begin=new Date(this.end.getTime()-this.window);this.inAnimation=false;this.stopAnimation();}}else if(this.mode==MODE_FRAME){this.begin=this.end=this.deltaFrame(1);if(this.running){if(wasAtEnd){if(this.display.getProperty("animationLoop",true)){setTimeout(()=>{this.begin=this.end=this.dateMin;this.frameIndex=0;this.updateUI();},this.display.getProperty("animationDwell",1000));return;}else{this.stopAnimation();}}}}else{this.end=new Date(this.end.getTime()+this.window);if(this.atEnd()){this.end=this.dateMax;this.inAnimation=false;this.stopAnimation();}}
this.applyAnimation();},deltaFrame:function(delta){this.frameIndex+=delta;if(!this.dates)return;if(this.frameIndex>=this.dates.length)
this.frameIndex=this.dates.length-1;else if(this.frameIndex<0)
this.frameIndex=0;return this.dates[this.frameIndex];},startAnimation:function(){if(!this.dateMax)return;if(!this.inAnimation){this.inAnimation=true;this.label.html("");if(this.mode==MODE_FRAME){this.frameIndex=0;this.begin=this.end=this.deltaFrame(0);this.display.animationStart();this.doNext();return;}
var date=this.dateMin;this.begin=date;var unit=this.windowUnit;if(unit!=""){var tmp=0;if(unit=="decade"){this.begin=new Date(date.getUTCFullYear(),0);}else if(unit=="year"){this.begin=new Date(date.getUTCFullYear(),0);}else if(unit=="month"){this.begin=new Date(date.getUTCFullYear(),date.getMonth());}else if(unit=="day"){this.begin=new Date(date.getUTCFullYear(),date.getMonth(),date.getDay());}else if(unit=="hour"){this.begin=new Date(date.getUTCFullYear(),date.getMonth(),date.getDay(),date.getHours());}else if(unit=="minute"){this.begin=new Date(date.getUTCFullYear(),date.getMonth(),date.getDay(),date.getHours(),date.getMinutes());}else{this.begin=new Date(date.getUTCFullYear(),date.getMonth(),date.getDay(),date.getHours(),date.getSeconds());}}
this.end=this.begin;this.display.animationStart();}
this.doNext();},stopAnimation:function(){if(this.btnRun)
this.btnRun.html(HtmlUtils.getIconImage("fa-play"));this.running=false;},setDateRange:function(begin,end){this.begin=begin;this.end=end;this.stopAnimation();this.updateUI();},applyAnimation:function(skipSlider){this.display.animationApply(this);this.updateUI();},updateUI:function(skipSlider){if(!skipSlider){this.jq(ID_SLIDER).slider('values',0,this.begin.getTime());this.jq(ID_SLIDER).slider('values',1,this.end.getTime());}
this.updateLabels();var windowEnd=this.end.getTime();if(windowEnd<=this.dateMax.getTime()){if(this.running){setTimeout(()=>{if(!this.running)return;this.doNext();},this.speed);}}else{this.running=false;this.inAnimation=false;if(this.btnRun)
this.btnRun.html(HtmlUtils.getIconImage("fa-play"));}},updateLabels:function(){if(this.label){if(this.mode==MODE_FRAME&&this.begin==this.end){this.label.html(this.formatAnimationDate(this.begin));}else{this.label.html(this.formatAnimationDate(this.begin)+" - "+this.formatAnimationDate(this.end));}}},formatAnimationDate:function(date){return Utils.formatDateWithFormat(date,this.dateFormat,true);},});}
function ColorByInfo(display,fields,records,prop,colorByMapProp,defaultColorTable,propPrefix,theField){if(!prop)prop="colorBy";if(!propPrefix){propPrefix=["colorBy",""];}else if(!Array.isArray(propPrefix)){propPrefix=[propPrefix];}
$.extend(this,{display:display,fieldProp:prop,fieldValue:display.getProperty(prop),propPrefix:propPrefix,});let colorByAttr=this.getProperty(prop||"colorBy",null);if(theField==null){if(prop.getId){theField=prop;}else{theField=display.getFieldById(null,colorByAttr);}}
if(theField){this.field=theField;propPrefix=[theField.getId()+".",""];colorByAttr=theField.getId();this.propPrefix.unshift(theField.getId()+".colorBy");}
$.extend(this,{display:display,id:colorByAttr,fields:fields,field:theField,colorThresholdField:display.getFieldById(null,display.getProperty("colorThresholdField")),aboveColor:display.getProperty("colorThresholdAbove","red"),belowColor:display.getProperty("colorThresholdAbove","blue"),excludeZero:this.getProperty(PROP_EXCLUDE_ZERO,false),overrideRange:this.getProperty("overrideColorRange",false),inverse:this.getProperty("Inverse",false),origRange:null,origMinValue:0,origMaxValue:0,minValue:0,maxValue:0,toMinValue:0,toMaxValue:100,isString:false,stringMap:null,colorByMap:{},colorByValues:[],colorByMinPerc:this.getProperty("MinPercentile",-1),colorByMaxPerc:this.getProperty("MaxPercentile",-1),colorByOffset:0,pctFields:null,compareFields:display.getFieldsByIds(null,this.getProperty("CompareFields","",true)),});if(this.fieldValue=="year"){let seen={};this.dates=[];records.forEach(r=>{let year=r.getDate().getUTCFullYear();if(!seen[year]){seen[year]=true;this.dates.push(year);}});this.dates.sort();this.setRange(this.dates[0],this.dates[this.dates.length-1]);}
this.convertAlpha=this.getProperty("convertColorAlpha",false);if(this.convertAlpha){if(!Utils.isDefined(this.getProperty("alphaSourceMin"))){var min=0,max=0;records.map((record,idx)=>{var tuple=record.getData();if(this.compareFields.length>0){this.compareFields.map((f,idx2)=>{var v=tuple[f.getIndex()];if(isNaN(v))return;min=idx==0&&idx2==0?v:Math.min(min,v);max=idx==0&&idx2==0?v:Math.max(max,v);});}else if(this.index=0){var v=tuple[this.index];if(isNaN(v))return;min=idx==0?v:Math.min(min,v);max=idx==0?v:Math.max(max,v);}});this.alphaSourceMin=min;this.alphaSourceMax=max;}else{this.alphaSourceMin=+this.getProperty("alphaSourceMin",40);this.alphaSourceMax=+this.getProperty("alphaSourceMax",80);}
this.alphaTargetMin=+this.getProperty("alphaTargetMin",0);this.alphaTargetMax=+this.getProperty("alphaTargetMax",1);}
this.convertIntensity=this.getProperty("convertColorIntensity",false);if(this.convertIntensity){if(!Utils.isDefined(this.getProperty("intensitySourceMin"))){var min=0,max=0;records.map((record,idx)=>{var tuple=record.getData();if(this.compareFields.length>0){this.compareFields.map((f,idx2)=>{var v=tuple[f.getIndex()];if(isNaN(v))return;min=idx==0&&idx2==0?v:Math.min(min,v);max=idx==0&&idx2==0?v:Math.max(max,v);});}else if(this.index=0){var v=tuple[this.index];if(isNaN(v))return;min=idx==0?v:Math.min(min,v);max=idx==0?v:Math.max(max,v);}});this.intensitySourceMin=min;this.intensitySourceMax=max;}else{this.intensitySourceMin=+this.getProperty("intensitySourceMin",80);this.intensitySourceMax=+this.getProperty("intensitySourceMax",40);}
this.intensityTargetMin=+this.getProperty("intensityTargetMin",1);this.intensityTargetMax=+this.getProperty("intensityTargetMax",0);}
if(this.display.percentFields!=null){this.pctFields=this.display.percentFields.split(",");}
var colors=defaultColorTable||this.display.getColorTable(true,colorByAttr+".colorTable");if(!colors&&this.hasField()){colors=this.display.getColorTable(true,"colorTable");}
if(!colors){var c=this.getProperty(colorByAttr+".colors");if(c)
colors=c.split(",");}
if(!colors)
colors=this.display.getColorTable(true);this.colors=colors;if(this.hasField()&&!colors){}
if(!this.colors&&this.display.colors&&this.display.colors.length>0){this.colors=source.colors;if(this.colors.length==1&&Utils.ColorTables[this.colors[0]]){this.colors=Utils.ColorTables[this.colors[0]].colors;}}
if(this.colors==null){this.colors=Utils.ColorTables.grayscale.colors;}
if(!this.field){for(var i=0;i<fields.length;i++){var field=fields[i];if(field.getId()==this.id||("#"+(i+1))==this.id){this.field=field;}}}
if(this.field&&this.field.isString())this.isString=true;this.index=this.field!=null?this.field.getIndex():-1;this.stringMap=this.display.getColorByMap(colorByMapProp);if(this.index>=0){var cnt=0;records.forEach(record=>{var tuple=record.getData();var v=tuple[this.index];if(this.isString){if(!Utils.isDefined(this.colorByMap[v])){var index=this.colorByValues.length;this.colorByValues.push(v);var color=index>=this.colors.length?this.colors[this.colors.length-1]:this.colors[index];this.colorByMap[v]=color;this.setRange(1,this.colorByValues.length,true);}
return;}
if(this.excludeZero&&v===0){return;}
if(!isNaN(v)&&!(v===null)){if(cnt==0||v>this.maxValue)this.maxValue=v;if(cnt==0||v<this.minValue)this.minValue=v;cnt++;}});}
if(this.display.showPercent){this.setRange(0,100,true);}
var steps=this.getProperty("Steps");if(steps){this.steps=steps.split(",");}
this.colorByLog=this.getProperty("Log",false);this.colorByLog10=this.getProperty("Log10",false);this.colorByLog2=this.getProperty("Log2",false);if(this.colorByLog){this.colorByFunc=Math.log;}else if(this.colorByLog10){this.colorByFunc=Math.log10;}else if(this.colorByLog2){this.colorByFunc=Math.log2;}
this.setRange(this.getProperty("Min",this.minValue),this.getProperty("Max",this.maxValue),true);this.range=this.maxValue-this.minValue;this.toMinValue=this.getProperty("ToMin",this.toMinValue);this.toMaxValue=this.getProperty("ToMax",this.toMaxValue);}
ColorByInfo.prototype={getProperty:function(prop,dflt){if(this.debug)console.log("getProperty:"+prop);for(let i=0;i<this.propPrefix.length;i++){let v=this.display.getProperty(this.propPrefix[i]+prop);if(this.debug)console.log("\t"+this.propPrefix[i]+prop);if(Utils.isDefined(v))return v;}
return dflt;},displayColorTable:function(width,force,domId){if(!this.getProperty("showColorTable",true))return;if(this.compareFields.length>0){var legend="";this.compareFields.map((f,idx)=>{legend+=HtmlUtils.div(["style","display:inline-block;width: 15px;height: 15px; background:"+this.colors[idx]+";"])+" "+
f.getLabel()+" ";});let dom=this.display.jq(domId||ID_COLORTABLE);dom.html(HtmlUtils.div(["style","text-align:center; margin-top:5px;"],legend));}
if(!force&&this.index<0)return;if(this.stringMap){var colors=[];this.colorByValues=[];for(var i in this.stringMap){this.colorByValues.push(i);colors.push(this.stringMap[i]);}
this.display.displayColorTable(colors,domId||ID_COLORTABLE,this.origMinValue,this.origMaxValue,{colorByInfo:this,width:width,stringValues:this.colorByValues});}else{var colors=this.colors;if(this.getProperty("clipColorTable",true)&&this.colorByValues.length){var tmp=[];for(var i=0;i<this.colorByValues.length&&i<colors.length;i++)
tmp.push(this.colors[i]);colors=tmp;}
this.display.displayColorTable(colors,domId||ID_COLORTABLE,this.origMinValue,this.origMaxValue,{colorByInfo:this,width:width,stringValues:this.colorByValues});}},resetRange:function(){if(this.origRange)
this.setRange(this.origRange[0],this.origRange[1]);},setRange:function(minValue,maxValue,force){if(!force&&this.overrideRange)return;this.origMinValue=minValue;this.origMaxValue=maxValue;if(this.colorByFunc){if(minValue<0){this.colorByOffset=-minValue;}else if(minValue==0){this.colorByOffset=1;}
minValue=this.colorByFunc(minValue+this.colorByOffset);maxValue=this.colorByFunc(maxValue+this.colorByOffset);}
this.minValue=minValue;this.maxValue=maxValue;this.range=maxValue-minValue;if(!this.origRange){this.origRange=[minValue,maxValue];}
},getValuePercent:function(v){let perc=(v-this.minValue)/this.range;if(this.inverse)perc=1-perc;return perc;},scaleToValue:function(v){let perc=this.getValuePercent(v);return this.toMinValue+(perc*(this.toMaxValue-this.toMinValue));},getColorFromRecord:function(record,dflt){if(this.display.highlightFilter&&!record.isHighlight(this.display)){return this.display.getProperty("unhighlightColor","#eee");}
if(this.colorThresholdField&&this.display.selectedRecord){let v=this.display.selectedRecord.getValue(this.colorThresholdField.getIndex());let v2=record.getValue(this.colorThresholdField.getIndex());if(v2>v)return this.aboveColor;else return this.belowColor;}
if(this.index>=0){let value=record.getData()[this.index];return this.getColor(value,record);}
if(this.fieldValue=="year"){let value=record.getDate().getUTCFullYear();return this.getColor(value,record);}
return dflt;},hasField:function(){return this.index>=0;},getColor:function(value,pointRecord){if(this.display.highlightFilter&&pointRecord&&!pointRecord.isHighlight(this.display)){return this.display.getUnhighlightColor();}
var percent=0.5;if(this.showPercent){var total=0;var data=pointRecord.getData();for(var j=0;j<data.length;j++){var ok=this.fields[j].isNumeric()&&!this.fields[j].isFieldGeo();if(ok&&this.pctFields!=null){ok=this.pctFields.indexOf(this.fields[j].getId())>=0||this.pctFields.indexOf("#"+(j+1))>=0;}
if(ok){total+=data[j];}}
if(total!=0){percent=value/total*100;percent=(percent-this.minValue)/(this.maxValue-this.minValue);}}else{var v=value;if(this.stringMap){var color=this.stringMap[value];if(!Utils.isDefined(color)){return this.stringMap["default"];}
return color;}
if(this.isString){color=this.colorByMap[v];if(color)return color;}
let tmp=v;v+=this.colorByOffset;if(this.colorByFunc&&v>0){v=this.colorByFunc(v);}
percent=this.range?(v-this.minValue)/this.range:0.5;}
var index=0;if(this.steps){for(;index<this.steps.length;index++){if(v<=this.steps[index]){break;}}
this.xcnt++;}else{index=parseInt(percent*this.colors.length);}
if(index>=this.colors.length)index=this.colors.length-1;else if(index<0)index=0;if(this.stringMap){var color=this.stringMap[value];if(!Utils.isDefined(color)){return this.stringMap["default"];}
return color;}else{return this.colors[index];}
return null;},convertColor:function(color,colorByValue){color=this.convertColorIntensity(color,colorByValue);color=this.convertColorAlpha(color,colorByValue);return color;},convertColorIntensity:function(color,colorByValue){if(!this.convertIntensity)return color;percent=(colorByValue-this.intensitySourceMin)/(this.intensitySourceMax-this.intensitySourceMin);intensity=this.intensityTargetMin+percent*(this.intensityTargetMax-this.intensityTargetMin);var result=Utils.pSBC(intensity,color);return result||color;},convertColorAlpha:function(color,colorByValue){if(!this.convertAlpha)return color;percent=(colorByValue-this.alphaSourceMin)/(this.alphaSourceMax-this.alphaSourceMin);alpha=this.alphaTargetMin+percent*(this.alphaTargetMax-this.alphaTargetMin);var result=Utils.addAlphaToColor(color,alpha);return result||color;}}
function drawSparkLine(display,dom,w,h,data,records,min,max,colorBy,attrs,margin){if(!attrs)attrs={};if(!margin)
margin={top:5,right:5,bottom:5,left:5};margin={top:0,right:0,bottom:0,left:0};const INNER_WIDTH=w-margin.left-margin.right;const INNER_HEIGHT=h-margin.top-margin.bottom;const BAR_WIDTH=w/data.length;const x=d3.scaleLinear().domain([0,data.length]).range([0,INNER_WIDTH]);const y=d3.scaleLinear().domain([min,max]).range([INNER_HEIGHT,0]);const recty=d3.scaleLinear().domain([min,max]).range([0,INNER_HEIGHT]);var tt=d3.select("body").append("div").attr("class","sparkline-tooltip").style("opacity",0);const svg=d3.select(dom).append('svg').attr('width',w).attr('height',h).append('g').attr('transform','translate('+margin.left+','+margin.top+')');const line=d3.line().x((d,i)=>x(i)).y(d=>y(d));let lineColor=attrs.lineColor||display.getProperty("sparklineLineColor","#000");let barColor=attrs.barColor||display.getProperty("sparklineBarColor","MediumSeaGreen");let circleColor=attrs.circleColor||display.getProperty("sparklineCircleColor","#000");let circleRadius=attrs.circleRadius||display.getProperty("sparklineCircleRadius",1);let lineWidth=attrs.lineWidth||display.getProperty("sparklineLineWidth",1);let defaultShowEndPoints=true;let getColor=(d,i,dflt)=>{return colorBy?colorBy.getColorFromRecord(records[i],dflt):dflt;};let showBars=attrs.showBars||display.getProperty("sparklineShowBars",false);if(!showBars&&(attrs.showLines||display.getProperty("sparklineShowLines",true))){svg.selectAll('line').data(data).enter().append("line").attr('x1',(d,i)=>{return x(i)}).attr('y1',(d,i)=>{return y(d)}).attr('x2',(d,i)=>{return x(i+1)}).attr('y2',(d,i)=>{return y(i<data.length-1?data[i+1]:data[i])}).attr("stroke-width",lineWidth).attr("stroke",(d,i)=>{if(isNaN(d))return"rgba(0,0,0,0)";return getColor(d,i,lineColor)}).style("cursor","pointer");}
if(showBars){defaultShowEndPoints=false;svg.selectAll('.bar').data(data).enter().append('rect').attr('class','bar').attr('x',(d,i)=>x(i)).attr('y',d=>y(d)).attr('width',BAR_WIDTH).attr('height',d=>h-y(d)).attr('fill',(d,i)=>getColor(d,i,barColor)).style("cursor","pointer")}
if(attrs.showCircles||display.getProperty("sparklineShowCircles",false)){svg.selectAll('circle').data(data).enter().append("circle").attr('r',(d,i)=>{return isNaN(d)?0:circleRadius}).attr('cx',(d,i)=>{return x(i)}).attr('cy',(d,i)=>{return y(d)}).attr('fill',(d,i)=>getColor(d,i,circleColor)).style("cursor","pointer");}
if(attrs.showEndpoints||display.getProperty("sparklineShowEndPoints",defaultShowEndPoints)){let fidx=0;while(isNaN(data[fidx])&&fidx<data.length)fidx++;let lidx=data.length-1;while(isNaN(data[lidx])&&fidx>=0)lidx--;svg.append('circle').attr('r',attrs.endPointRadius||display.getProperty("sparklineEndPointRadius",2)).attr('cx',x(fidx)).attr('cy',y(data[fidx])).attr('fill',attrs.endPoint1Color||display.getProperty("sparklineEndPoint1Color")||getColor(data[0],0,display.getProperty("sparklineEndPoint1Color",'steelblue')));svg.append('circle').attr('r',attrs.endPointRadius||display.getProperty("sparklineEndPointRadius",2)).attr('cx',x(lidx)).attr('cy',y(data[lidx])).attr('fill',attrs.endPoint2Color||display.getProperty("sparklineEndPoint2Color")||getColor(data[data.length-1],data.length-1,display.getProperty("sparklineEndPoint2Color",'tomato')));}
let _display=display;let doTooltip=display.getProperty("sparklineDoTooltip",true)||attrs.doTooltip;svg.on("click",function(){var coords=d3.mouse(this);if(records){let record=records[Math.round(x.invert(coords[0]))]
if(record)
_display.getDisplayManager().notifyEvent("handleEventRecordSelection",_display,{select:true,record:record});}});if(doTooltip){svg.on("mouseover",function(){if(!records)return;var coords=d3.mouse(this);let record=records[Math.round(x.invert(coords[0]))]
if(!record)return;let html=_display.getRecordHtml(record);let ele=$(dom);let offset=ele.offset().top+ele.height();let left=ele.offset().left;tt.transition().duration(200).style("opacity",.9);tt.html(html).style("left",left+"px").style("top",offset+"px");}).on("mouseout",function(d){tt.transition().duration(500).style("opacity",0);});}}
function drawPieChart(display,dom,width,height,array,min,max,colorBy,attrs){if(!attrs)attrs={};let margin=Utils.isDefined(attrs.margin)?attrs.margin:4;let colors=attrs.pieColors||Utils.ColorTables.cats.colors;var radius=Math.min(width,height)/2-margin
var svg=d3.select(dom).append("svg").attr("width",width).attr("height",height).append("g").attr("transform","translate("+width/2+","+height/2+")");var data={};array.forEach(tuple=>{data[tuple[0]]=tuple[1];})
var color=d3.scaleOrdinal().domain(data).range(colors)
var pie=d3.pie().value(function(d){return d.value;})
var data_ready=pie(d3.entries(data))
svg.selectAll('whatever').data(data_ready).enter().append('path').attr('d',d3.arc().innerRadius(0).outerRadius(radius)).attr('fill',function(d){return(color(d.data.key))}).attr("stroke","black").style("stroke-width","1px").style("opacity",0.7)}
function SizeBy(display,records){this.display=display;if(!records)records=display.filterData();let pointData=this.display.getPointData();let fields=pointData.getRecordFields();$.extend(this,{id:this.display.getProperty("sizeBy"),minValue:0,maxValue:0,field:null,index:-1,isString:false,stringMap:{},});let sizeByMap=this.display.getProperty("sizeByMap");if(sizeByMap){let toks=sizeByMap.split(",");for(let i=0;i<toks.length;i++){let toks2=toks[i].split(":");if(toks2.length>1){this.stringMap[toks2[0]]=toks2[1];}}}
for(let i=0;i<fields.length;i++){let field=fields[i];if(field.getId()==this.id||("#"+(i+1))==this.id){this.field=field;if(field.isString())this.isString=true;}}
this.index=this.field!=null?this.field.getIndex():-1;if(!this.isString&&this.field){let col=this.display.getColumnValues(records,this.field);this.minValue=col.min;this.maxValue=col.max;if(Utils.isDefined(this.display.getProperty("sizeByMin"))){this.minValue=+this.display.getProperty("sizeByMin",0)}
if(Utils.isDefined(this.display.getProperty("sizeByMax"))){this.maxValue=+this.display.getProperty("sizeByMax",0)}}
if(this.display.getProperty("sizeBySteps")){this.steps=[];this.display.getProperty("sizeBySteps").split(",").forEach(tuple=>{let[value,size]=tuple.split(":");this.steps.push({value:+value,size:+size});});}
this.radiusMin=parseFloat(this.display.getProperty("sizeByRadiusMin",-1));this.radiusMax=parseFloat(this.display.getProperty("sizeByRadiusMax",-1));this.offset=0;this.sizeByLog=this.display.getProperty("sizeByLog",false);this.origMinValue=this.minValue;this.origMaxValue=this.maxValue;this.maxValue=Math.max(this.minValue,this.maxValue);if(this.sizeByLog){this.func=Math.log;if(this.minValue<1){this.offset=1-this.minValue;}
this.minValue=this.func(this.minValue+this.offset);this.maxValue=this.func(this.maxValue+this.offset);}}
SizeBy.prototype={getMaxSize:function(){return this.getSizeFromValue(this.origMaxValue);},getSize:function(values,dflt,func){if(this.index<=0){return dflt;}
let value=values[this.index];let size=this.getSizeFromValue(value,func);return size;},getSizeFromValue:function(value,func,debug){if(this.steps){if(value<=this.steps[0].value)return this.steps[0].size;for(let i=1;i<this.steps.length;i++){if(value>this.steps[i-1].value&&value<=this.steps[i].value)return this.steps[i].size;}
return this.steps[this.steps.length-1].size;}
if(this.isString){let size;if(Utils.isDefined(this.stringMap[value])){let v=parseInt(this.stringMap[value]);size=v;}else if(Utils.isDefined(this.stringMap["*"])){let v=parseInt(this.stringMap["*"]);size=v;}
if(isNaN(size))size=this.radiusMin;if(func)func(NaN,size);return size;}else{let denom=this.maxValue-this.minValue;let v=value+this.offset;if(this.func)v=this.func(v);let percent=(denom==0?NaN:(v-this.minValue)/denom);let size;if(this.radiusMax>=0&&this.radiusMin>=0){size=Math.round(this.radiusMin+percent*(this.radiusMax-this.radiusMin));}else{size=6+parseInt(15*percent);}
if(debug)console.log("value:"+value+" v:"+v+" size:"+size);if(isNaN(size))size=this.radiusMin;if(func)func(percent,size);return size;}},getLegend:function(cnt,bg,vert){let html="";if(this.index<0)return"";if(this.steps){this.steps.forEach(step=>{let dim=step.size*2+"px";let v=step.value;html+=HU.div([CLASS,"display-size-legend-item"],HU.center(HU.div([STYLE,HU.css("height",dim,"width",dim,"background-color",bg||"#bbb","border-radius","50%")]))+v);if(vert)html+="<br>";});}else{for(let i=0;i<=cnt;i++){let v=this.origMinValue+i/cnt*(this.origMaxValue-this.origMinValue);let size=this.getSizeFromValue(v,null,false);if(isNaN(size)||size==0)continue;v=this.display.formatNumber(v);let dim=size*2+"px";html+=HU.div([CLASS,"display-size-legend-item"],HU.center(HU.div([STYLE,HU.css("height",dim,"width",dim,"background-color",bg||"#bbb","border-radius","50%")]))+v);if(vert)html+="<br>";}}
return HU.div(["class","display-size-legend"],html);}}
var displayDebug={getProperty:false,handleEventPropertyChanged:false,getSelectedFields:false,filterData:false,getStandardData:false,makeDataTable:false,checkSearchBar:false,handleNoData:false,pointDataLoaded:false,displayMapUpdateUI:false,displayMapCreateMap:false,displayMapAddPoints:false,loadPointJson:false,groupBy:false,gridPoints:false,}
const ID_BOTTOM="bottom";const ID_COLORTABLE="colortable";const ID_LEGEND="legend";const ID_FIELDS="fields";const ID_HEADER="header";const ID_HEADER1="header1";const ID_HEADER2="header2";const ID_HEADER2_PREFIX="header2prefix";const ID_HEADER2_PREPREFIX="header2preprefix";const ID_HEADER2_SUFFIX="header2suffix";const ID_HEADER3="header3";const ID_FILTERBAR="filterbar";const ID_TITLE=ATTR_TITLE;const ID_TITLE_EDIT="title_edit";const ID_LEFT="left";const ID_RIGHT="right";const ID_TOP="top";const ID_TOP_RIGHT="topright";const ID_TOP_LEFT="topleft";const ID_DETAILS="details";const ID_DISPLAY_CONTENTS="contents";const ID_DISPLAY_TOP="top";const ID_DISPLAY_BOTTOM="bottom";const ID_GROUP_CONTENTS="group_contents";const ID_DETAILS_MAIN="detailsmain";const ID_GROUPBY_FIELDS="groupdbyfields";const ID_TOOLBAR="toolbar";const ID_TOOLBAR_INNER="toolbarinner";const ID_LIST="list";const ID_DIALOG="dialog";const ID_DIALOG_TABS="dialog_tabs";const ID_FOOTER="footer";const ID_FOOTER_LEFT="footer_left";const ID_FOOTER_RIGHT="footer_right";const ID_MENU_BUTTON="menu_button";const ID_MENU_OUTER="menu_outer";const ID_MENU_INNER="menu_inner";const ID_DISPLAY_PROGRESS="display_progress";const ID_REPOSITORY="repository";const ID_REQUEST_PROPERTIES="request_properties";const ID_PAGE_COUNT="pagecount";const ID_PAGE_PREV="pageprev";const ID_PAGE_NEXT="pagenext";const ID_FILTER_HIGHLIGHT="filterhighlight";const ID_FILTER_DATE="filterdate";const CATEGORY_MISC="Misc";const ID_ENTRIES_MENU="entries_menu";const ID_ENTRIES_PREV="entries_prev";const ID_ENTRIES_NEXT="entries_next";const PROP_DISPLAY_FILTER="displayFilter";const PROP_EXCLUDE_ZERO="excludeZero";const PROP_DIVID="divid";const PROP_FIELDS="fields";const PROP_LAYOUT_HERE="layoutHere";const PROP_HEIGHT="height";const PROP_WIDTH="width";const HIGHLIGHT_COLOR="yellow";const RECORD_INDEX="recordIndex";function initRamaddaDisplays(){ramaddaCheckForResize();if(window.globalDisplaysList==null){return;}
for(var i=0;i<window.globalDisplaysList.length;i++){window.globalDisplaysList[i].pageHasLoaded();}}
function addGlobalDisplayProperty(name,value){if(window.globalDisplayProperties==null){window.globalDisplayProperties={};}
window.globalDisplayProperties[name]=value;}
function getGlobalDisplayProperty(name){if(window.globalDisplayProperties==null){return null;}
return window.globalDisplayProperties[name];}
function addRamaddaDisplay(display){if(window.globalDisplays==null){window.globalDisplays={};window.globalDisplaysList=[];}
window.globalDisplaysList.push(display);window.globalDisplays[display.getId()]=display;if(display.displayId){window.globalDisplays[display.displayId]=display;}}
async function ramaddaDisplaySetSelectedEntry(entryId){await getGlobalRamadda().getEntry(entryId,e=>{window.globalDisplaysList.map(d=>{if(d.setEntry)d.setEntry(e);});});}
function ramaddaDisplayCheckLayout(){if(!window.globalDisplaysList)return;for(let i=0;i<window.globalDisplaysList.length;i++){if(window.globalDisplaysList[i].checkLayout){window.globalDisplaysList[i].checkLayout();}}}
function ramaddaCheckForResize(){let redisplayPending=false;let redisplayPendingCnt=0;$(window).resize(function(){if(window.globalDisplaysList==null){return;}
if(redisplayPending){redisplayPendingCnt++;return;}
var timeoutFunc=function(myCnt){if(myCnt==redisplayPendingCnt){redisplayPending=false;redisplayPendingCnt=0;for(var i=0;i<window.globalDisplaysList.length;i++){var display=window.globalDisplaysList[i];if(display.displayData){display.displayData();}}}else{setTimeout(timeoutFunc.bind(null,redisplayPendingCnt),1000);}}
redisplayPending=true;setTimeout(timeoutFunc.bind(null,redisplayPendingCnt),1000);});}
function getRamaddaDisplay(id){if(window.globalDisplays==null){return null;}
return window.globalDisplays[id];}
function removeRamaddaDisplay(id){var display=getRamaddaDisplay(id);if(display){display.removeDisplay();}}
function displayGetFunctionValue(v){if(isNaN(v))return 0;return v;}
function DisplayThing(argId,argProperties){if(argProperties==null){argProperties={};}
for(var i in argProperties){if(typeof argProperties[i]=="string"){if(argProperties[i]=="true")argProperties[i]=true;else if(argProperties[i]=="false")argProperties[i]=false;}}
for(var key in argProperties){var toks=key.split(".");if(toks.length<=1){continue;}
let map={};var v=argProperties[key];if(v=="true")v=true;else if(v=="false")v=false;for(var i=0;i<toks.length;i++){var tok=toks[i];if(i==toks.length-1){map[tok]=v;break;}
var nextMap=map[tok];if(nextMap==null){map[tok]={};map=map[tok];}else{map=nextMap;}}}
this.displayId=null;$.extend(this,argProperties);RamaddaUtil.defineMembers(this,{objectId:argId,properties:argProperties,displayParent:null,getId:function(){return this.objectId;},setId:function(id){this.objectId=id;},removeDisplay:function(){if(this.dialogElement)this.dialogElement.remove();},setEntry:function(entry){},handleEntryMenu:async function(entryId){await getGlobalRamadda().getEntry(entryId,e=>{this.setEntry(e);});},getEntriesMenu:function(argProperties){if(argProperties&&argProperties.entryCollection){var entries=argProperties.entryCollection.split(",");this.changeEntries=[];let enums=[];entries.map(t=>{var toks=t.split(":");this.changeEntries.push(toks[0]);enums.push([toks[0],toks[1]]);});var prev=HU.span([CLASS,"display-changeentries-button",TITLE,"Previous entry",ID,this.getDomId(ID_ENTRIES_PREV),TITLE,"Previous"],HU.getIconImage("fa-chevron-left"));var next=HU.span([CLASS,"display-changeentries-button",TITLE,"Next entry",ID,this.getDomId(ID_ENTRIES_NEXT),TITLE,"Next"],HU.getIconImage("fa-chevron-right"));var label=argProperties.changeEntriesLabel||"";if(label!="")label=label+"<br>";return HU.center(label+prev+" "+HU.select("",[ATTR_ID,this.getDomId(ID_ENTRIES_MENU)],enums)+" "+next);}
return"";},initializeEntriesMenu:function(){this.jq(ID_ENTRIES_PREV).click(e=>{var index=this.jq(ID_ENTRIES_MENU)[0].selectedIndex;if(index<=0)return;var entry=this.changeEntries[index-1];this.jq(ID_ENTRIES_MENU).val(entry);this.handleEntryMenu(entry);});this.jq(ID_ENTRIES_NEXT).click(e=>{var index=this.jq(ID_ENTRIES_MENU)[0].selectedIndex;if(index>=this.changeEntries.length-1){return;}
var entry=this.changeEntries[index+1];this.jq(ID_ENTRIES_MENU).val(entry);this.handleEntryMenu(entry);});this.jq(ID_ENTRIES_MENU).change(e=>{var entry=this.jq(ID_ENTRIES_MENU).val();this.handleEntryMenu(entry);});},popup:function(srcId,popupId,srcObj,popupObject){var popup=popupObject||$("#"+popupId);var src=srcObj||$("#"+srcId);var myalign='left top';var atalign='left bottom';popup.show();popup.position({of:src,my:myalign,at:atalign,collision:"none none"});popup.position({of:src,my:myalign,at:atalign,collision:"none none"});popup.draggable();popup.show();},initDialog:function(){},showDialog:function(text){if(!this.dialogElement){$(document.body).append(HU.div([ATTR_CLASS,"display-dialog",ID,this.getDomId(ID_DIALOG)]));this.dialogElement=this.jq(ID_DIALOG);}
this.dialogElement.html(this.makeDialog(text));this.popup(this.getDomId(ID_MENU_BUTTON),null,null,this.dialogElement);this.initDialog();},getShowMenu:function(){if(Utils.isDefined(this.showMenu)){return this.showMenu;}
var dflt=false;if(this.displayParent!=null){dflt=this.displayParent.getProperty("showChildMenu",dflt);}
var v=this.getProperty(PROP_SHOW_MENU,dflt);return v;},getShowTitle:function(){if(Utils.isDefined(this.showTitle)){return this.showTitle;}
var dflt=false;if(this.displayParent!=null){dflt=this.displayParent.getProperty("showChildTitle",dflt);}
var v=this.getProperty("showTitle",dflt);return v;},getTimeZone:function(){return this.getProperty("timeZone");},formatDate:function(date,args,useToStringIfNeeded){if(!date||!date.getTime)return"";try{return this.formatDateInner(date,args,useToStringIfNeeded);}catch(e){console.log("Error formatting date:"+e);if(!date.getTime&&date.v)date=date.v;return""+date;}},dateFormat:null,formatDateInner:function(date,args,useToStringIfNeeded){if(!this.dateFormat)
this.dateFormat=this.getProperty("dateFormat",this.getProperty("dateFormat2"));if(!this.dateFormat&&useToStringIfNeeded){return String(date);}
if(!date.getTime&&date.v)date=date.v;if(this.dateFormat){let dttm=Utils.formatDateWithFormat(date,this.dateFormat,true);if(dttm){return dttm;}}
if(!date.toLocaleDateString){return""+date;}
var suffix;if(args&&!Utils.isDefined(args.suffix))
suffix=args.suffix;else
suffix=this.getProperty("dateSuffix");var timeZone=this.getTimeZone();if(!suffix&&timeZone)suffix=timeZone;return Utils.formatDate(date,args?args.options:null,{timeZone:timeZone,suffix:suffix});},getUniqueId:function(base){return HU.getUniqueId(base);},handleError:function(code,message){GuiUtils.handleError("An error has occurred:"+message,true,true);},toString:function(){return"DisplayThing:"+this.getId();},getDomId:function(suffix){return this.getId()+"_"+suffix;},gid:function(suffix){return this.getId()+"_"+suffix;},jq:function(componentId){return $("#"+this.getDomId(componentId));},writeHtml:function(idSuffix,html){$("#"+this.getDomId(idSuffix)).html(html);},getTemplateProps:function(fields){return{iconField:this.getFieldById(fields,this.getProperty("iconField")),iconSize:parseFloat(this.getProperty("iconSize",16)),iconMap:this.getIconMap(),colorBy:this.getProperty("colorBy"),colorByMap:this.getColorByMap()}},applyRecordTemplate:function(row,fields,template,props,macros){fields=this.getFields(fields);if(!props){props=this.getTemplateProps(fields);}
if(!macros)macros=Utils.tokenizeMacros(template);let attrs={};if(props.iconMap&&props.iconField){var value=row[props.iconField.getIndex()];var icon=props.iconMap[value];if(icon){attrs[props.iconField.getId()+"_icon"]=HU.image(icon,["width",props.iconSize]);}}
for(var col=0;col<fields.length;col++){var f=fields[col];var value=row[f.getIndex()];if(props.iconMap){var icon=props.iconMap[f.getId()+"."+value];if(icon){s=s.replace("${"+f.getId()+"_icon}",HU.image(icon,["size",props.iconSize]));}}
if(f.getType()=="image"){if(value&&value.trim().length>1){var imgAttrs=[];imgAttrs.push("width");imgAttrs.push(this.getProperty("imageWidth","100%"));var img=HU.image(value,imgAttrs);attrs[f.getId()+"_image"]=img;attrs[f.getId()+"_url"]=value;}else{attrs[f.getId()+"_url"]=ramaddaBaseUrl+"/icons/blank.gif";attrs[f.getId()+"_image"]="";}}else if(f.getType()=="url"){if(value&&value.trim().length>1){attrs[f.getId()+"_href"]=HU.href(value,value);attrs[f.getId()]=value;}else{attrs[f.getId()+"_href"]="";attrs[f.getId()]="";}
continue;}else if(f.isDate){if(value){attrs[f.getId()]=value;}
continue;}
var color;if(props.colorByMap){if(props.colorBy&&props.colorBy==f.getId()){color=props.colorByMap[value];}else{color=props.colorByMap[f.getId()+"."+value];}}
if(color){attrs[f.getId()+"_color"]=color;}
attrs[f.getId()]=value;if(f.isNumeric()){attrs[f.getId()+"_format"]=Utils.formatNumberComma(value);}}
return macros.apply(attrs);},getFields:function(fields){if(!fields){var pointData=this.getData();if(pointData==null){return null;}
fields=pointData.getRecordFields();}
return fields;},getRecordHtml:function(record,fields,template){fields=this.getFields(fields);var showDate=this.getProperty("showDate",true);var showImage=this.getProperty("showImage",true);var showGeo=false;if(Utils.isDefined(this.showGeo)){showGeo=(""+this.showGeo)=="true";}
if(!template)
template=this.getProperty("recordTemplate");if(template){if(template!="${default}"&&template!="${fields}"){var row=this.getDataValues(record);return this.applyRecordTemplate(row,fields,template);}}
if(template=="${fields}"){fields=this.getFieldsByIds(null,this.getProperty("tooltipFields",this.getProperty("fields")));}
var values="<table>";for(var doDerived=0;doDerived<2;doDerived++){for(let i=0;i<fields.length;i++){var field=fields[i];if(doDerived==0&&!field.derived)continue;else if(doDerived==1&&field.derived)continue;var label=field.getLabel();label=this.formatRecordLabel(label);if(!showDate){if(field.isFieldDate()){continue;}}
if(!showGeo){if(field.isFieldGeo()){continue;}}
var value=record.getValue(field.getIndex());let fieldValue=value;if(typeof value=="number"){value=this.formatNumber(value,field.getId());}
if(field.isFieldDate()){value=this.formatDate(value);}
if(field.getType()=="image"&&value!=""){if(!showImage)continue;value=HU.image(value,["width","200"]);}
if(field.getType()=="url"){value=HU.href(value,value);}
value=value+field.getUnitSuffix();if(value.length>200){value=HU.div([STYLE,HU.css("max-height","200px","overflow-y","auto")],value);}
values+="<tr valign=top><td nowrap align=right><b>"+label+":</b></td>"+
HU.td(["field-id",field.getId(),"field-value",fieldValue,"align","left"],value)+"</tr>\n";}}
if(record.hasElevation()){values+="<tr><td  align=right><b>Elevation:</b></td><td align=left>"+number_format(record.getElevation(),4,'.','')+"</td></tr>";}
values+="</table>";if(this.getProperty("recordHtmlStyle")){values=HU.div([STYLE,this.getProperty("recordHtmlStyle")],values);}
return values;},formatRecordLabel:function(label){label=label.replace(/!!/g," -- ");return label;},getFormValue:function(what,dflt){var fromForm=$("#"+this.getDomId(what)).val();if(fromForm!=null){if(fromForm.length>0){this.setProperty(what,fromForm);}
if(fromForm=="none"){this.setProperty(what,null);}
return fromForm;}
return this.getProperty(what,dflt);},getName:function(){return this.getFormValue("name",this.getId());},getEventSource:function(){return this.getFormValue("eventSource","");},setDisplayParent:function(parent){this.displayParent=parent;},getDisplayParent:function(){if(this.displayParent==null){this.displayParent=this.getLayoutManager();}
return this.displayParent;},removeProperty:function(key){this.properties[key]=null;},setProperty:function(key,value){this.properties[key]=value;},getSelfProperty:function(key,dflt){if(this[key]!=null){return this[key];}
return this.getProperty(key,dflt);},initTooltip:function(){},formatNumber:function(number,propPrefix){if(!this.getProperty([propPrefix+".doFormatNumber","doFormatNumber"],true)){return number;}
if(isNaN(number)){return"--";}
let f=this.formatNumberInner(number,propPrefix);let fmt=this.getProperty([propPrefix+".numberTemplate","numberTemplate"]);if(fmt)f=fmt.replace("${number}",f);return f;},formatNumberInner:function(number,propPrefix){let scale=this.getProperty([propPrefix+".formatNumberScale","formatNumberScale"]);if(Utils.isDefined(scale))
number=number*scale;let decimals=this.getProperty([propPrefix+".formatNumberDecimals","formatNumberDecimals"]);if(Utils.isDefined(decimals))
return number_format(number,decimals);if(this.getProperty([propPrefix+".formatNumberComma","formatNumberComma"],false))
return Utils.formatNumberComma(number);return Utils.formatNumber(number);},propertyDefined:function(key){return Utils.isDefined(this.getProperty(key));},setPropertyOn:function(object,myProperty,objectProperty,dflt){var prop=this.getProperty(myProperty,dflt);if(Utils.isDefined(prop)&&prop!=null){object[objectProperty]=prop;}},getDisplayProp:function(source,prop,dflt){if(Utils.isDefined(this[prop])){return this[prop];}
let prop2="map-"+prop;if(Utils.isDefined(source[prop2])){return source[prop2];}
if(source.getProperty){return source.getProperty(prop,dflt);}
return null;},getProperty:function(key,dflt,skipThis){var value=this.getPropertyInner(key,null,skipThis);if(this.debugGetProperty)
console.log("\tgot:"+value);if(!Utils.isDefined(value)){if(this.debugGetProperty)
console.log("returning dflt:"+dflt);return dflt;}
if(this.debugGetProperty)
console.log("\returning value:"+value);return value;},getPropertyInner:function(keys,dflt,skipThis){let debug=displayDebug.getProperty;if(!Array.isArray(keys))keys=[keys];for(let i=0;i<keys.length;i++){let key=keys[i];if(debug)console.log("getProperty:"+key+" dflt:"+dflt);if(this.dynamicProperties){if(Utils.isDefined(this.dynamicProperties[key])){return this.dynamicProperties[key];}}
var value=this.properties[key];if(value!=null){if(debug)console.log("\tgetProperty-2:"+value);return value;}}
for(let i=0;i<keys.length;i++){let key=keys[i];var fromParent=null;if(this.displayParent!=null){fromParent=this.displayParent.getPropertyInner("inherit."+key,skipThis);}
if(!fromParent&&this.getDisplayManager){fromParent=this.getDisplayManager().getPropertyInner("inherit."+key);}
if(fromParent){if(debug)console.log("\tgetProperty-3");return fromParent;}}
if(this.displayParent!=null){if(debug)console.log("\tgetProperty calling parent");return this.displayParent.getPropertyInner(keys,skipThis);}
if(this.getDisplayManager){if(debug)console.log("\tgetProperty-5");return this.getDisplayManager().getPropertyInner(keys);}
for(let i=0;i<keys.length;i++){let key=keys[i];value=getGlobalDisplayProperty(key);if(value){if(debug)console.log("\tgetProperty-6:"+value);return value;}}
if(debug)console.log("\tgetProperty-6 dflt:"+dflt);return dflt;},});}
function RamaddaDisplay(argDisplayManager,argId,argType,argProperties){let SUPER=new DisplayThing(argId,argProperties);RamaddaUtil.inherit(this,SUPER);RamaddaUtil.defineMembers(this,{displayReady:Utils.getPageLoaded(),type:argType,displayManager:argDisplayManager,filters:[],dataCollection:new DataCollection(),selectedCbx:[],entries:[],wikiAttrs:[TITLE,"showTitle","showDetails","minDate","maxDate"],_properties:[],_wikiTags:[],defineProperties:function(props){props.forEach(p=>{if(!p.p&&p.label){this._wikiTags.push('label:'+p.label);return;}
if(!p.p&&p.inlineLabel){this._wikiTags.push('inlinelabel:'+p.inlineLabel);return;}
let w=[p.p+'="'+(p.wikiValue?p.wikiValue:p.d?p.d:"")+'"'];if(p.tt)
w.push(p.tt);this._wikiTags.push(w);if(!Utils.isDefined(p.doGetter)||p.doGetter){let funcName='getProperty'+p.p.substring(0,1).toUpperCase()+p.p.substring(1);this[funcName]=(dflt)=>{if(!Utils.isDefined(dflt))dflt=p.d;return this.getProperty(p.p,dflt);};}});},getWikiEditorTags:function(){let l=["label:Display Attributes",['fields=""','Many displays need a comma separated list of field ids'],"showMenu=\"true\"","showTitle=\"true\"","layoutHere=\"true\"","width=\"100%\"","height=\"400\"",'tooltip=${default}',['displayStyle="css styles"',"Specify styles for display"],"title=\"\"","titleBackground=\"color\"","textColor=\"color\"",["backgroundImage=\"\"","Image url to display in background"],"background=\"color\"",'showProgress=true','inlinelabel:Formatting','dateFormat=yyyy|yyyymmdd|yyyymmddhh|yyyymmddhhmm|yyyymm|yearmonth|monthdayyear|monthday|mon_day|mdy|hhmm','doFormatNumber=false','formatNumberDecimals=0','formatNumberScale=100','numberTemplate="${number}%"','&lt;field_id&gt;.&lt;format&gt;="..."',"label:Filter Data","filterFields=\"\"",'filterFieldsToPropagate=""',"hideFilterWidget=true",['filterHighlight=true',"Highlight the records"],['showFilterHighlight=false',"show/hide the filter highlight widget"],"acceptFilterEvent=false",['filterSliderImmediate=true',"Apply the change while sliding"],"&lt;field&gt;.filterValue=\"\"","&lt;field&gt;.filterValues=\"\"","&lt;field&gt;.filterMultiple=\"true\"","&lt;field&gt;.filterMultipleSize=\"5\"","&lt;field&gt;.filterLabel=\"\"","&lt;field&gt;.showFilterLabel=\"false\"","&lt;field&gt;.filterByStyle=\"background:white;\"","&lt;field&gt;.includeAll=false","&lt;field&gt;.filterSort=false","&lt;field&gt;.filterStartsWith=\"true\"","&lt;field&gt;.filterDisplay=\"menu|tab|button|image\"",'selectFields=prop:label:field1,...fieldN;prop:....',['match value','dataFilters="match(field=field,value=value,label=,enabled=);"','Only show records that match'],['not match value','dataFilters="notmatch(field=field,value=value,label=,enabled=);"','Only show records that dont match'],['no missing values','dataFilters="nomissing(field=field,label=,enabled=);"','Dont show missing values'],['less than','dataFilters="lessthan(field=field,value=value,label=,enabled=);"',''],['greater than','dataFilters="greaterthan(field=field,value=value,label=,enabled=);"',''],['equals','dataFilters="equals(field=field,value=value,label=,enabled=);"',''],['not equals','dataFilters="notequals(field=field,value=value,label=,enabled=); "',''],['filterDate=year',"Show a simple pull down menu to select a year to display"],['filterDateIncludeAll=true',"Include all years"],['startDate="yyyy-MM-dd"',"Filter data on date"],['endDate="yyyy-MM-dd"',"Filter data on date"],"inlinelabel:Convert Data",['binDate="day|month|year"',"Bin the dates"],'binType="count|average|total"',['derived data','convertData="derived(field=new_field_id, function=foo*bar);"','Add derived field'],['merge rows','convertData="mergeRows(keyFields=f1\\\\,f2, operator=count|sum|average, valueFields=);"',"Merge rows together"],["rotate data",'convertData="rotateData(includeFields=true,includeDate=true,flipColumns=true);"',"Rotate data"],["add percent",'convertData="addPercentIncrease(replaceValues=false);"',"Add percent increase"],["unfurl",'convertData="unfurl(headerField=,uniqueField=,valueFields=);"',"Unfurl"],"label:Color Attributes",["colors=\"color1,...,colorN\"","Comma separated array of colors"],["colorBy=\"\"","Field id to color by"],["colorByFields=\"\"","Show color by fields in a menu"],["colorByLog=\"true\"","Use a log scale for the color by"],["colorByMap=\"value1:color1,...,valueN:colorN\"","Specify colors for color by text values"],['colorByInverse=true','Inverse the values'],["colorTableAlpha=\"0.5\"","Set transparency on color table values"],['colorTableInverse=true',"Inverse the color table"],["colorByMin=\"value\"","Min scale value"],["colorByMax=\"value\"","Max scale value"],['showColorTable=false',"Display the color table"],'showColorTableDots=true','colorTableDotsDecimals=0','colorTableSide=bottom|right|left|top',['showColorTableStride=1','How many colors should be shown'],['colorByAllRecords=true',"use all records for color range"],'convertColorIntensity=true','intensitySourceMin=0','intensitySourceMax=100','intensityTargetMin=1','intensityTargetMax=0','convertColorAlpha=true','alphaSourceMin=0','alphaSourceMax=100','alphaTargetMin=0','alphaTargetMax=1',"inlinelabel:Animation Attributes","doAnimation=true","acceptDateRangeChange=true","animationDateFormat=\"yyyy\"","animationWindow=\"decade|halfdecade|year|month|week|day|hour|minute\"","animationMode=\"sliding|frame|cumulative\"","animationSpeed=\"500\"","animationLoop=\"true\"",'animationDwell=1000',"animationShowButtons=\"false\"","animationShowSlider=\"false\"","animationWidgetShort=\"true\""];return Utils.mergeLists(l,this._wikiTags);},defineSizeByProperties:function(){this.defineProperties([{inlineLabel:'Size By'},{p:'sizeBy',wikiValue:'field',tt:'Field to size points by'},{p:'sizeByLog',wikiValue:true,tt:'Use log scale for size by'},{p:'sizeByMap',wikiValue:'value1:size,...,valueN:size',tt:'Define sizes if sizeBy is text'},{p:'sizeByRadiusMin',wikiValue:'2',tt:'Scale size by'},{p:'sizeByRadiusMax',wikiValue:'20',tt:'Scale size by'},{p:'sizeByLegendSide',wikiValue:'bottom|top|left|right'},,{p:'sizeByLegendStyle'},{p:'sizeBySteps',wikiValue:'value1:size1,v2:s2,...',tt:'Use steps for sizes'},]);},getDisplayManager:function(){return this.displayManager;},getLayoutManager:function(){return this.getDisplayManager().getLayoutManager();},getAnimationEnabled:function(){return this.getProperty("doAnimation",false);},getAnimation:function(){if(!this.animationControl){this.animationControl=new DisplayAnimation(this,this.getAnimationEnabled());}
return this.animationControl;},propagateEvent:function(func,data){var dm=this.getDisplayManager();dm[func](this,data);},displayError:function(msg){this.displayHtml(HU.getErrorDialog(msg));},clearHtml:function(){this.displayHtml("");},displayHtml:function(html){this.jq(ID_DISPLAY_CONTENTS).html(html);},notifyEvent:function(func,source,data){if(this[func]==null){return;}
this[func].apply(this,[source,data]);},getColorTableHorizontal:function(){return this.getProperty("colorTableSide","bottom")=="bottom"||this.getProperty("colorTableSide","bottom")=="top";},displayColorTable:function(ct,domId,min,max,args){if(!args)args={};args.showColorTableDots=this.getProperty("showColorTableDots");args.decimals=this.getProperty("colorTableDotsDecimals",-1);args.horizontal=this.getColorTableHorizontal();args.stride=this.getProperty("showColorTableStride",1);Utils.displayColorTable(ct,this.getDomId(domId),min,max,args);if(!args||!args.colorByInfo)return;this.jq(domId).find(".display-colortable-slice").css("cursor","pointer");let _this=this;if(!this.originalColorRange){this.originalColorRange=[min,max];}
this.jq(domId).find(".display-colortable-slice").click(function(e){let val=$(this).attr("data-value");let popup=getTooltip();popupObject=popup;let html="";html+=HU.div([CLASS,"ramadda-menu-item","what","setmin"],"Set range min to "+Utils.formatNumber(val));html+=HU.div([CLASS,"ramadda-menu-item","what","setmax"],"Set range max to "+Utils.formatNumber(val));html+=HU.div([CLASS,"ramadda-menu-item","what","reset"],"Reset range");if(_this.getProperty("colorByLog")){html+=HU.div([CLASS,"ramadda-menu-item","what","togglelog"],"Use linear scale");}else{html+=HU.div([CLASS,"ramadda-menu-item","what","togglelog"],"Use log scale");}
html+=HU.div([CLASS,"ramadda-menu-item","what","reset"],"Reset range");html+=Utils.getColorTablePopup();popup.html(html);$(popup).find(".ramadda-colortable-select").click(function(){let ct=$(this).attr("colortable");if(ct){_this.setProperty("colorTable",ct);_this.forceUpdateUI();}});popup.show();popup.position({of:$(this),my:'left top',at:'left bottom',collision:"none none"});popup.find(".ramadda-menu-item").click(function(){let what=$(this).attr("what");if(what=="reset"){_this.setProperty("colorByMin",_this.originalColorRange[0]);_this.setProperty("colorByMax",_this.originalColorRange[1]);_this.setProperty("overrideColorRange",false);}else if(what=="togglelog"){if(!_this.getProperty("colorByLog"))
_this.setProperty("colorByLog",true);else
_this.setProperty("colorByLog",false);}else if(what=="setmin"){_this.setProperty("colorByMin",val);_this.setProperty("overrideColorRange",true);}else{_this.setProperty("colorByMax",val);_this.setProperty("overrideColorRange",true);}
_this.forceUpdateUI();});});},getUnhighlightColor:function(){return this.getProperty("unhighlightColor","#eee");},getColorList:function(){if(this.colorList&&this.colorList.length>0){return this.colorList;}
if(this.getProperty("colors")&&this.getProperty("colors")!="default"){var v=this.getProperty("colors");if(!Array.isArray(v)){v=v.split(",");}
this.colorList=v;}
if(!this.colorList||this.colorList.length==0){this.colorList=['blue','red','green','orange','fuchsia','aqua','navy','brown','cadetblue','blueviolet','coral','cornflowerblue','darkcyan','darkgoldenrod','darkorange','darkseagreen'];}
return this.colorList;},getColorTableName:function(name){let ct=null;if(name){ct=this.getProperty(name);}else{var colorBy=this.getProperty("colorBy");if(colorBy){ct=this.getProperty("colorTable."+colorBy);}
if(!ct){ct=this.getProperty("colorBar",this.getProperty("colorTable"));}}
if(ct=="none")return null;return ct;},getColorTable:function(justColors,name,dflt){var colorTable=this.getColorTableName(name);if(!colorTable){colorTable=dflt;}
var list;if(colorTable){let ct=null;if(colorTable.startsWith("colors:")){list=colorTable.substring("colors:".length).split(",");return this.convertColors(list);}
ct=Utils.ColorTables[colorTable];if(ct&&justColors){return this.convertColors(ct.colors);}
if(!ct&&name){return this.convertColors(colorTable.split(","));}
return ct;}
if(this.getProperty("colors")&&this.getProperty("colors")!="default"){var colors=this.getProperty("colors");if((typeof colors)!="object")colors=colors.split(",");return this.convertColors(colors);}
return null;},addAlpha:function(colors,alpha){if(!colors)return null;alpha=Utils.isDefined(alpha)?alpha:this.getProperty("colorTableAlpha");if(!alpha)return colors;colors=Utils.cloneList(colors);var ac=[];colors.forEach((c)=>{ac.push(Utils.addAlphaToColor(c,alpha));});return ac;},convertColors:function(colors){colors=this.addAlpha(colors);if(this.getProperty("colorTableInverse")){let tmp=[];for(let i=colors.length-1;i>=0;i--)
tmp.push(colors[i]);colors=tmp;}
return colors;},getColorByColors:function(records,dfltColorTable){var colorBy=this.getProperty("colorBy");if(!colorBy){return null;}
var colorByField=this.getFieldById(fields,colorBy);if(!colorByField){return null;}
var obj=this.getColumnValues(records,colorByField);var colors=this.getColorTable();if(!colors)colors=Utils.getColorTable(dfltColorTable||"blue_white_red");if(!colors)return null;var min=parseFloat(this.getProperty("colorByMin",obj.min));var max=parseFloat(this.getProperty("colorByMax",obj.max));if(colors.colors)colors=colors.colors;var range=max-min;var colorValues=[];for(var i=0;i<obj.values.length;i++){var value=obj.values[i];var percent=(value-min)/range;var index=parseInt(percent*colors.length);if(index>=colors.length)index=colors.length-1;else if(index<0)index=0;colorValues.push(colors[index]);}
return{colors:colorValues,min:min,max:max};},getDefaultGridByArgs:function(){let doHeatmap=this.getProperty("doHeatmap",false);let args={display:this,shape:this.getProperty("cellShape","rect"),color:this.getProperty("cellColor","blue"),stroke:!this.getProperty("cellFilled",true),cellSize:this.getProperty("cellSize",doHeatmap?0:4),cellSizeH:this.getProperty("cellSizeH",20),cell3D:this.getProperty("cell3D",false),cellShowText:this.getProperty("cellShowText",false),cellFont:this.getProperty("cellFont"),doHeatmap:doHeatmap,operator:this.getProperty("hm.operator","count"),filter:this.getProperty("hm.filter")};args.cellSizeX=+this.getProperty("cellSizeX",args.cellSize);args.cellSizeY=+this.getProperty("cellSizeY",args.cellSize);return args;},getIconMap:function(){var iconMap;var iconMapProp=this.getProperty("iconMap");if(iconMapProp){var toks=iconMapProp.split(",");iconMap={};for(var i=0;i<toks.length;i++){var toks2=toks[i].split(":");if(toks2.length>1){iconMap[toks2[0]]=toks2[1];}}}
return iconMap;},getColorByInfo:function(records,prop,colorByMapProp,defaultColorTable,propPrefix){var pointData=this.getData();if(pointData==null)return null;if(this.getProperty("colorByAllRecords")){records=pointData.getRecords();}
var fields=pointData.getRecordFields();return new ColorByInfo(this,fields,records,prop,colorByMapProp,defaultColorTable,propPrefix);},getColorByMap:function(prop){return Utils.parseMap(this.getProperty(prop||"colorByMap"));},toString:function(){return"RamaddaDisplay:"+this.type+" - "+this.getId();},getType:function(){return this.type;},getClass:function(suffix){if(suffix==null){return this.getBaseClass();}
return this.getBaseClass()+"-"+suffix;},getBaseClass:function(){return"display-"+this.getType();},setDisplayManager:function(cm){this.displayManager=cm;this.setDisplayParent(cm.getLayoutManager());},setContents:function(contents){let style="";contents=HU.div([ATTR_CLASS,"display-contents-inner display-"+this.getType()+"-inner",STYLE,style],contents);this.writeHtml(ID_DISPLAY_CONTENTS,contents);},addEntry:function(entry){this.entries.push(entry);},clearCachedData:function(){},setEntry:function(entry){this.entries=[];this.addEntry(entry);this.entry=entry;this.entryId=entry.getId();this.clearCachedData();if(this.properties.data){this.dataCollection=new DataCollection();var attrs={entryId:this.entryId,lat:this.getProperty("latitude"),lon:this.getProperty("longitude"),};this.properties.data=this.data=new PointData(entry.getName(),null,null,this.getRamadda().getRoot()+"/entry/show?entryid="+entry.getId()+"&output=points.product&product=points.json&max=5000",attrs);this.startProgress();this.data.loadData(this);}else{this.updateUI();}
var title="";if(this.getShowTitle()){this.jq(ID_TITLE).html(entry.getName());}},getTextColor:function(property){if(property)return this.getProperty(property,this.getProperty("textColor"));return this.getProperty("textColor","#000");},getTitleHtml:function(title){var titleToShow="";if(this.getShowTitle()){var titleStyle=HU.css("color",this.getTextColor("titleColor"));var bg=this.getProperty("titleBackground");if(bg)titleStyle+="background:"+bg+"; padding:2px;padding-right:6px;padding-left:6px;";titleToShow=this.getShowTitle()?this.getDisplayTitle(title):"";if(this.entryId)
titleToShow=HU.href(this.getRamadda().getEntryUrl(this.entryId),titleToShow,[ATTR_CLASS,"display-title",ATTR_ID,this.getDomId(ID_TITLE),STYLE,titleStyle]);}
return titleToShow;},handleEventMapBoundsChanged:function(source,args){if(this.getProperty("acceptBoundsChange")){this.filterBounds=args.bounds;this.updateUI();}},handleEventFieldValueSelected:function(source,args){this.setProperty("filterPattern",args.value);this.setProperty("patternFilterField",args.field.getId());this.updateUI();},setDateRange:function(min,max,doDay){this.minDateObj=min;this.maxDateObj=max;this.dateRangeDoDay=doDay;},handleDateRangeChanged:function(source,prop){this.setDateRange(prop.minDate,prop.maxDate);if(this.getAnimation().getEnabled()){this.getAnimation().setDateRange(prop.minDate,prop.maxDate);}
this.haveCalledUpdateUI=false;this.dataFilterChanged();},handleEventPropertyChanged:function(source,prop){let debug=displayDebug.handleEventPropertyChanged;if(prop.property=="dateRange"){if(this.getProperty("acceptDateRangeChange")){this.handleDateRangeChanged(source,prop);}
return;}
if(prop.property=="macroValue"){if(!this.getProperty("acceptRequestChangeEvent",true)){return;}
if(prop.entryId!=this.entryId)return;if(prop.what=="min")
this.jq("macro_"+prop.id+"_min").val(prop.value);else if(prop.what=="max")
this.jq("macro_"+prop.id+"_max").val(prop.value);else if(prop.what=="from")
this.jq("macro_"+prop.id+"_from").val(prop.value);else if(prop.what=="to")
this.jq("macro_"+prop.id+"_to").val(prop.value);else
this.jq("macro_"+prop.id).val(prop.value);if(debug)
console.log(this.getId()+" event-reloading");this.reloadData();return;}
if(prop.property=="filterValue"){if(!this.getProperty("acceptFilterEvent",true)){return;}
this.haveCalledUpdateUI=false;var widgetId=this.getFilterId(prop.fieldId);if(prop.id&&prop.id.endsWith("date1")){widgetId+="_date1";}else if(prop.id&&prop.id.endsWith("date2")){widgetId+="_date2";}
this.settingFilterValue=true;if(prop.fieldId=="_highlight"){this.jq(ID_FILTER_HIGHLIGHT).val(prop.value);this.setProperty("filterHighlight",prop.value=="highlight");}else if(Utils.isDefined(prop.value2)){$("#"+widgetId+"_min").val(prop.value);$("#"+widgetId+"_min").attr("data-value",prop.value);$("#"+widgetId+"_max").val(prop.value2);$("#"+widgetId+"_max").attr("data-value",prop.value2);}else{var widget=$("#"+widgetId);if(widget.attr("isCheckbox")){var on=widget.attr("onValue");var off=widget.attr("offValue");widget.prop('checked',prop.value.includes(on));}else{widget.val(prop.value);}
widget.attr("data-value",prop.value);if(widget.attr("isButton")){widget.find(".display-filter-button").removeClass("display-filter-button-selected");widget.find("[value='"+prop.value+"']").addClass("display-filter-button-selected");}}
this.settingFilterValue=false;this.dataFilterChanged();return;}
this.setProperty(prop.property,prop.value);this.updateUI();},handleEventRecordHighlight:function(source,args){if(this.getAnimation().getEnabled()&&!args.skipAnimation){this.getAnimation().handleEventRecordHighlight(source,args);}},handleEventRecordSelection:function(source,args){this.selectedRecord=args.record;if(this.selectedRecord&&this.getProperty("colorThresholdField")){this.haveCalledUpdateUI=false;this.updateUI();}
if(!source.getEntries){return;}
var entries=source.getEntries();for(var i=0;i<entries.length;i++){var entry=entries[i];var containsEntry=this.getEntries().indexOf(entry)>=0;if(containsEntry){this.highlightEntry(entry);break;}}},areaClear:function(){this.getDisplayManager().notifyEvent("handleEventAreaClear",this);},handleEventEntryMouseover:function(source,args){},handleEventEntryMouseout:function(source,args){},handleEventEntrySelection:function(source,args){var containsEntry=this.getEntries().indexOf(args.entry)>=0;if(!containsEntry){return;}
if(args.selected){this.jq(ID_TITLE).addClass("display-title-select");}else{this.jq(ID_TITLE).removeClass("display-title-select");}},highlightEntry:function(entry){this.jq(ID_TITLE).addClass("display-title-select");},getEntries:function(){return this.entries;},getDisplayEntry:async function(callback){var entries=this.getEntries();if(entries!=null&&entries.length>0){return Utils.call(callback,entries[0]);}
if(this.entryId){var entry;await this.getRamadda().getEntry(this.entryId,e=>{entry=e
Utils.call(callback,entry);});}else{Utils.call(callback,null);}},hasEntries:function(){return this.entries!=null&&this.entries.length>0;},getWaitImage:function(){return HU.image(ramaddaBaseUrl+"/icons/progress.gif");},getLoadingMessage:function(msg){if(!msg)msg=this.getProperty("loadingMessage","Loading data...");if(msg=="")return"";return HU.div([STYLE,HU.css("text-align","center")],this.getMessage("&nbsp;"+msg));},reloadData:function(){this.startProgress();this.haveCalledUpdateUI=false;this.data.loadData(this,true);},getMessage:function(msg){return HU.div([ATTR_CLASS,"display-output-message"],msg);},getFieldValue:function(id,dflt){var jq=$("#"+id);if(jq.length>0){return jq.val();}
return dflt;},getFooter:function(){return HU.div([ATTR_ID,this.getDomId(ID_FOOTER),ATTR_CLASS,"display-footer"],HU.leftRight(HU.div([ATTR_ID,this.getDomId(ID_FOOTER_LEFT),ATTR_CLASS,"display-footer-left"],""),HU.div([ATTR_ID,this.getDomId(ID_FOOTER_RIGHT),ATTR_CLASS,"display-footer-right"],"")));},shouldSkipField:function(field){if(this.skipFields&&!this.skipFieldsList){this.skipFieldsList=this.skipFields.split(",");}
if(this.skipFieldsList){return this.skipFieldsList.indexOf(field.getId())>=0;}
return false;},fieldSelected:function(event){this.userHasSelectedAField=true;this.selectedFields=null;this.overrideFields=null;this.removeProperty(PROP_FIELDS);this.fieldSelectionChanged();if(event.shiftKey){var fields=this.getSelectedFields();this.propagateEvent("handleEventFieldsSelected",fields);}},addFieldsCheckboxes:function(argFields){if(!this.hasData()){return;}
var fixedFields=this.getProperty(PROP_FIELDS);if(fixedFields!=null){if(fixedFields.length==0){fixedFields=null;}}
var html="";var checkboxClass=this.getId()+"_checkbox";var groupByClass=this.getId()+"_groupby";var dataList=this.dataCollection.getList();if(argFields!=null){this.overrideFields=[];}
var seenLabels={};var allFields=this.dataCollection.getList()[0].getRecordFields();var badFields={};var flags=null;for(var collectionIdx=0;collectionIdx<dataList.length;collectionIdx++){var pointData=dataList[collectionIdx];var fields=this.getFieldsToSelect(pointData);if(this.canDoGroupBy()){var allFields=pointData.getRecordFields();var cnt=0;for(i=0;i<allFields.length;i++){var field=allFields[i];if(field.getType()!="string")continue;if(cnt==0){html+=HU.div([ATTR_CLASS,"display-dialog-subheader"],"Group By");html+=HU.open(TAG_DIV,[ATTR_CLASS,"display-fields"]);var on=this.groupBy==null||this.groupBy=="";html+=HU.tag(TAG_DIV,[ATTR_TITLE,"none"],HU.radio("none",this.getDomId("groupby"),groupByClass,"none",!on)+" None");}
cnt++;var on=this.groupBy==field.getId();var idBase="groupby_"+collectionIdx+"_"+i;field.radioId=this.getDomId(idBase);html+=HU.tag(TAG_DIV,[ATTR_TITLE,field.getId()],HU.radio(field.radioId,this.getDomId("groupby"),groupByClass,field.getId(),on)+" "+field.getUnitLabel()+" ("+field.getId()+")");}
if(cnt>0){html+=HU.close(TAG_DIV);}}
if(fields.length>0){var selected=this.getSelectedFields([]);var selectedIds=[];for(i=0;i<selected.length;i++){selectedIds.push(selected[i].getId());}
var disabledFields="";html+=HU.div([ATTR_CLASS,"display-dialog-subheader"],"Displayed Fields");html+=HU.open(TAG_DIV,[ATTR_CLASS,"display-fields"]);for(var tupleIdx=0;tupleIdx<fields.length;tupleIdx++){var field=fields[tupleIdx];var idBase="cbx_"+collectionIdx+"_"+tupleIdx;field.checkboxId=this.getDomId(idBase);var on=false;var hasValues=(flags?flags[field.getIndex()]:true);if(argFields!=null){for(var fIdx=0;fIdx<argFields.length;fIdx++){if(argFields[fIdx].getId()==field.getId()){on=true;this.overrideFields.push(field.getId());break;}}}else if(selectedIds.length>0){on=selectedIds.indexOf(field.getId())>=0;}else if(fixedFields!=null){on=(fixedFields.indexOf(field.getId())>=0);if(!on){on=(fixedFields.indexOf("#"+(tupleIdx+1))>=0);}
}else if(this.overrideFields!=null){on=this.overrideFields.indexOf(field.getId())>=0;if(!on){on=(this.overrideFields.indexOf("#"+(tupleIdx+1))>=0);}
}else{if(this.selectedCbx.indexOf(field.getId())>=0){on=true;}else if(this.selectedCbx.length==0){on=(i==0);}
}
var label=field.getUnitLabel();if(seenLabels[label]){label=label+" "+seenLabels[label];seenLabels[label]++;}else{seenLabels[label]=1;}
if(!hasValues){disabledFields+=HU.div([],label);}else{if(field.derived){label+=" (derived)";}
var widget;if(this.canDoMultiFields()){widget=HU.checkbox(field.checkboxId,[CLASS,checkboxClass],on);}else{widget=HU.radio(field.checkboxId,"field_radio",checkboxClass,"",on);}
html+=HU.tag(TAG_DIV,[ATTR_TITLE,field.getId()],widget+" "+label);}
}}
if(disabledFields!=""){html+=HU.div([STYLE,HU.css("border-top","1px #888  solid")],"<b>No Data Available</b>"+disabledFields);}
html+=HU.close(TAG_DIV);}
this.writeHtml(ID_FIELDS,html);this.userHasSelectedAField=false;var theDisplay=this;$("."+checkboxClass).click(function(event){theDisplay.fieldSelected(event);});$("."+groupByClass).change(function(event){theDisplay.groupBy=$(this).val();if(theDisplay.displayData){theDisplay.displayData();}});},fieldSelectionChanged:function(){var name="the display";this.setDisplayTitle();if(this.displayData){this.clearCachedData();this.displayData();}},defaultSelectedToAll:function(){return false;},setSelectedFields:function(fields){this.clearCachedData();this.selectedFields=fields;this.addFieldsCheckboxes(fields);},getSelectedFields:function(dfltList){let debug=displayDebug.getSelectedFields;if(debug)
console.log(this.type+".getSelectedFields");if(this.getProperty("binDate")){var binType=this.getProperty("binType","total");var binCount=binType=="count";if(binCount){var fields=[];fields.push(new RecordField({id:binType,label:this.getProperty("binDateLabel",this.getProperty("binCountLabel","Count")),type:"double",chartable:true}));return fields;}}
this.debugSelected=debug;this.lastSelectedFields=this.getSelectedFieldsInner(dfltList);if(debug)
console.log("\tsetting lastSelectedFields:"+this.lastSelectedFields);var fixedFields=this.getProperty(PROP_FIELDS);this.setDisplayTitle();if(this.getProperty("binDate")){var binType=this.getProperty("binType","total");let fields=[];this.lastSelectedFields.forEach(field=>{if(!field.isNumeric()){fields.push(field);}else{const prefix=binType;if(field.getId().startsWith(prefix)){fields.push(field);}else{fields.push(new RecordField({id:prefix+"_"+field.getId(),index:field.getIndex(),label:this.getProperty("binDateLabel",Utils.camelCase(binType)+" of "+field.getLabel()),type:"double",chartable:field.isChartable()}));}}});this.lastSelectedFields=fields;}
return this.lastSelectedFields;},getSelectedFieldsInner:function(dfltList){if(this.debugSelected){console.log("getSelectedFieldsInner dflt:"+(dfltList?dfltList:"null"));console.log("\tlast selected = "+this.lastSelectedFields);}
if(this.selectedFields){if(this.debugSelected)
console.log("\treturning this.selectedFields:"+this.selectedFields);return this.selectedFields;}
var df=[];var dataList=this.dataCollection.getList();var fixedFields=this.getProperty(PROP_FIELDS);if(fixedFields&&(typeof fixedFields)=="string"){fixedFields=fixedFields.split(",");}
let aliases={};var tmp=this.getProperty("fieldAliases");if(tmp){tmp.split(",").forEach(tok=>{[name,alias]=tok.split(":");aliases[alias]=name;});}
for(var collectionIdx=0;collectionIdx<dataList.length;collectionIdx++){var pointData=dataList[collectionIdx];var fields=this.getFieldsToSelect(pointData);if(fixedFields!=null&&fixedFields.length>0){if(this.debugSelected)
console.log("\thave fixed fields:"+fixedFields.length);for(var i=0;i<fixedFields.length;i++){var sfield=fixedFields[i];var field=this.getFieldById(fields,sfield);if(field)df.push(field);}}}
if(fixedFields!=null&&fixedFields.length>0){if(this.debugSelected)
console.log("\tfrom fixed:"+df.length);return df;}
var fieldsToSelect=null;var firstField=null;this.selectedCbx=[];var cbxExists=false;for(var collectionIdx=0;collectionIdx<dataList.length;collectionIdx++){var pointData=dataList[collectionIdx];fieldsToSelect=this.getFieldsToSelect(pointData);for(i=0;i<fieldsToSelect.length;i++){var field=fieldsToSelect[i];if(firstField==null&&field.isNumeric())firstField=field;var idBase="cbx_"+collectionIdx+"_"+i;var cbxId=this.getDomId(idBase);var cbx=$("#"+cbxId);if(cbx.length>0){cbxExists=true;}else{continue;}
if(cbx.is(':checked')){this.selectedCbx.push(field.getId());df.push(field);}}}
if(df.length==0&&!cbxExists){if(this.lastSelectedFields&&this.lastSelectedFields.length>0){if(this.debugSelected)
console.log("\tlastSelectedFields:"+this.lastSelectedFields);return this.lastSelectedFields;}}
if(df.length==0){df=this.getDefaultSelectedFields(fieldsToSelect,dfltList);if(this.debugSelected)
console.log("\tusing default selected:"+df);}
return df;},getDefaultSelectedFields:function(fields,dfltList){let debug=displayDebug.getDefaultSelectedFields;if(this.defaultSelectedToAll()&&this.allFields!=null){var tmp=[];for(i=0;i<this.allFields.length;i++){var field=this.allFields[i];if(!field.isFieldGeo()){tmp.push(field);}}
if(debug)
console.log("\treturning this.allFields:"+tmp);return tmp;}
if(dfltList!=null){if(debug)
console.log("\treturning dfltList:"+dfltList);return dfltList;}
for(i=0;i<fields.length;i++){var field=fields[i];if(field.isNumeric()&&!field.isFieldGeo())return[field];}
return[];},sortRecords:function(records,sortFields){if(!sortFields){sortFields=this.getFieldsByIds(null,this.getProperty("sortFields","",true));}
if(sortFields.length==0)return records;records=Utils.cloneList(records);var sortAscending=this.getProperty("sortAscending",true);let cnt=0;records.sort((a,b)=>{var row1=this.getDataValues(a);var row2=this.getDataValues(b);var result=0;for(var i=0;i<sortFields.length;i++){var sortField=sortFields[i];var v1=row1[sortField.getIndex()];var v2=row2[sortField.getIndex()];if(sortField.isNumeric()){if(v1<v2)result=sortAscending?-1:1;else if(v1>v2)result=sortAscending?1:-1;else result=0;}else{result=String(v1).localeCompare(String(v2));if(!sortAscending)result=-result;}
if(result!=0)break;}
return result;});return records;},getFieldById:function(fields,id){if(!id)return null;id=String(id).trim();if(!fields){let pointData=this.getData();if(pointData==null)return null;fields=pointData.getRecordFields();}
let aliases={};var tmp=this.getProperty("fieldAliases");if(tmp){tmp.split(",").forEach(tok=>{[name,alias]=tok.split(":");aliases[alias]=name;});}
var alias=aliases[id];for(let i=0;i<fields.length;i++){let field=fields[i];if(field.getId()==id||id==("#"+(i+1))||field.getId()==alias){return field;}}
return null;},getFieldsByIds:function(fields,ids){var result=[];if(!ids){return result;}
if((typeof ids)=="string")
ids=ids.split(",");if(!fields){var pointData=this.getData();if(pointData==null){return null;}
fields=pointData.getRecordFields();}
for(var i=0;i<ids.length;i++){var f=this.getFieldById(fields,ids[i]);if(f)result.push(f);}
return result;},getFieldOfType:function(fields,type){fields=this.getFieldsOfType(fields,type);if(fields.length==0)return null;return fields[0];},getFieldsOfType:function(fields,type){if(!fields){var pointData=this.getData();if(pointData==null)return null;fields=pointData.getRecordFields();}
var list=[];var numeric=(type=="numeric");var isString=(type=="string");for(a in fields){var field=fields[a];if(field.isRecordDate())continue;if(type==null)return field;if(numeric){if(field.isFieldNumeric()){list.push(field);}}else if(isString){if(field.isFieldString()){list.push(field);}}else if(field.getType()==type){list.push(field);}}
return list;},getDateValues:function(records){var dates=[];records.forEach(r=>{dates.push(r.getDate());});return dates;},getColumnValues:function(records,field){var values=[];var min=Number.MAX_VALUE;var max=Number.MIN_VALUE;for(var rowIdx=0;rowIdx<records.length;rowIdx++){var record=records[rowIdx];var row=record.getData();var value=row[field.getIndex()];values.push(value);if(Utils.isNumber(value)&&!isNaN(value)){min=Math.min(min,value);max=Math.max(max,value);}}
return{values:values,min:min,max:max};},requiresGrouping:function(){return false;},makeTree:function(records){if(records==null){var pointData=this.getData();if(pointData==null)return null;records=pointData.getRecords();}
let treeTemplate=this.getProperty("treeTemplate");let treeTooltip=this.getProperty("treeTooltip");let roots=[];let idToNode={};let nodes=[];let idToRoot={};var labelField=this.getFieldById(null,this.getProperty("labelField"));var nodeFields=this.getFieldsByIds(null,this.getProperty("nodeFields"));let treeRootLabel=this.getProperty("treeRoot");let treeRoot=null;if(treeRootLabel){treeRoot={id:treeRootLabel,label:treeRootLabel,children:[],parent:null};roots.push(treeRoot);}
if(nodeFields.length>0){let cnt=0;let valueToNode={};let parentId="";records.map(r=>{var label=labelField==null?id:r.getValue(labelField.getIndex());let parentId=null;let parentNode=null;nodeFields.map(nodeField=>{let id=r.getValue(nodeField.getIndex());let nodeId=parentId?parentId+"-"+id:id;let tmpNode=idToNode[nodeId];if(!tmpNode){tmpNode={id:nodeId,label:id,children:[],parent:parentNode};idToNode[nodeId]=tmpNode;if(!parentNode){if(treeRoot){tmpNode.parent=treeRoot;treeRoot.children.push(tmpNode);}else{roots.push(tmpNode);}}
if(parentNode){parentNode.children.push(tmpNode);}}
parentId=nodeId;parentNode=tmpNode;});var id="leaf"+(cnt++);var node={id:id,label:label,children:[],record:r,parent:parentNode};parentNode.children.push(node);idToNode[id]=node;nodes.push(node);});return roots;}
var parentField=this.getFieldById(null,this.getProperty("parentField"));var idField=this.getFieldById(null,this.getProperty("idField"));if(!parentField){throw new Error("No parent field specified");return;}
if(!idField){throw new Error("No id field specified");}
records.map(r=>{var parent=r.getValue(parentField.getIndex());var id=r.getValue(idField.getIndex());var label=labelField==null?id:r.getValue(labelField.getIndex());var node={id:id,label:label,children:[],record:r,parentId:parent,parent:null};if(treeTemplate){node.display=this.getRecordHtml(r,null,treeTemplate);}
if(treeTooltip){node.tooltip=this.getRecordHtml(r,null,treeTooltip);}
idToNode[id]=node;nodes.push(node);if(parent==""){idToRoot[id]=node;if(treeRoot){node.parent=treeRoot;node.parentId=treeRoot.id;treeRoot.children.push(node);}else{roots.push(node);}}});nodes.map(node=>{let parentNode=idToNode[node.parentId];if(!parentNode){if(!idToRoot[node.id]){throw new Error("No parent :"+node.parentId+" for node:"+node.label);}
return;}
node.parent=parentNode;parentNode.children.push(node);});return roots;},getSegments:function(){var segments=this.getProperty("timeSegments");if(!segments)return null;var result=[];var segmentList=segments.split(",");segmentList.map((tok,segmentIdx)=>{var toks=tok.split(";");var name=toks[0];var start=Utils.parseDate(toks[1],false);var end=Utils.parseDate(toks[2],false);result.push({name:name,start:start,end:end});});return result;},convertPointData:function(pointData){let originalPointData=pointData;let segments=this.getSegments();if(segments){let dataList=pointData.getRecords();let newData=[];let header=[];newData.push(header);var rowIdx=0;segments.map((segment,segmentIdx)=>{var name=segment.name;header.push(name);var start=segment.start;var end=segment.end;var cnt=1;for(;rowIdx<dataList.length;rowIdx++){var record=dataList[rowIdx];if(record.getTime()<start.getTime()){continue;}
if(record.getTime()>end.getTime()){break;}
var value=record.getValue(1);let row=null;if(cnt>=newData.length){row=[];for(var sidx=0;sidx<segments.length;sidx++)row.push(NaN);newData.push(row);}else{row=newData[cnt];}
row[segmentIdx]=value;cnt++;}});pointData=convertToPointData(newData);pointData.entryId=originalPointData.entryId;}
try{pointData=new CsvUtil().process(this,pointData,this.getProperty("convertData"));}catch(exc){this.setErrorMessage(exc);return null;}
return pointData;},requiresGeoLocation:function(){return false;},checkDataFilters:function(dataFilters,record){if(!dataFilters){return true;}
for(var i=0;i<dataFilters.length;i++){if(!dataFilters[i].isRecordOk(record))return false;}
return true;},getDataFilters:function(v){return DataUtils.getDataFilters(this,v||this.getProperty("dataFilters"));},filterData:function(records,fields,doGroup,skipFirst){let debug=displayDebug.filterData;let highlight=this.getProperty("filterHighlight",false);var startDate=this.getProperty("startDate");var endDate=this.getProperty("endDate");if(startDate){this.startDateObject=Utils.createDate(startDate);}
if(endDate){this.endDateObject=Utils.createDate(endDate);}
let filterDate=this.getProperty("filterDate");if(filterDate){let date=$("#"+this.getFilterId(ID_FILTER_DATE)).val();if(date){if(date=="all"){this.setDateRange(null,null);}else{date=new Date(date);if(filterDate=="year"){this.setDateRange(new Date(date.getFullYear()+"-01-01"),new Date(date.getFullYear()+"-12-31"));}else if(filterDate=="day"){let f=date.getUTCFullYear()+"-"+(date.getUTCMonth()+1)+"-"+date.getUTCDate();let dttm=new Date(f);this.setDateRange(dttm,dttm,true);}else{}}}}
var pointData=this.getData();if(!records){if(pointData==null)return null;records=pointData.getRecords();}
if(!fields){fields=pointData.getRecordFields();}
if(doGroup||this.requiresGrouping()){records=pointData.extractGroup(this.dataGroup,records);}
if(debug)console.log("R-1:"+records.length);if(this.getProperty("showLastDate")){let max=null;let tmp=[];records.forEach(r=>{if(!r.getTime())return;if(!max)max=r.getTime();else max=r.getTime().getTime()>max.getTime()?r.getTime():max;});if(max)
records.forEach(record=>{if(record.getTime().getTime()==max.getTime())tmp.push(record);});records=tmp;}
records.forEach(r=>{r.clearHighlight(this);});records=records.filter(record=>{var date=record.getDate();if(!date)return true;return this.dateInRange(date);});if(debug)console.log("filter Fields:"+this.filters.length+" r:"+records.length);if(this.filters.length){let newData=[];this.filters.forEach(f=>f.prepareToFilter());records.forEach((record,rowIdx)=>{var ok=true;for(var i=0;i<this.filters.length&&ok;i++){var filter=this.filters[i];ok=filter.isRecordOk(record);}
if(skipFirst&&rowIdx==0){ok=true;}
if(highlight){newData.push(record);record.setHighlight(this,ok);}else{record.clearHighlight(this);if(ok){newData.push(record);}}});records=newData;}
if(debug)console.log("R-2:"+records.length);var stride=parseInt(this.getProperty("stride",-1));if(stride<0){var maxSize=parseInt(this.getProperty("maxDisplayedPoints",-1));if(maxSize>0&&records.length>0){stride=1;while(records.length/stride>maxSize){stride++;}}}
if(stride>0){var list=[];var cnt=0;for(var i=0;i<records.length;i+=(stride+1)){list.push(records[i]);}
records=list;if(debug)console.log("R-3:"+records.length);}
if(this.getProperty("binDate")){let what=this.getProperty("binDate");let binType=this.getProperty("binType","total");let binCount=binType=="count";let binned=[];let record=records[0];let map={};let counts={};for(var i=0;i<records.length;i++){let record=records[i];var tuple=this.getDataValues(record);var key;var baseDate=null
if(what=="month"){key=record.getDate().getUTCFullYear()+"-"+(record.getDate().getUTCMonth()+1);}else if(what=="day"){key=record.getDate().getUTCFullYear()+"-"+(record.getDate().getUTCMonth()+1)+"-"+record.getDate().getUTCDate();}else if(what=="week"){var week=+Utils.formatDateWeek(record.getDate());key=record.getDate().getUTCFullYear()+"-"+week;var d=(1+(week-1)*7);baseDate=new Date(record.getDate().getUTCFullYear(),0,d);}else{key=record.getDate().getUTCFullYear()+"";}
if(!Utils.isDefined(map[key])){counts[key]=1;var date=baseDate;if(!baseDate){date=Utils.parseDate(key);}
var data=Utils.cloneList(record.getData());if(binCount){for(k=0;k<data.length;k++)data[k]=1;}
var newRecord=new PointRecord(fields,record.getLatitude(),record.getLongitude(),record.getElevation(),date,data);map[key]=data;binned.push(newRecord);}else{counts[key]++;var tuple1=map[key];if(binCount){for(k=0;k<tuple1.length;k++)tuple1[k]++;continue;}
var tuple2=record.getData();for(var j=0;j<tuple2.length;j++){var v=tuple2[j];if((typeof v)!="number")continue;if(isNaN(v))continue;if(isNaN(tuple1[j]))tuple1[j]=v;else tuple1[j]+=v;}}}
if(binType=="average"){for(key in counts){var tuple=map[key];for(var j=0;j<tuple.length;j++){var v=tuple[j];if((typeof v)!="number")continue;if(isNaN(v))continue;tuple[j]=v/counts[key];}}}
records=binned;}
if(this.requiresGeoLocation()){records=records.filter(r=>{return r.hasLocation();});}
let dataFilters=this.getDataFilters();if(dataFilters.length){records=records.filter((r,idx)=>{if(!this.checkDataFilters(dataFilters,r))return false;return true;});}
records=this.sortRecords(records);if(this.getProperty("uniqueField")){let ufield=this.getFieldById(null,this.getProperty("uniqueField"));let umap={};let ulist=[];for(var i=records.length-1;i>=0;i--){var record=records[i];var v=record.getValue(ufield.getIndex());if(!Utils.isDefined(umap[v])){umap[v]=true;ulist.push(record);}}
records=ulist;}
this.recordToIndex={};this.indexToRecord={};for(var i=0;i<records.length;i++){var record=records[i];this.recordToIndex[record.getId()]=i;this.indexToRecord[i]=record;}
if(debug)
console.log("filtered:"+records.length);return records;},canDoGroupBy:function(){return false;},canDoMultiFields:function(){return true;},useChartableFields:function(){return true;},getFieldsToSelect:function(pointData){if(this.useChartableFields())
return pointData.getChartableFields(this);return pointData.getRecordFields();},getGet:function(){return"getRamaddaDisplay('"+this.getId()+"')";},showWikiText:function(type){var wiki="";wiki+=this.getWikiText();for(var i=0;i<this.displays.length;i++){var display=this.displays[i];if(display.getIsLayoutFixed()){continue;}
wiki+=display.getWikiText();}
popupObject=getTooltip();wiki=wiki.replace(/</g,"&lt;").replace(/>/g,"&gt;");wiki=HU.pre([STYLE,HU.css("max-width","500px","max-height","400px","overflow-x","auto","overflow-y","auto")],wiki);this.showDialog(wiki);},publish:function(type){if(type==null)type="wikipage";var args=[];var name=prompt("Name","");if(name==null)return;args.push("name");args.push(name);args.push("type");args.push(type);var desc="";var wiki="";if(type=="wikipage"){wiki+="+section label=\"{{name}}\"\n${extra}\n";}else if(type=="blogentry"){wiki="<wiki>\n";}
wiki+=desc;wiki+=this.getWikiText();for(var i=0;i<this.displays.length;i++){var display=this.displays[i];if(display.getIsLayoutFixed()){continue;}
wiki+=display.getWikiText();}
if(type=="wikipage"){wiki+="-section\n\n";}else if(type=="blogentry"){}
var from="";var entries=this.getChildEntries();for(var i=0;i<entries.length;i++){var entry=entries[i];from+=entry.getId()+",";}
if(entries.length>0){args.push("entries");args.push(from);}
if(type=="media_photoalbum"){wiki="";}
args.push("description_encoded");args.push(window.btoa(wiki));var url=HU.getUrl(ramaddaBaseUrl+"/entry/publish",args);window.open(url,'_blank');},getChildEntries:function(includeFixed){var seen={};var allEntries=[];for(var i=0;i<this.displays.length;i++){var display=this.displays[i];if(!includeFixed&&display.getIsLayoutFixed()){continue;}
if(display.getEntries){var entries=display.getEntries();if(entries){for(var entryIdx=0;entryIdx<entries.length;entryIdx++){if(seen[entries[entryIdx].getId()]!=null){continue;}
seen[entries[entryIdx].getId()]=true;allEntries.push(entries[entryIdx]);}}}}
return allEntries;},copyDisplayedEntries:function(){var allEntries=[];for(var i=0;i<this.displays.length;i++){var display=this.displays[i];if(display.getIsLayoutFixed()){continue;}
if(display.getEntries){var entries=display.getEntries();if(entries){for(var entryIdx=0;entryIdx<entries.length;entryIdx++){allEntries.push(entries[entryIdx]);}}}}
return this.copyEntries(allEntries);},defineWikiAttributes:function(list){for(var i=0;i<list.length;i++){if(this.wikiAttrs.indexOf(list[i])<0){this.wikiAttrs.push(list[i]);}}},getWikiAttributes:function(attrs){for(var i=0;i<this.wikiAttrs.length;i++){var v=this[this.wikiAttrs[i]];if(Utils.isDefined(v)){attrs.push(this.wikiAttrs[i]);attrs.push(v);}}},getWikiText:function(){var attrs=["layoutHere","false","type",this.type,"column",this.getColumn(),"row",this.getRow()];this.getWikiAttributes(attrs);var entryId=null;if(this.getEntries){var entries=this.getEntries();if(entries&&entries.length>0){entryId=entries[0].getId();}}
if(!entryId){entryId=this.entryId;}
if(entryId){attrs.push("entry");attrs.push(entryId);}
var wiki="{{display "+HU.attrs(attrs)+"}}\n\n"
return wiki;},copyEntries:function(entries){var allEntries=[];var seen={};for(var entryIdx=0;entryIdx<entries.length;entryIdx++){var entry=entries[entryIdx];if(seen[entry.getId()]!=null)continue;seen[entry.getId()]=entry;allEntries.push(entry);}
var from="";for(var i=0;i<allEntries.length;i++){var entry=allEntries[i];from+=entry.getId()+",";}
var url=ramaddaBaseUrl+"/entry/copy?action.force=copy&from="+from;window.open(url,'_blank');},entryHtmlHasBeenDisplayed:async function(entry){if(entry.getIsGroup()){var theDisplay=this;var callback=function(entries){var html=HU.open(TAG_OL,[ATTR_CLASS,"display-entrylist-list",ATTR_ID,theDisplay.getDomId(ID_LIST)]);html+=theDisplay.getEntriesTree(entries);html+=HU.close(TAG_OL);theDisplay.jq(ID_GROUP_CONTENTS+entry.getIdForDom()).html(html);theDisplay.addEntrySelect();};await entry.getChildrenEntries(callback);}},getEntryHtml:function(entry,props){var dfltProps={showHeader:true,headerRight:false,showDetails:this.getShowDetails()};$.extend(dfltProps,props);props=dfltProps;var menu=this.getEntryMenuButton(entry);var html="";if(props.showHeader){var left=menu+" "+entry.getLink(entry.getIconImage()+" "+entry.getName());if(props.headerRight)html+=HU.leftRight(left,props.headerRight);else html+=left;}
var divid=HU.getUniqueId("entry_");html+=HU.div([ID,divid],"");if(false){var url=this.getRamadda().getRoot()+"/entry/show?entryid="+entry.getId()+"&decorate=false&output=metadataxml&details=true";$("#"+divid).load(url,function(){alert("Load was performed.");});}
var desc=entry.getDescription();if(desc)
desc=desc.replace(/\n/g,"<br>");else
desc="";html+=desc;var metadata=entry.getMetadata();if(entry.isImage()){var img=HU.tag(TAG_IMG,["src",entry.getResourceUrl(),ATTR_CLASS,"display-entry-image"]);html+=HU.href(entry.getResourceUrl(),img)+"<br>";}else{for(var i=0;i<metadata.length;i++){if(metadata[i].type=="content.thumbnail"){var image=metadata[i].value.attr1;var url;if(image.indexOf("http")==0){url=image;}else{url=ramaddaBaseUrl+"/metadata/view/"+image+"?element=1&entryid="+entry.getId()+"&metadata_id="+metadata[i].id+"&thumbnail=false";}
html+=HU.image(url,[ATTR_CLASS,"display-entry-thumbnail"]);}}}
if(entry.getIsGroup()){html+=HU.div([ATTR_ID,this.getDomId(ID_GROUP_CONTENTS+entry.getIdForDom())],"");}
html+=HU.formTable();if(props.showDetails){if(entry.url){html+=HU.formEntry("URL:",HU.href(entry.url,entry.url));}
if(entry.remoteUrl){html+=HU.formEntry("URL:",HU.href(entry.remoteUrl,entry.remoteUrl));}
if(entry.remoteRepository){html+=HU.formEntry("From:",HU.href(entry.remoteRepository.url,entry.remoteRepository.name));}}
var columns=entry.getAttributes();if(entry.getFilesize()>0){html+=HU.formEntry("File:",entry.getFilename()+" "+
HU.href(entry.getResourceUrl(),HU.image(ramaddaBaseUrl+"/icons/download.png"))+" "+
entry.getFormattedFilesize());}
for(var colIdx=0;colIdx<columns.length;colIdx++){var column=columns[colIdx];var columnValue=column.value;if(column.getCanShow&&!column.getCanShow()){continue;}
if(Utils.isFalse(column.canshow)){continue;}
if(column.isUrl&&column.isUrl()){var tmp="";var toks=columnValue.split("\n");for(var i=0;i<toks.length;i++){var url=toks[i].trim();if(url.length==0)continue;tmp+=HU.href(url,url);tmp+="<br>";}
columnValue=tmp;}
html+=HU.formEntry(column.label+":",columnValue);}
html+=HU.close(TAG_TABLE);return html;},getEntriesTree:function(entries,props){if(!props)props={};var columns=this.getProperty("entryColumns",null);if(columns!=null){var columnNames=this.getProperty("columnNames",null);if(columnNames!=null){columnNames=columnNames.split(",");}
columns=columns.split(",");var ids=[];var names=[];for(var i=0;i<columns.length;i++){var toks=columns[i].split(":");var id=null,name=null;if(toks.length>1){if(toks[0]=="property"){name="property";id=columns[i];}else{id=toks[0];name=toks[1];}}else{id=columns[i];name=id;}
ids.push(id);names.push(name);}
columns=ids;if(columnNames==null){columnNames=names;}
return this.getEntriesTable(entries,columns,columnNames);}
var suffix=props.suffix;var domIdSuffix="";if(!suffix){suffix="null";}else{domIdSuffix=suffix;suffix="'"+suffix+"'";}
var handler=getHandler(props.handlerId);var showIndex=props.showIndex;var html="";var rowClass="entryrow_"+this.getId();var even=true;if(this.entriesMap==null)
this.entriesMap={};for(var i=0;i<entries.length;i++){even=!even;var entry=entries[i];this.entriesMap[entry.getId()]=entry;var toolbar=this.makeEntryToolbar(entry,handler,props.handlerId);var entryMenuButton=this.getEntryMenuButton(entry);var entryName=entry.getDisplayName();if(entryName.length>100){entryName=entryName.substring(0,99)+"...";}
var icon=entry.getIconImage([ATTR_TITLE,"View entry"]);var link=HU.tag(TAG_A,[ATTR_HREF,entry.getEntryUrl()],icon+" "+entryName);entryName="";var entryIdForDom=entry.getIdForDom()+domIdSuffix;var entryId=entry.getId();var arrow=HU.image(icon_tree_closed,[ATTR_BORDER,"0","tree-open","false",ATTR_ID,this.getDomId(ID_TREE_LINK+entryIdForDom)]);var toggleCall=this.getGet()+".toggleEntryDetails(event, '"+entryId+"',"+suffix+",'"+props.handlerId+"');";var toggleCall2=this.getGet()+".entryHeaderClick(event, '"+entryId+"',"+suffix+"); ";var open=HU.onClick(toggleCall,arrow);var extra="";if(showIndex){extra="#"+(i+1)+" ";}
if(handler&&handler.getEntryPrefix){extra+=handler.getEntryPrefix(props.handlerId,entry);}
var left=HU.div([ATTR_CLASS,"display-entrylist-name"],entryMenuButton+" "+open+" "+extra+link+" "+entryName);var details=HU.div([ATTR_ID,this.getDomId(ID_DETAILS+entryIdForDom),ATTR_CLASS,"display-entrylist-details"],HU.div([ATTR_CLASS,"display-entrylist-details-inner",ATTR_ID,this.getDomId(ID_DETAILS_INNER+entryIdForDom)],""));var line;if(this.getProperty("showToolbar",true)){line=HU.leftCenterRight(left,"",toolbar,"80%","1%","19%");}else{line=left;}
var mainLine=HU.div(["onclick",toggleCall2,ATTR_ID,this.getDomId(ID_DETAILS_MAIN+entryIdForDom),ATTR_CLASS,"display-entrylist-entry-main"+" "+"entry-main-display-entrylist-"+(even?"even":"odd"),ATTR_ENTRYID,entryId],line);var line=HU.div([CLASS,(even?"ramadda-row-even":"ramadda-row-odd"),ATTR_ID,this.getDomId("entryinner_"+entryIdForDom)],mainLine+details);html+=HU.tag(TAG_DIV,[ATTR_ID,this.getDomId("entry_"+entryIdForDom),ATTR_ENTRYID,entryId,ATTR_CLASS,"display-entrylist-entry"+rowClass],line);html+="\n";}
return html;},addEntrySelect:function(){var theDisplay=this;var entryRows=$("#"+this.getDomId(ID_DISPLAY_CONTENTS)+"  ."+this.getClass("entry-main"));entryRows.unbind();entryRows.mouseover(async function(event){var entryId=$(this).attr(ATTR_ENTRYID);var entry;await theDisplay.getEntry(entryId,e=>{entry=e});if(!entry){console.log("no entry:"+entryId);return;}
theDisplay.propagateEvent("handleEventEntryMouseover",{entry:entry});if(true)return;var domEntryId=Utils.cleanId(entryId);var toolbarId=theDisplay.getEntryToolbarId(domEntryId);var toolbar=$("#"+toolbarId);toolbar.show();var myalign='right top+1';var atalign='right top';var srcId=theDisplay.getDomId(ID_DETAILS_MAIN+domEntryId);toolbar.position({of:$("#"+srcId),my:myalign,at:atalign,collision:"none none"});});entryRows.mouseout(async function(event){var entryId=$(this).attr(ATTR_ENTRYID);var entry;await theDisplay.getEntry(entryId,e=>{entry=e});if(!entry)return;theDisplay.propagateEvent("handleEventEntryMouseout",{entry:entry});var domEntryId=Utils.cleanId(entryId);var toolbarId=theDisplay.getEntryToolbarId(entryId);var toolbar=$("#"+toolbarId);});if(this.madeList){}
this.madeList=true;if(false){this.jq(ID_LIST).selectable({cancel:'a',selected:async function(event,ui){var entryId=ui.selected.getAttribute(ATTR_ENTRYID);theDisplay.toggleEntryDetails(event,entryId);if(true)return;theDisplay.hideEntryDetails(entryId);var entry;await this.getEntry(entryId,e=>{entry=e});if(entry==null)return;var zoom=null;if(event.shiftKey){zoom={zoomIn:true};}
theDisplay.selectedEntries.push(entry);theDisplay.propagateEvent("handleEventEntrySelection",{entry:entry,selected:true,zoom:zoom});theDisplay.lastSelectedEntry=entry;},unselected:async function(event,ui){if(true)return;var entryId=ui.unselected.getAttribute(ATTR_ENTRYID);var entry;await this.getEntry(entryId,e=>{entry=e});var index=theDisplay.selectedEntries.indexOf(entry);if(index>-1){theDisplay.selectedEntries.splice(index,1);theDisplay.propagateEvent("handleEventEntrySelection",{entry:entry,selected:false});}},});}},getEntriesTable:function(entries,columns,columnNames){if(this.entriesMap==null)
this.entriesMap={};var columnWidths=this.getProperty("columnWidths",null);if(columnWidths!=null){columnWidths=columnWidths.split(",");}
var html=HU.open(TAG_TABLE,[ATTR_WIDTH,"100%","cellpadding","0","cellspacing","0"]);html+=HU.open(TAG_TR,["valign","top"]);for(var i=0;i<columnNames.length;i++){html+=HU.td([ATTR_ALIGN,"center",ATTR_CLASS,"display-entrytable-header"],columnNames[i]);}
html+=HU.close(TAG_TR);for(var i=0;i<entries.length;i++){html+=HU.open(TAG_TR,["valign","top"]);var entry=entries[i];this.entriesMap[entry.getId()]=entry;for(var j=0;j<columns.length;j++){var columnWidth=null;if(columnWidths!=null){columnWidth=columnWidths[j];}
var column=columns[j];var value="";if(column=="name"){value=HU.tag(TAG_A,[ATTR_HREF,entry.getEntryUrl()],entry.getName());}else if(column.match(".*property:.*")){var type=column.substring("property:".length);var metadata=entry.getMetadata();value="";for(var j=0;j<metadata.length;j++){var m=metadata[j];if(m.type==type){if(value!=""){value+="<br>";}
value+=m.value.attr1;}}}else if(column=="description"){value=entry.getDescription();}else if(column=="date"){value=entry.ymd;if(value==null){value=entry.startDate;}}else{value=entry.getAttributeValue(column);}
var attrs=[ATTR_CLASS,"display-entrytable-cell"];if(columnWidth!=null){attrs.push(ATTR_WIDTH);attrs.push(columnWidth);}
html+=HU.td(attrs,value);}
html+=HU.close(TAG_TR);}
html+=HU.close(TAG_TABLE);return html;},makeEntryToolbar:function(entry,handler,handlerId){var get=this.getGet();var toolbarItems=[];var props="{showMenu:true,showTitle:true}";if(entry.getType().getId()=="type_wms_layer"){toolbarItems.push(HU.tag(TAG_A,["onclick",get+".addMapLayer("+HU.sqt(entry.getId())+");"],HU.image(ramaddaBaseUrl+"/icons/map.png",["border",0,ATTR_TITLE,"Add Map Layer"])));}
if(entry.getType().getId()=="geo_shapefile"||entry.getType().getId()=="geo_geojson"){toolbarItems.push(HU.tag(TAG_A,["onclick",get+".addMapLayer("+HU.sqt(entry.getId())+");"],HU.image(ramaddaBaseUrl+"/icons/map.png",["border",0,ATTR_TITLE,"Add Map Layer"])));}
var jsonUrl=this.getPointUrl(entry);if(jsonUrl!=null){jsonUrl=jsonUrl.replace(/\'/g,"_");toolbarItems.push(HU.tag(TAG_A,["onclick",get+".createDisplay("+HU.sqt(entry.getFullId())+","+
HU.sqt("table")+","+HU.sqt(jsonUrl)+","+props+");"],HU.getIconImage("fa-table",[ATTR_TITLE,"Create Tabular Display"])));var x;toolbarItems.push(x=HU.tag(TAG_A,["onclick",get+".createDisplay("+HU.sqt(entry.getFullId())+","+
HU.sqt("linechart")+","+HU.sqt(jsonUrl)+","+props+");"],HU.getIconImage("fa-chart-line",[ATTR_TITLE,"Create Chart"])));}
toolbarItems.push(HU.tag(TAG_A,["onclick",get+".createDisplay("+HU.sqt(entry.getFullId())+","+
HU.sqt("entrydisplay")+","+HU.sqt(jsonUrl)+","+props+");"],HU.getIconImage("fa-file",["border",0,ATTR_TITLE,"Show Entry"])));if(entry.getFilesize()>0){toolbarItems.push(HU.tag(TAG_A,[ATTR_HREF,entry.getResourceUrl()],HU.image(ramaddaBaseUrl+"/icons/download.png",["border",0,ATTR_TITLE,"Download ("+entry.getFormattedFilesize()+")"])));}
var entryMenuButton=this.getEntryMenuButton(entry);var tmp=[];if(handler&&handler.addToToolbar){handler.addToToolbar(handlerId,entry,toolbarItems);}
for(var i=0;i<toolbarItems.length;i++){tmp.push(HU.div([ATTR_CLASS,"display-entry-toolbar-item"],toolbarItems[i]));}
toolbarItems=tmp;return HU.div([ATTR_CLASS,"display-entry-toolbar",ATTR_ID,this.getEntryToolbarId(entry.getIdForDom())],HU.join(toolbarItems,""));},getEntryToolbarId:function(entryId){var id=entryId.replace(/:/g,"_");id=id.replace(/=/g,"_");return this.getDomId(ID_TOOLBAR+"_"+id);},hideEntryDetails:function(entryId){},entryHeaderClick:function(event,entryId,suffix){var target=event.target;if(target.outerHTML){if(target.outerHTML.indexOf("<div")!=0){return;}}
this.toggleEntryDetails(event,entryId);},toggleEntryDetails:async function(event,entryId,suffix,handlerId){var entry;await this.getEntry(entryId,e=>{entry=e});if(suffix==null)suffix="";var link=this.jq(ID_TREE_LINK+entry.getIdForDom()+suffix);var id=ID_DETAILS+entry.getIdForDom()+suffix;var details=this.jq(id);var detailsInner=this.jq(ID_DETAILS_INNER+entry.getIdForDom()+suffix);if(event&&event.shiftKey){var id=Utils.cleanId(entryId);var line=this.jq(ID_DETAILS_MAIN+id);if(!this.selectedEntriesFromTree){this.selectedEntriesFromTree={};}
var selected=line.attr("ramadda-selected")=="true";if(selected){line.removeClass("display-entrylist-entry-main-selected");line.attr("ramadda-selected","false");this.selectedEntriesFromTree[entry.getId()]=null;}else{line.addClass("display-entrylist-entry-main-selected");line.attr("ramadda-selected","true");this.selectedEntriesFromTree[entry.getId()]=entry;}
this.propagateEvent("handleEventEntrySelection",{"entry":entry,"selected":!selected});return;}
var open=link.attr("tree-open")=="true";if(open){link.attr("src",icon_tree_closed);}else{link.attr("src",icon_tree_open);}
link.attr("tree-open",open?"false":"true");var hereBefore=details.attr("has-content")!=null;details.attr("has-content","true");if(hereBefore){}else{if(entry.getIsGroup()){detailsInner.html(HU.image(icon_progress));var theDisplay=this;var callback=function(entries){theDisplay.displayChildren(entry,entries,suffix,handlerId);};var entries=entry.getChildrenEntries(callback);}else{detailsInner.html(this.getEntryHtml(entry,{showHeader:false}));}}
if(open){details.hide();}else{details.show();}
if(event&&event.stopPropagation){event.stopPropagation();}},getSelectedEntriesFromTree:function(){var selected=[];if(this.selectedEntriesFromTree){for(var id in this.selectedEntriesFromTree){var entry=this.selectedEntriesFromTree[id];if(entry!=null){selected.push(entry);}}}
return selected;},displayChildren:function(entry,entries,suffix,handlerId){if(!suffix)suffix="";var detailsInner=this.jq(ID_DETAILS_INNER+entry.getIdForDom()+suffix);var details=this.getEntryHtml(entry,{showHeader:false});if(entries.length==0){detailsInner.html(details);}else{var entriesHtml="";if(this.showDetailsForGroup){entriesHtml+=details;}
entriesHtml+=this.getEntriesTree(entries,{handlerId:handlerId});detailsInner.html(entriesHtml);this.addEntrySelect();}},getEntryMenuButton:function(entry){var menuButton=HU.onClick(this.getGet()+".showEntryMenu(event, '"+entry.getId()+"');",HU.image(ramaddaBaseUrl+"/icons/menu.png",[ATTR_CLASS,"display-entry-toolbar-item",ATTR_ID,this.getDomId(ID_MENU_BUTTON+entry.getIdForDom())]));return menuButton;},setRamadda:function(e){this.ramadda=e;},getRamadda:function(){if(this.ramadda!=null){return this.ramadda;}
if(this.ramaddaBaseUrl!=null){this.ramadda=getRamadda(this.ramaddaBaseUrl);return this.ramadda;}
return getGlobalRamadda();},getEntry:async function(entryId,callback){if(this.entriesMap&&this.entriesMap[entryId]){return Utils.call(callback,this.entriesMap[entryId]);}
var ramadda=this.getRamadda();var toks=entryId.split(",");if(toks.length==2){entryId=toks[1];ramadda=getRamadda(toks[0]);}
var entry=null;if(this.entryList!=null){await this.entryList.getEntry(entryId,e=>entry=e);}
if(entry==null){await ramadda.getEntry(entryId,e=>entry=e);}
if(entry==null){await this.getRamadda().getEntry(entryId,e=>entry=e);}
return Utils.call(callback,entry);},addMapLayer:async function(entryId){var entry;await this.getEntry(entryId,e=>{entry=e});if(entry==null){console.log("No entry:"+entryId);return;}
this.getDisplayManager().addMapLayer(this,entry);},doit:function(){console.log("doit");},createDisplay:async function(entryId,displayType,jsonUrl,displayProps){var entry;await this.getEntry(entryId,e=>{entry=e});if(entry==null){console.log("No entry:"+entryId);return null;}
var props={sourceEntry:entry,entryId:entry.getId(),showDetails:true,title:entry.getName(),layoutHere:false,};if(displayProps){$.extend(props,displayProps);}
if(displayType!=DISPLAY_ENTRYLIST){if(jsonUrl==null){jsonUrl=this.getPointUrl(entry);}
var pointDataProps={entry:entry,entryId:entry.getId()};props.data=new PointData(entry.getName(),null,null,jsonUrl,pointDataProps);}
if(this.lastDisplay!=null){props.column=this.lastDisplay.getColumn();props.row=this.lastDisplay.getRow();}else{props.column=this.getProperty("newColumn",this.getColumn());props.row=this.getProperty("newRow",this.getRow());}
this.lastDisplay=this.getDisplayManager().createDisplay(displayType,props);},getPointUrl:function(entry){var service=entry.getService("points.json");if(service!=null){return service.url;}
service=entry.getService("grid.point.json");if(service!=null){return service.url;}
return null;},getEntryMenu:async function(entryId,callback){var entry;await this.getEntry(entryId,e=>{entry=e});if(entry==null){return Utils.call(callback,"null entry");}
var get=this.getGet();var menus=[];var fileMenuItems=[];var viewMenuItems=[];var newMenuItems=[];viewMenuItems.push(HU.tag(TAG_LI,[],HU.tag(TAG_A,["href",entry.getEntryUrl(),"target","_"],"View Entry")));if(entry.getFilesize()>0){fileMenuItems.push(HU.tag(TAG_LI,[],HU.tag(TAG_A,["href",entry.getResourceUrl()],"Download "+entry.getFilename()+" ("+entry.getFormattedFilesize()+")")));}
if(this.jsonUrl!=null){fileMenuItems.push(HU.tag(TAG_LI,[],"Data: "+HU.onClick(get+".fetchUrl('json');","JSON")+
HU.onClick(get+".fetchUrl('csv');","CSV")));}
var props="{showMenu:true,showTitle:true}";var newMenu="<a>New</a><ul>";newMenu+=HU.tag(TAG_LI,[],HU.onClick(get+".createDisplay('"+entry.getFullId()+"','entrydisplay',null,null,"+props+");","New Entry Display"));newMenuItems.push(HU.tag(TAG_LI,[],HU.onClick(get+".createDisplay('"+entry.getFullId()+"','entrydisplay',null,null,"+props+");","New Entry Display")));var pointUrl=this.getPointUrl(entry);if(pointUrl!=null){var types=window.globalDisplayTypes;var catMap={};if(types){for(var i=0;i<types.length;i++){var type=types[i];if(!type.requiresData||!type.forUser)continue;if(!Utils.isDefined(catMap[type.category])){catMap[type.category]="<li> <a>"+type.category+"</a><ul>\n";}
pointUrl=pointUrl.replace(/\'/g,"_");var call=get+".createDisplay("+HU.sqt(entry.getFullId())+","+HU.sqt(type.type)+","+HU.sqt(pointUrl)+",null,"+props+");";var li=HU.tag(TAG_LI,[],HU.tag(TAG_A,["onclick",call],type.label));catMap[type.category]+=li+"\n";newMenuItems.push(li);}}
for(a in catMap){newMenu+=catMap[a]+"</li></ul>";}}
if(fileMenuItems.length>0)
menus.push("<a>File</a>"+HU.tag(TAG_UL,[],HU.join(fileMenuItems)));if(viewMenuItems.length>0)
menus.push("<a>View</a>"+HU.tag(TAG_UL,[],HU.join(viewMenuItems)));if(newMenuItems.length>0)
menus.push(newMenu);var topMenus="";for(var i=0;i<menus.length;i++){topMenus+=HU.tag(TAG_LI,[],menus[i]);}
var menu=HU.tag(TAG_UL,[ATTR_ID,this.getDomId(ID_MENU_INNER+entry.getIdForDom()),ATTR_CLASS,"sf-menu"],topMenus);callback(menu);},showEntryMenu:async function(event,entryId){var menu;await this.getEntryMenu(entryId,m=>{menu=m});this.writeHtml(ID_MENU_OUTER,menu);var srcId=this.getDomId(ID_MENU_BUTTON+Utils.cleanId(entryId));showPopup(event,srcId,this.getDomId(ID_MENU_OUTER),false,"left top","left bottom");$("#"+this.getDomId(ID_MENU_INNER+Utils.cleanId(entryId))).superfish({speed:'fast',delay:300});},fetchUrl:function(as,url){if(url==null){url=this.jsonUrl;}
url=this.getDisplayManager().getJsonUrl(url,this);if(url==null)return;if(as!=null&&as!="json"){url=url.replace("points.json","points."+as);}
window.open(url,'_blank');},getMenuItems:function(menuItems){},getDisplayMenuSettings:function(){var get="getRamaddaDisplay('"+this.getId()+"')";var moveRight=HU.onClick(get+".moveDisplayRight();","Right");var moveLeft=HU.onClick(get+".moveDisplayLeft();","Left");var moveTop=HU.onClick(get+".moveDisplayTop();","Top");var moveUp=HU.onClick(get+".moveDisplayUp();","Up");var moveDown=HU.onClick(get+".moveDisplayDown();","Down");var menu="<table class=formtable>"+
"<tr><td align=right><b>Move:</b></td><td>"+moveTop+" "+moveUp+" "+moveDown+" "+moveRight+" "+moveLeft+"</td></tr>"+
"<tr><td align=right><b>Row:</b></td><td> "+HU.input("",this.getProperty("row",""),["size","7",ATTR_ID,this.getDomId("row")])+" &nbsp;&nbsp;<b>Col:</b> "+HU.input("",this.getProperty("column",""),["size","7",ATTR_ID,this.getDomId("column")])+"</td></tr>"+
"<tr><td align=right><b>Width:</b></td><td> "+HU.input("",this.getProperty("width",""),["size","7",ATTR_ID,this.getDomId("width")])+"  "+"<b>Height:</b> "+HU.input("",this.getProperty("height",""),["size","7",ATTR_ID,this.getDomId("height")])+"</td></tr>"+
"</table>";var tmp=HU.checkbox(this.getDomId("showtitle"),[],this.showTitle)+" Title  "+
HU.checkbox(this.getDomId("showdetails"),[],this.showDetails)+" Details "+
"&nbsp;&nbsp;&nbsp;"+
HU.onClick(get+".askSetTitle();","Set Title");menu+=HU.formTable()+HU.formEntry("Show:",tmp)+"</table>";return menu;},isLayoutHorizontal:function(){return this.getProperty("orientation","horizontal")=="horizontal";},loadInitialData:function(){if(!this.needsData()||this.properties.data==null){return;}
if(this.getProperty("latitude")){this.data.lat=this.getProperty("latitude");this.data.lon=this.getProperty("longitude","-105");}
if(this.properties.data.hasData()){this.addData(this.properties.data);return;}
this.properties.data.loadData(this);},getData:function(){if(!this.hasData())return null;var dataList=this.dataCollection.getList();return dataList[0];},hasData:function(){if(this.dataCollection==null)return false;return this.dataCollection.hasData();},getCreatedInteractively:function(){return this.createdInteractively==true;},needsData:function(){return false;},askSetTitle:function(){var t=this.getTitle(false);var v=prompt(TITLE,t);if(v!=null){this.title=v;this.setProperty(ATTR_TITLE,v);this.setDisplayTitle(this.title);}},getShowDetails:function(){return this.getSelfProperty("showDetails",true);},setShowDetails:function(v){this.showDetails=v;if(this.showDetails){this.jq(ID_DETAILS).show();}else{this.jq(ID_DETAILS).hide();}},setShowTitle:function(v){this.showTitle=v;if(this.showTitle){this.jq(ID_TITLE).show();}else{this.jq(ID_TITLE).hide();}},setDisplayProperty:function(key,value){this.setProperty(key,value);$("#"+this.getDomId(key)).val(value);},deltaColumn:function(delta){var column=parseInt(this.getProperty("column",0));column+=delta;if(column<0)column=0;this.setDisplayProperty("column",column);this.getLayoutManager().layoutChanged(this);this.jq("col").val(column);},deltaRow:function(delta){var row=parseInt(this.getProperty("row",0));if(isNaN(row))row=0;row+=delta;if(row<0)row=0;this.setDisplayProperty("row",row);this.getLayoutManager().layoutChanged(this);this.jq("row").val(row);},moveDisplayRight:function(){if(this.getLayoutManager().isLayoutColumns()){this.deltaColumn(1);}else{this.getLayoutManager().moveDisplayDown(this);}},moveDisplayLeft:function(){if(this.getLayoutManager().isLayoutColumns()){this.deltaColumn(-1);}else{this.getLayoutManager().moveDisplayUp(this);}},moveDisplayUp:function(){if(this.getLayoutManager().isLayoutRows()){this.deltaRow(-1);}else{this.getLayoutManager().moveDisplayUp(this);}},moveDisplayDown:function(){if(this.getLayoutManager().isLayoutRows()){this.deltaRow(1);}else{this.getLayoutManager().moveDisplayDown(this);}},moveDisplayTop:function(){this.getLayoutManager().moveDisplayTop(this);},getDialogContents:function(tabTitles,tabContents){this.getDisplayDialogContents(tabTitles,tabContents);},getDisplayDialogContents:function(tabTitles,tabContents){var get=this.getGet();var menuItems=[];this.getMenuItems(menuItems);var form="<form>";form+=this.getDisplayMenuSettings();for(var i=0;i<menuItems.length;i++){form+=HU.div([ATTR_CLASS,"display-menu-item"],menuItems[i]);}
form+="</form>";tabTitles.push("Display");tabContents.push(form);},checkLayout:function(){},displayData:function(){},setDisplayReady:function(){var callUpdate=!this.displayReady;this.displayReady=true;if(callUpdate){this.updateUI();}},getDisplayReady:function(){return this.displayReady;},pageHasLoaded:function(){if(!this.displayReady){this.setDisplayReady(true);}},initDisplay:function(){this.createUI();if(this.getAnimation().getEnabled()){this.getAnimation().makeControls();}
this.checkSearchBar();this.updateUI();},getMainDiv:function(){return $("#"+this.getProperty(PROP_DIVID));},createUI:function(){var divid=this.getProperty(PROP_DIVID);if(divid!=null){var html=this.getHtml();let div=$("#"+divid);let inline=this.getProperty("displayInline");if(inline){div.css("display","inline-block");div.css("vertical-align","bottom");}
let width=this.getWidth();if(width)
div.css("width",HU.getDimension(width));div.html(html);}else{console.log("error: no div defined for display:"+this.getType());}},getHtml:function(){let get=this.getGet();let button="";if(this.getShowMenu()){button=HU.onClick(get+".showDialog();",HU.image(ramaddaBaseUrl+"/icons/downdart.png",[ATTR_CLASS,"display-dialog-button",ATTR_ID,this.getDomId(ID_MENU_BUTTON)]));button+=" ";}
if(this.getProperty("showProgress",false)){}
let title="";if(this.getShowTitle()){title=this.getTitle(false).trim();}
let topLeft="";if(button!=""||title!=""){let titleDiv=this.getTitleHtml(title);if(button==""){topLeft=titleDiv;}else{topLeft=HU.div(["class","display-header"],button+"&nbsp;"+titleDiv);}}
topLeft=HU.div([ID,this.getDomId(ID_TOP_LEFT)],topLeft);let topCenter=HU.div([ID,this.getDomId(ID_TOP)],"");let topRight=HU.div([ID,this.getDomId(ID_TOP_RIGHT)],"");let top=HU.leftRightTable(topLeft,topRight,null,null,{valign:"bottom"});let header=HU.div([ID,this.getDomId(ID_HEADER1),CLASS,"display-header1"],"")+
HU.div([ID,this.getDomId(ID_HEADER2),CLASS,"display-header2"],"")+
HU.div([ID,this.getDomId(ID_HEADER3),CLASS,"display-header3"],"");top=header+topCenter+top;let colorTable=HU.div([ID,this.getDomId(ID_COLORTABLE)]);let rightInner="";let leftInner="";let bottom=HU.div([ATTR_CLASS,"",ATTR_ID,this.getDomId(ID_BOTTOM)]);let legend=HU.div([ID,this.getDomId(ID_LEGEND)]);let ctSide=this.getProperty("colorTableSide","bottom");if(ctSide=="top"){top+=colorTable;}else if(ctSide=="right"){rightInner+=colorTable;}else if(ctSide=="left"){leftInner+=colorTable;}else{bottom+=colorTable;}
bottom+=legend;let left=HU.div([ATTR_ID,this.getDomId(ID_LEFT)],leftInner);let right=HU.div([ATTR_ID,this.getDomId(ID_RIGHT)],rightInner);let sideWidth="1%";let contents=this.getContentsDiv();let table=HU.open("table",["width","100%","border",0]);table+=HU.tr([],HU.td(["width",sideWidth])+HU.td(["width","99%"],top)+HU.td(["width",sideWidth]));table+=HU.tr([],HU.td(["width",sideWidth],left)+HU.td(["width","99%"],contents)+HU.td(["width",sideWidth],right));table+=HU.tr([],HU.td(["width",sideWidth])+HU.td(["width","99%"],bottom)+HU.td(["width",sideWidth]));table+=HU.close("table");let html=HU.div([ATTR_CLASS,"ramadda-popup",ATTR_ID,this.getDomId(ID_MENU_OUTER)],"");let style=this.getProperty("displayStyle","");html+=HU.div([CLASS,"display-contents",STYLE,style],table);return html;},getWidthForStyle:function(dflt){var width=this.getProperty("width",-1);if(width==-1)return dflt;return HU.getDimension(width);},getHeightForStyle:function(dflt){var height=this.getProperty("height",-1);if(height==-1)return dflt;if(height.match("^[0-9]+$"))
height=height+"px";return height;},getContentsStyle:function(){var style="";var height=this.getHeightForStyle();if(height){style+=" height:"+height+";overflow-y:auto;";}
return style;},getContentsClass:function(){return"ramadda-expandable-target display-contents-inner display-"+this.type;},getContentsDiv:function(){let style=this.getContentsStyle();style+=this.getProperty("contentsStyle","");let image=this.getProperty("backgroundImage");if(image){image=HU.getEntryImage(this.entryId,image);style+=HU.css("background-attachment","auto","background-size","100% auto","background-image","url('"+image+"')");}
let background=this.getProperty("background");if(background)
style+=HU.css("background",background);let topBottomStyle="";let top=HU.div([STYLE,topBottomStyle,ATTR_ID,this.getDomId(ID_DISPLAY_TOP)],"");let bottom=HU.div([STYLE,topBottomStyle,ATTR_ID,this.getDomId(ID_DISPLAY_BOTTOM)],"");let expandedHeight=this.getProperty("expandedHeight");if(expandedHeight)
style+="height:"+expandedHeight+";";let contentsAttrs=[ATTR_CLASS,this.getContentsClass(),STYLE,style,ATTR_ID,this.getDomId(ID_DISPLAY_CONTENTS)];if(this.getProperty("expandableHeight")){contentsAttrs.push("expandable-height");contentsAttrs.push(this.getProperty("expandableHeight"));}
let contents=top+"\n"+HU.div(contentsAttrs,"")+"\n"+bottom;return contents;},prepareToLayout:function(){this.getColumn();this.getWidth();this.getHeight();this.getName();this.getEventSource();},getColumn:function(){return this.getFormValue("column",0);},getRow:function(){return this.getFormValue("row",0);},getWidth:function(dflt){return this.getFormValue("width",dflt);},getHeight:function(){return this.getFormValue("height",0);},getDisplayTitle:function(title){if(!title)title=this.title!=null?this.title:"";var text=title;var fields=this.lastSelectedFields;if(fields&&fields.length>0)
text=text.replace("{field}",fields[0].getLabel());else
text=text.replace("{field}","");return text;},setDisplayTitle:function(title){if(!Utils.stringDefined(title)){title=this.getTitle(false).trim();}
var text=this.getTitleHtml(title);if(this.getShowTitle()){this.jq(ID_TITLE).show();}else{this.jq(ID_TITLE).hide();}
this.writeHtml(ID_TITLE,text);},getTitle:function(showMenuButton){var prefix="";if(showMenuButton&&this.hasEntries()){prefix=this.getEntryMenuButton(this.getEntries()[0])+" ";}
var title=this.getProperty(ATTR_TITLE);if(title!=null){return prefix+title;}
if(this.dataCollection==null){return prefix;}
var dataList=this.dataCollection.getList();title="";for(var collectionIdx=0;collectionIdx<dataList.length;collectionIdx++){var pointData=dataList[collectionIdx];if(collectionIdx>0)title+="/";title+=pointData.getName();}
return prefix+title;},getIsLayoutFixed:function(){return this.getProperty(PROP_LAYOUT_HERE,true);},makeToolbar:function(props){var toolbar="";var get=this.getGet();var addLabel=props.addLabel;var images=[];var calls=[];var labels=[];if(!this.getIsLayoutFixed()){calls.push("removeRamaddaDisplay('"+this.getId()+"')");images.push("fa-cut");labels.push("Delete display");}
calls.push(get+".copyDisplay();");images.push("fa-copy");labels.push("Copy Display");if(this.jsonUrl!=null){calls.push(get+".fetchUrl('json');");images.push(ramaddaBaseUrl+"/icons/json.png");labels.push("Download JSON");calls.push(get+".fetchUrl('csv');");images.push(ramaddaBaseUrl+"/icons/csv.png");labels.push("Download CSV");}
for(var i=0;i<calls.length;i++){var inner=HU.getIconImage(images[i],[ATTR_TITLE,labels[i],ATTR_CLASS,"display-dialog-header-icon"]);if(addLabel)inner+=" "+labels[i]+"<br>";toolbar+=HU.onClick(calls[i],inner);}
return toolbar;},getHeader2:function(){return"";},initHeader2:function(){},writeHeader:function(header,html){if(html==""){this.jq(header).css("display","none");}else{this.jq(header).css("display","inline-block");}
this.jq(header).html(html);},forceUpdateUI:function(){this.haveCalledUpdateUI=false;this.updateUI();},updateUI:function(){},getFilterId:function(id){return this.getDomId("filterby_"+id);},getRequestMacros:function(){if(!this.requestMacros){this.requestMacros=this.getRequestMacrosInner();}
return this.requestMacros;},getRequestMacrosInner:function(){let macros=[];let p=this.getProperty("requestFields","");let e1=this.getProperty("extraFields1","");let e2=this.getProperty("extraFields2","");let list=Utils.mergeLists(e1.split(","),p.split(","),e2.split(","));list.forEach(macro=>{if(macro=="")return;macros.push(new RequestMacro(this,macro));});return macros;},applyRequestProperties:function(props){if(!props)return;this.requestMacros=null;this.dynamicProperties=props;this.createRequestProperties();},createRequestProperties:function(){let requestProps="";let macros=this.getRequestMacros();let macroDateIds=[];macros.forEach(macro=>{if(macro.isVisible()){requestProps+=macro.getWidget(macroDateIds)+"&nbsp;&nbsp;";}});this.writeHeader(ID_REQUEST_PROPERTIES,requestProps);let macroChange=(macro,value,what)=>{if(this.settingMacroValue)return;if(macro.triggerReload){this.macroChanged();this.reloadData();}
if(!macro.name)return;this.settingMacroValue=true;var args={entryId:this.entryId,property:"macroValue",id:macro.name,what:what,value:value};this.propagateEvent("handleEventPropertyChanged",args);this.settingMacroValue=false;};macroDateIds.every(id=>{HU.datePickerInit(id);return true;});this.jq(ID_HEADER2).find(".display-request-reload").click(()=>{macroChange({triggerReload:true});});macros.every(macro=>{$("#"+this.getDomId(macro.getId())+","+
"#"+this.getDomId(macro.getId()+"_min")+","+
"#"+this.getDomId(macro.getId()+"_max")+","+
"#"+this.getDomId(macro.getId()+"_from")+","+
"#"+this.getDomId(macro.getId()+"_to")).keyup(function(e){var keyCode=e.keyCode||e.which;if(keyCode==13){macroChange(macro,$(this).val());}});if(macro.type=="bounds"){this.jq(macro.getId()).change(function(e){macroChange(macro,$(this).is(':checked'));});}
if(macro.type=="enumeration"){this.jq(macro.getId()).change(function(e){macroChange(macro,$(this).val());});}
this.jq(macro.getId()+"_min").change(function(e){});this.jq(macro.getId()+"_max").change(function(e){});this.jq(macro.getId()+"_from").change(function(e){macroChange(macro,$(this).val(),"from");});this.jq(macro.getId()+"_to").change(function(e){macroChange(macro,$(this).val(),"to");});return true;});},makeFilterWidget:function(label,widget,title){if(!label)
return HU.div([CLASS,"display-filter-widget"],widget);return HU.div([CLASS,"display-filter-widget"],this.makeFilterLabel(label,title)+(label.trim().length==0?" ":": ")+
widget);},makeFilterLabel:function(label,tt){let attrs=[CLASS,"display-filter-label"];if(tt){attrs.push(TITLE);attrs.push(tt);}
return HU.span(attrs,label);},stepFilterDateAnimation:function(inputFunc,dir){let select=$("#"+this.getFilterId(ID_FILTER_DATE));let index=select[0].selectedIndex;let length=select.find('option').length;index+=dir;if(index>=length){return;index=0;}else if(index<0){return;index=length-1;}
select[0].selectedIndex=index;inputFunc(select);if(this.filterDatePlayingAnimation){setTimeout(()=>{this.stepFilterDateAnimation(inputFunc,1);},this.getProperty("filterDateAnimationSleep",1000));}},addFilters:function(filters){},checkSearchBar:function(){let debug=displayDebug.checkSearchBar;if(debug)console.log("checkSearchBar");let _this=this;this.colorByFields=this.getFieldsByIds(null,this.getProperty("colorByFields","",true));this.sizeByFields=this.getFieldsByIds(null,this.getProperty("sizeByFields","",true));let pointData=this.getData();if(pointData==null)return;let fields=pointData.getRecordFields();let records=pointData.getRecords();records=this.sortRecords(records);let header2="";if(this.getProperty("showProgress",false)){header2+=HU.div([ID,this.getDomId(ID_DISPLAY_PROGRESS),STYLE,HU.css("display","inline-block","margin-right","4px","min-width","20px")]);}
header2+=HU.div([ID,this.getDomId(ID_HEADER2_PREPREFIX),CLASS,"display-header-span"],"");header2+=HU.div([ID,this.getDomId(ID_HEADER2_PREFIX),CLASS,"display-header-span"],"");header2+=this.getHeader2();if(this.getProperty("pageRequest",false)){header2+=HU.span([ID,this.getDomId(ID_PAGE_COUNT)]);}
header2+=HU.div([ID,this.getDomId(ID_REQUEST_PROPERTIES),CLASS,"display-header-span"],"");if(this.getProperty("legendFields")||this.getProperty("showFieldLegend",false)){let colors=this.getColorList();let fields=this.getFieldsByIds(null,this.getProperty("legendFields",this.getProperty("fields",this.getProperty("sumFields"))));let html="";let colorCnt=0;fields.map((f)=>{if(colorCnt>=colors.length)colorCnt=0;let color=colors[colorCnt];html+=HU.div([STYLE,HU.css("display","inline-block","width","8px","height","8px","background",color)])+" "+f.getLabel()+"&nbsp;&nbsp; ";colorCnt++;});header2+=html;}
if(this.getProperty("showChartFieldsMenu")){let chartFields=pointData.getChartableFields();if(chartFields.length){let enums=[];chartFields.map(field=>{enums.push([field.getId(),field.getLabel()]);});header2+=HU.span([CLASS,"display-filter"],this.makeFilterLabel("Display: ")+HU.select("",[ID,this.getDomId("chartfields")],enums,this.getProperty("fields","")))+"&nbsp;";}}
let selectFields=this.getProperty("selectFields");let selectFieldProps=[];if(selectFields){selectFields.split(";").forEach(t=>{let[prop,label,fields]=t.split(":");if(fields==null){fields=label;label=Utils.makeLabel(prop);}
let selectFields=this.getFieldsByIds(null,fields);let enums=[];selectFields.map(field=>{if(field.isFieldGeo())return;enums.push([field.getId(),field.getLabel()]);});header2+=HU.span([CLASS,"display-filter"],this.makeFilterLabel(label+": ")+
HU.select("",[ID,this.getDomId("fieldselect_"+prop)],enums,this.getProperty(prop,"")))+"&nbsp;";selectFieldProps.push(prop);});}
if(this.colorByFields.length>0){let enums=[];this.colorByFields.map(field=>{if(field.isFieldGeo())return;enums.push([field.getId(),field.getLabel()]);});header2+=HU.span([CLASS,"display-filter"],this.makeFilterLabel("Color by: ")+HU.select("",[ID,this.getDomId("colorbyselect")],enums,this.getProperty("colorBy","")))+"&nbsp;";}
if(this.sizeByFields.length>0){let enums=[];this.sizeByFields.map(field=>{enums.push([field.getId(),field.getLabel()]);});header2+=HU.span([CLASS,"display-filter"],this.makeFilterLabel("Size by: ")+HU.select("",[ID,this.getDomId("sizebyselect")],enums,this.getProperty("sizeBy","")))+"&nbsp;";}
this.highlightFilter=this.getProperty("filterHighlight",false);if(this.getProperty("showFilterHighlight")){let enums=[["filter","Filter"],["highlight","Highlight"]];header2+=HU.select("",["fieldId","_highlight",ID,this.getDomId(ID_FILTER_HIGHLIGHT)],enums,!this.highlightFilter?"filter":"highlight")+SPACE2;}
let dataFilterIds=[];this.getDataFilters().map(f=>{if(!f.label)return;let cbxid=this.getDomId("datafilterenabled_"+f.id);dataFilterIds.push(cbxid);header2+=HU.checkbox("",[ID,cbxid],f.enabled)+" "+
this.makeFilterLabel(f.label+"&nbsp;&nbsp;")});if(this.getProperty("filterDate")){let type=this.getProperty("filterDate");let enums=[];if(this.getProperty("filterDateIncludeAll")){enums.push(["all","All"]);}
let selected=null;let seen={};let dates=[];records.map(record=>dates.push(record.getDate()));dates.sort(function(a,b){return a.getTime()-b.getTime();});dates.map(dttm=>{let value=null;if(type=="year"){value=dttm.getFullYear();}else if(type=="day"){value=Utils.formatDateMonthDayYear(dttm);}
if(!seen[value]){selected=String(dttm);enums.push([String(dttm),value]);seen[value]=true;}});let label=type=="year"?"Year":type=="month"?"Month":type=="day"?"Day":type;let style="";if(!this.getProperty("filterDateShow",true))
style+="display:none;";let selectId=this.getFilterId(ID_FILTER_DATE);label=this.makeFilterLabel("Select "+label+": ");let prefix="";prefix+=HU.div([ID,this.getDomId("filterDateStepBackward"),STYLE,HU.css("display","inline-block"),TITLE,"Step Back"],HU.getIconImage("fa-step-backward",[STYLE,HU.css("cursor","pointer")]))+SPACE1;prefix+=HU.div([ID,this.getDomId("filterDatePlay"),STYLE,HU.css("display","inline-block"),TITLE,"Play/Stop Animation"],HU.getIconImage("fa-play",[STYLE,HU.css("cursor","pointer")]))+SPACE1;prefix+=HU.div([ID,this.getDomId("filterDateStepForward"),STYLE,HU.css("display","inline-block"),TITLE,"Step Forward"],HU.getIconImage("fa-step-forward",[STYLE,HU.css("cursor","pointer")]))+SPACE1;header2+=HU.span([CLASS,"display-filter",STYLE,style],prefix+
HU.select("",["fieldId","filterDate",ATTR_ID,selectId],enums,selected))+"&nbsp;";}
let filterBy=this.getProperty("filterFields","",true).split(",");let hideFilterWidget=this.getProperty("hideFilterWidget",false,true);let fieldMap={};let displayType="";this.filters=[];this.addFilters(this.filters);if(filterBy.length>0){for(let i=0;i<filterBy.length;i++){if(filterBy[i]!=""){this.filters.push(new RecordFilter(this,filterBy[i]));}}
let searchBar="";let bottom=[""];this.filters.forEach(filter=>{let widget=filter.getWidget(fieldMap,bottom,records);searchBar+=widget;});style=(hideFilterWidget?"display:none;":"")+this.getProperty("filterByStyle","");let filterBar=searchBar+bottom[0];if(filterBar!=""){header2+=HU.span([CLASS,"display-filter",STYLE,style,ID,this.getDomId(ID_FILTERBAR)],searchBar+bottom);}}
header2+=HU.div([ID,this.getDomId(ID_HEADER2_SUFFIX),CLASS,"display-header-span"],"");this.jq(ID_HEADER2).html(header2);this.initHeader2();this.jq("test").button().click(()=>{this.haveCalledUpdateUI=false;this.updateUI();});var theDisplay=this;this.createRequestProperties();let inputFunc=function(input,input2,value){var id=input.attr(ID);if(!input2){if(id.endsWith("_min")){input2=$("#"+id.replace(/_min$/,"_max"));}else if(id.endsWith("_max")){var tmp=input;input=$("#"+id.replace(/_max$/,"_min"));input2=tmp;}}
if(input.attr("isCheckbox")){var on=input.attr("onValue")||true;var off=input.attr("offValue")||false;if(input.is(':checked')){value=on;console.log(_this.type+" cbx is checked value:"+value+" on:"+on+" off:"+off);}else{value=off;console.log(_this.type+" cbx is not checked value:"+value+" on:"+on+" off:"+off);}}
if(!value){value=input.val();}
if(!value||value==""){value=input.attr("data-value");}
if(!value){value=input.val();}
if(value==null)return;if(!Array.isArray(value)&&input.attr("isButton")){var tmp=[];value.split(",").map(v=>{tmp.push(v.replace(/_comma_/g,","));});value=tmp;}
var fieldId=input.attr("fieldId");_this.checkFilterField(input);_this.haveCalledUpdateUI=false;if(_this.settingFilterValue){return;}
_this.settingFilterValue=true;_this.dataFilterChanged();var args={property:"filterValue",id:id,fieldId:fieldId,value:value};if(input2){args.value2=input2.val();}
_this.propagateEvent("handleEventPropertyChanged",args);_this.settingFilterValue=false;};dataFilterIds.map(id=>{$("#"+id).click(function(e){inputFunc($(this));});});this.filters.forEach(f=>{if(f.initDateWidget)
f.initDateWidget(inputFunc);});this.jq(ID_FILTERBAR).find(".display-filter-items").each(function(){let parent=$(this);$(this).find(".display-filter-item").click(function(event){var isAll=$(this).hasClass("display-filter-item-all");var selectClazz="display-filter-item-"+displayType+"-selected"
var wasSelected=$(this).hasClass(selectClazz);var fieldId=$(this).attr("fieldId");var multiples=_this.getProperty(fieldId+".filterMultiple",false);if(!event.metaKey||isAll||!multiples){parent.find(".display-filter-item").removeClass(selectClazz);}else{parent.find(".display-filter-item-all").removeClass(selectClazz);}
if(wasSelected&&event.metaKey){$(this).removeClass(selectClazz);}else{$(this).addClass(selectClazz);}
var values=[];parent.find("."+selectClazz).each(function(){values.push($(this).attr("data-value").replace(/,/g,"_comma_"));});if(values.length==0){parent.find(".display-filter-item-all").addClass(selectClazz);values.push(FILTER_ALL);}
var value=Utils.join(values,",");parent.attr("data-value",value);$("#"+parent.attr(ID)+"_label").html(values.includes(FILTER_ALL)?"&nbsp;":value);inputFunc(parent,null,values);});});this.jq(ID_FILTERBAR).find(".display-filter-input").keyup(function(e){var keyCode=e.keyCode||e.which;if(keyCode==13){return;}
hidePopupObject();var input=$(this);var val=$(this).val().trim();if(val=="")return;var fieldId=$(this).attr("fieldId");var field=fieldMap[fieldId].field;var values=fieldMap[fieldId].values;var items=[];var regexp=null;try{val=val.replace(/\./g,"\\.");regexp=new RegExp("("+val+")",'i');}catch(ignore){}
for(var i=0;i<values.length;i++){var text=values[i].toString();var match=regexp?text.match(regexp):text.indexOf(val)>=0;if(match){items.push([match[1],values[i]]);}
if(items.length>30)break;}
if(items.length>0){var html="";var itemCnt=0;items.map(item=>{var match=item[0];item=item[1];if(item.length>50)return;var label=item.replace(regexp,"<span style='background:"+HIGHLIGHT_COLOR+";'>"+match+"</span>");item=item.replace(/\'/g,"\'");html+=HU.div([CLASS,"display-filter-popup-item","item",item],label)+"\n";itemCnt++;});if(itemCnt>0){popupObject=getTooltip();popupObject.html(HU.div([CLASS,"ramadda-popup-inner ramadda-snippet-popup"],html));popupObject.show();popupObject.position({of:$(this),my:"left top",at:"left bottom",});$(".display-filter-popup-item").click(function(){hidePopupObject();input.val($(this).attr("item"));inputFunc(input);});}}});this.jq(ID_FILTERBAR).find(".display-filter-range").mousedown(function(){var id=$(this).attr(ID);id=id.replace(/_min$/,"").replace(/_max$/,"");var min=$("#"+id+"_min");var max=$("#"+id+"_max");range={min:parseFloat(min.attr("data-min")),max:parseFloat(max.attr("data-max"))};var minValue=parseFloat(min.val());var maxValue=parseFloat(max.val());var html=HU.div([ID,"filter-range",STYLE,HU.css("width","200px")],"");var popup=getTooltip();popup.html(html);popup.show();popup.position({of:min,my:"left top",at:"left bottom+2",collision:"fit fit"});if(isNaN(minValue))minValue=range.min;if(isNaN(maxValue))maxValue=range.max;var step=1;if(parseInt(range.max)!=range.max||parseInt(range.min)!=range.min)
step=(range.max-range.min)/100000;$("#filter-range").slider({range:true,min:range.min,max:range.max,step:step,values:[minValue,maxValue],slide:function(event,ui){min.val(ui.values[0]);max.val(ui.values[1]);min.attr("data-value",min.val());max.attr("data-value",max.val());if(_this.getProperty("filterSliderImmediate")){inputFunc(min,max);}},stop:function(){var popup=getTooltip();popup.hide();theDisplay.checkFilterField(max);inputFunc(min,max);}});});this.jq(ID_FILTER_HIGHLIGHT).change(function(){_this.setProperty("filterHighlight",$(this).val()=="highlight");_this.haveCalledUpdateUI=false;inputFunc($(this));});$("#"+this.getFilterId(ID_FILTER_DATE)).change(function(){inputFunc($(this));});this.jq("filterDatePlay").click(function(){_this.filterDatePlayingAnimation=!_this.filterDatePlayingAnimation;let icon=_this.filterDatePlayingAnimation?"fa-stop":"fa-play";$(this).html(HU.getIconImage(icon,[STYLE,HU.css("cursor","pointer")]));if(_this.filterDatePlayingAnimation){_this.stepFilterDateAnimation(inputFunc,1);}});this.jq("filterDateStepBackward").click(function(){_this.filterDatePlayingAnimation=false;let icon=_this.filterDatePlayingAnimation?"fa-stop":"fa-play";_this.jq("filterDatePlay").html(HU.getIconImage(icon,[STYLE,HU.css("cursor","pointer")]));_this.stepFilterDateAnimation(inputFunc,-1);});this.jq("filterDateStepForward").click(function(){_this.filterDatePlayingAnimation=false;let icon=_this.filterDatePlayingAnimation?"fa-stop":"fa-play";_this.jq("filterDatePlay").html(HU.getIconImage(icon,[STYLE,HU.css("cursor","pointer")]));_this.stepFilterDateAnimation(inputFunc,1);});this.jq("chartfields").change(function(){_this.setProperty("fields",$(this).val());_this.updateUI();});selectFieldProps.forEach(prop=>{this.jq("fieldselect_"+prop).change(function(){_this.fieldSelectedChanged(prop,$(this).val());});});this.jq("colorbyselect").change(function(){_this.colorByFieldChanged($(this).val());});this.jq("sizebyselect").change(function(){_this.sizeByFieldChanged($(this).val());});this.jq(ID_FILTERBAR).find("input").keyup(function(e){var keyCode=e.keyCode||e.which;if(keyCode==13){inputFunc($(this));}});this.jq(ID_FILTERBAR).find("input:radio,select").change(function(){inputFunc($(this));});this.jq(ID_FILTERBAR).find("input:checkbox").change(function(){inputFunc($(this));});var dateMin=null;var dateMax=null;var dates=[];if(debug)console.log("checkSearchBar-getting filtered data");let filteredRecords=this.filterData();if(debug)console.log("checkSearchBar-done getting filtered data");filteredRecords.every(record=>{if(dateMin==null){dateMin=record.getDate();dateMax=record.getDate();}else{var date=record.getDate();if(date){dates.push(date);if(date.getTime()<dateMin.getTime())
dateMin=date;if(date.getTime()>dateMax.getTime())
dateMax=date;}}
return true;});if(debug)console.log("checkSearchBar-11");if(dateMax){if(debug)console.log("checkSearchBar-getAnimation");var animation=this.getAnimation();if(animation.getEnabled()){if(debug)console.log("checkSearchBar-calling animation.init");animation.init(dateMin,dateMax,filteredRecords);if(debug)console.log("checkSearchBar-done calling animation.init");if(!this.minDateObj){if(debug)console.log("checkSearchBar-calling setDateRange");this.setDateRange(animation.begin,animation.end);if(debug)console.log("checkSearchBar-done calling setDateRange");}}}
if(debug)console.log("checkSearchBar-done");},checkFilterField:function(f){var min=f.attr("data-min");var max=f.attr("data-max");var value=f.val();if(Utils.isDefined(min)){if(value!=min){f.css("background",HIGHLIGHT_COLOR);}else{f.css("background","white");}}else if(Utils.isDefined(max)){if(value!=max){f.css("background",HIGHLIGHT_COLOR);}else{f.css("background","white");}}},fieldSelectedChanged:function(prop,val){this.setProperty(prop,val);this.haveCalledUpdateUI=false;this.updateUI();},colorByFieldChanged:function(field){this.setProperty("colorBy",field);this.updateUI();},sizeByFieldChanged:function(field){},macroChanged:function(){this.pageSkip=0;},dataFilterChanged:function(){this.updateUI();},addFieldClickHandler:function(jq,records,addHighlight){let _this=this;if(records){if(!jq)jq=this.jq(ID_DISPLAY_CONTENTS);let func=function(){if(addHighlight){$(this).parent().find(".display-row-highlight").removeClass("display-row-highlight");$(this).addClass("display-row-highlight");}
let record=records[$(this).attr(RECORD_INDEX)];if(record)
_this.getDisplayManager().notifyEvent("handleEventRecordSelection",this,{record:record});};let children=jq.find("[recordIndex]");if(!children.length)children=jq;children.click(func);}
if(this.getProperty("propagateValueClick",true)){let _this=this;if(!jq)jq=this.jq(ID_DISPLAY_CONTENTS);jq.find("[field-id]").click(function(){let fieldId=$(this).attr("field-id");let value=$(this).attr("field-value");var args={property:"filterValue",id:fieldId,fieldId:fieldId,value:value};_this.propagateEvent("handleEventPropertyChanged",args);});}},makeTooltips:function(selector,records,callback,tooltipArg){if(!this.getProperty("showTooltips",true)){return;}
var tooltip=tooltipArg||this.getProperty("tooltip");if(!tooltip)return;let _this=this;selector.tooltip({content:function(){var record=records[parseFloat($(this).attr('recordIndex'))];if(callback)callback(true,record);_this.getDisplayManager().notifyEvent("handleEventRecordHighlight",_this,{highlight:true,record:record});let style=_this.getProperty("tooltipStyle");let tt=_this.getRecordHtml(record,null,tooltip);if(style)tt=HU.div([STYLE,style],tt);return tt;},close:function(event,ui){var record=records[parseFloat($(this).attr('recordIndex'))];if(callback)callback(true,record);_this.getDisplayManager().notifyEvent("handleEventRecordHighlight",_this,{highlight:false,record:record});},position:{my:_this.getProperty("tooltipPositionMy","left top"),at:_this.getProperty("tooltipPositionAt","left bottom+2"),collision:_this.getProperty("tooltipCollision","none none")},show:{delay:parseFloat(_this.getProperty("tooltipDelay",1000)),duration:parseFloat(_this.getProperty("tooltipDuration",500)),},classes:{"ui-tooltip":_this.getProperty("tooltipClass","display-tooltip")}});},makePopups:function(selector,records,callback,popupTemplate){if(!popupTemplate)
popupTemplate=this.getProperty("popupTemplate");if(!popupTemplate)return;let _this=this;selector.click(function(event){var record=records[parseFloat($(this).attr('recordIndex'))];if(!record)return;if(callback)callback(record);_this.getDisplayManager().notifyEvent("handleEventRecordSelect",_this,{select:true,record:record});_this.showRecordPopup($(this),record,callback,popupTemplate);});},showRecordPopup:function(element,record,popupTemplate){if(!record)return;if(!popupTemplate)
popupTemplate=this.getProperty("popupTemplate");if(!popupTemplate)return;let _this=this;hidePopupObject();var html=_this.getRecordHtml(record,null,popupTemplate);html=HU.div([CLASS,"display-popup "+_this.getProperty("popupClass",""),STYLE,_this.getProperty("popupStyle","")],html);popupObject=getTooltip();popupObject.html(html);popupObject.show();popupObject.position({of:element,my:_this.getProperty("popupPositionMy","left top"),at:_this.getProperty("popupPositionAt","left bottom+2"),collision:_this.getProperty("popupCollision","none none")});},animationStart:function(animation){},animationApply:function(animation,skipUpdateUI){this.setDateRange(animation.begin,animation.end);if(!skipUpdateUI){this.haveCalledUpdateUI=false;this.dataFilterChanged();}
this.propagateEvent("handleEventPropertyChanged",{property:"dateRange",minDate:animation.begin,maxDate:animation.end});},makeDialog:function(text){var html="";html+=HU.div([ATTR_ID,this.getDomId(ID_HEADER),ATTR_CLASS,"display-header"]);var closeImage=HU.getIconImage(icon_close,[]);var close=HU.onClick("$('#"+this.getDomId(ID_DIALOG)+"').hide();",closeImage);var right=close;var left="";var header=HU.div([ATTR_CLASS,"display-dialog-header"],HU.leftRight(left,right));if(!text){var tabTitles=[];var tabContents=[];this.getDialogContents(tabTitles,tabContents);tabTitles.push("Edit");tabContents.push(this.makeToolbar({addLabel:true}));var tabLinks="<ul>";var tabs="";for(var i=0;i<tabTitles.length;i++){var id=this.getDomId("tabs")+i;tabLinks+=HU.tag("li",[],HU.tag("a",["href","#"+id],tabTitles[i]));tabLinks+="\n";var contents=HU.div([ATTR_CLASS,"display-dialog-tab"],tabContents[i]);tabs+=HU.div([ID,id],contents);tabs+="\n";}
tabLinks+="</ul>\n";text=HU.div([ID,this.getDomId(ID_DIALOG_TABS)],tabLinks+tabs);}
return header+text;},initDialog:function(){var _this=this;var updateFunc=function(e){if(e&&e.which!=13&&e.which!=0){return;}
var changed=false;["column","row","width","height"].map(f=>{if(_this[f]!=_this.jq(f).val()&&(_this[f]||_this.jq(f).val().trim()!="")){changed=true;_this[f]=_this.jq(f).val();}});if(changed){_this.getLayoutManager().doLayout();}};["column","row","width","height"].map(f=>{this.jq(f).blur(updateFunc);this.jq(f).keypress(updateFunc);});this.jq("showtitle").change(function(){_this.setShowTitle(_this.jq("showtitle").is(':checked'));});this.jq("showdetails").change(function(){_this.setShowDetails(_this.jq("showdetails").is(':checked'));});this.jq(ID_DIALOG_TABS).tabs();},showDialog:function(text){if(!this.dialogElement){$(document.body).append(HU.div([ATTR_CLASS,"display-dialog",ID,this.getDomId(ID_DIALOG)]));this.dialogElement=this.jq(ID_DIALOG);}
this.dialogElement.html(this.makeDialog(text));this.popup(this.getDomId(ID_MENU_BUTTON),null,null,this.dialogElement);this.initDialog();},copyDisplay:function(){let newOne={};$.extend(true,newOne,this);newOne.setId(newOne.getId()+this.getUniqueId("display"));addRamaddaDisplay(newOne);this.getDisplayManager().addDisplay(newOne);},removeDisplay:function(){this.getDisplayManager().removeDisplay(this);if(this.dialogElement)this.dialogElement.remove();},doingQuickEntrySearch:false,doQuickEntrySearch:function(request,callback){if(this.doingQuickEntrySearch)return;var text=request.term;if(text==null||text.length<=1)return;this.doingQuickEntrySearch=true;var searchSettings=new EntrySearchSettings({name:text,max:10,});if(this.searchSettings){searchSettings.clearAndAddType(this.searchSettings.entryType);}
var theDisplay=this;var jsonUrl=this.getRamadda().getSearchUrl(searchSettings,OUTPUT_JSON);var handler={entryListChanged:function(entryList){theDisplay.doneQuickEntrySearch(entryList,callback);}};var entryList=new EntryList(this.getRamadda(),jsonUrl,handler,true);},doneQuickEntrySearch:function(entryList,callback){var names=[];var entries=entryList.getEntries();for(var i=0;i<entries.length;i++){names.push(entries[i].getName());}
callback(names);this.doingQuickEntrySearch=false;},addData:async function(pointData){var records=pointData.getRecords();if(records&&records.length>0){this.hasElevation=records[0].hasElevation();}else{this.hasElevation=false;}
pointData=this.convertPointData(pointData);this.dataCollection.addData(pointData);var entry=pointData.entry;if(entry==null&&pointData.entryId){await this.getRamadda().getEntry(pointData.entryId,e=>{entry=e});}
if(entry){pointData.entry=entry;this.addEntry(entry);}},setErrorMessage:function(msg){this.setContents(this.getMessage(msg));},clearProgress:function(){this.jq(ID_DISPLAY_PROGRESS).html("");},startProgress:function(){if(this.jq(ID_DISPLAY_PROGRESS).length>0)
this.jq(ID_DISPLAY_PROGRESS).html(HU.image(icon_progress));else
this.setContents(this.getLoadingMessage());},handleNoData:function(pointData,reload){let debug=displayDebug.handleNoData;this.jq(ID_PAGE_COUNT).html("");if(!reload){if(debug)console.log("\tno reload");this.addData(pointData);this.checkSearchBar();}else{if(!this.dataCollection)
this.dataCollection=new DataCollection();this.dataCollection.setData(pointData);}
this.setContents(this.getMessage("No data available"));},pointDataLoadFailed:function(data){this.clearProgress();this.inError=true;errorMessage=this.getProperty("errorMessage",null);if(errorMessage!=null){this.setContents(errorMessage);return;}
var msg="";if(data&&data.errorcode&&data.errorcode=="warning"){msg=data.error;}else{msg="<b>An error has occurred:</b>";if(!data)data="No data returned from server";var error=data.error?data.error:data;error=error.replace(/<[^>]*>/g,"");var tmp="";var lines=error.split("\n");var seen={};for(var i=0;i<lines.length;i++){var line=lines[i].trim();if(line=="")continue;if(seen[line])continue;seen[line]=true;tmp+=line+"\n";}
error=tmp;error=HU.tag("pre",[STYLE,HU.css("max-height","300px","overflow-y","auto","max-width","100%","overflow-x","auto")],error);msg+=error;}
this.setErrorMessage(msg);},clearCache:function(){},pointDataLoaded:function(pointData,url,reload){let debug=displayDebug.pointDataLoaded;this.clearProgress();this.inError=false;this.clearCache();if(debug)console.log(this.type+" pointDataLoad:"+this.getId()+" "+this.type+" #records:"+pointData.getRecords().length);if(debug)
console.log("\tclearing last selected fields");this.lastSelectedFields=null;this.allFields=null;if(!reload){if(debug)console.log("\tcalling addData");this.addData(pointData);this.checkSearchBar();}else{if(!this.dataCollection)
this.dataCollection=new DataCollection();if(debug)console.log("\tcalling setData");this.dataCollection.setData(pointData);}
if(this.getProperty("pageRequest")){if(debug)console.log("\tupdating pageRequest");let count=pointData.getRecords().length;let skip=null;let skipToks=url?url.match(/skip=([0-9]+)/):null;if(skipToks)skip=+skipToks[1];let max=+this.getProperty("max",5000);let label=count;if(skip!=null&&skip>0)
label=String(skip+1)+"-"+(count+skip);else if(count==max)
label="1"+"-"+count;let pageInfo=this.getProperty("pageRequestLabel","Showing: ${count}").replace("${count}",label)+" ";let gotAll=!skip&&count<max;if(skip!=null&&skip>0){pageInfo+=HU.getIconImage("fa-step-backward",[ID,this.getDomId(ID_PAGE_PREV),CLASS,"display-page-button",TITLE,"View previous"])}else if(!gotAll){pageInfo+=HU.getIconImage("fa-step-backward",[CLASS,"display-page-button fa-disabled"])}
if(count==max){pageInfo+=HU.getIconImage("fa-step-forward",[ID,this.getDomId(ID_PAGE_NEXT),CLASS,"display-page-button",TITLE,"View next"])}else if(!gotAll){pageInfo+=HU.getIconImage("fa-step-forward",[CLASS,"display-page-button fa-disabled"])}
this.jq(ID_PAGE_COUNT).html(pageInfo+"&nbsp;&nbsp;");this.jq(ID_PAGE_NEXT).click(()=>{if(!this.pageSkip)
this.pageSkip=0;this.pageSkip+=max;this.reloadData();});this.jq(ID_PAGE_PREV).click(()=>{if(!this.pageSkip)
this.pageSkip=0;this.pageSkip-=max;if(this.pageSkip<0)this.pageSkip=0;this.reloadData();});}
if(url!=null){this.jsonUrl=url;}else{this.jsonUrl=null;}
if(!this.getDisplayReady()){if(debug)console.log("pointDataLoaded: display not ready");return;}
if(!this.getProperty("dateFormat")){pointData.getRecordFields().map(f=>{if(f.isFieldDate()&&f.getId()=="year"){this.setProperty("dateFormat","yyyy");}});}
this.haveCalledUpdateUI=false;if(debug)console.log("\tcalling updateUI");this.updateUI({reload:reload});if(!reload){this.lastPointData=pointData;this.propagateEvent("handleEventPointDataLoaded",pointData);}},getDateFormatter:function(){var date_formatter=null;if(this.isGoogleLoaded()){var df=this.getProperty("dateFormat",null);if(df){var tz=0;this.timezone=this.getProperty("timezone");if(Utils.isDefined(this.timezone)){tz=parseFloat(this.timezone);}
date_formatter=new google.visualization.DateFormat({pattern:df,timeZone:tz});}}
return date_formatter;},getHasDate:function(records){var lastDate=null;this.hasDate=false;for(j=0;j<records.length;j++){var record=records[j];var date=record.getDate();if(date==null){continue;}
if(lastDate!=null&&lastDate.getTime()!=date.getTime()){this.hasDate=true;break}
lastDate=date;}
return this.hasDate;},dateInRange:function(date,debug){if(debug){console.log("dateInRange: date:"+date+" minDate:"+this.minDateObj+" maxDate:"+this.maxDateObj);}
if(date!=null){if(this.dateRangeDoDay&&this.minDateObj){if(date.getUTCFullYear()!=this.minDateObj.getUTCFullYear()||date.getUTCMonth()!=this.minDateObj.getUTCMonth()||date.getUTCDate()!=this.minDateObj.getUTCDate()){return false;}}else{if(this.minDateObj!=null&&date.getTime()<this.minDateObj.getTime()){if(debug){console.log("    minDate:\n\t"+date.getTime()+"\n\t"+this.minDateObj.getTime());}
return false;}
if(this.maxDateObj!=null&&date.getTime()>this.maxDateObj.getTime()){if(debug){console.log("    maxDate:\n\t"+date.getTime()+"\n\t"+this.minDateObj.getTime());}
return false;}}
if(this.startDateObject!=null&&date.getTime()<this.startDateObject.getTime()){if(debug){console.log("    startDate:\n\t"+date.getTime()+"\n\t"+this.startDateObject.getTime());}
return false;}
if(this.endDateObject!=null&&date.getTime()>this.endDateObject.getTime()){if(debug){console.log("    endDate:\n\t"+date.getTime()+"\n\t"+this.endDateObject.getTime());}
return false;}}
return true;},getPointData:function(){if(this.dataCollection.getList().length==0)return null;return this.dataCollection.getList()[0];},getDataValues:function(obj){if(obj.tuple)return obj.tuple;else if(obj.getData)return obj.getData();return obj;},indexToRecord:{},recordToIndex:{},findMatchingIndex:function(record){if(!record)return-1;var index=this.recordToIndex[record.getId()];if(Utils.isDefined(index)){return index;}
if(!record.hasDate())return-1;var closest;var min=0;for(i in this.indexToRecord){var r=this.indexToRecord[i];if(!r.hasDate())return-1;var diff=Math.abs(record.getDate().getTime()-r.getDate().getTime());if(!closest){min=diff;closest=r;}else{if(diff<min){min=diff;closest=r;}}}
if(!closest)
return-1;return this.recordToIndex[closest.getId()];},makeDataArray:function(dataList){if(dataList.length==0)return dataList;var data=[];if(dataList[0].getData){for(var i=0;i<dataList.length;i++){data.push(dataList[i].getData()[0]);}}else if(dataList[0].tuple){for(var i=0;i<dataList.length;i++){data.push(dataList[i].tuple);}}else{data=dataList;}
return data;},printFields:function(label,fields){console.log(label);if(!fields){console.log("   null fields");return;}
for(a in fields)
console.log("   "+fields[a].getId());},makeIndexValue:function(indexField,value,offset){return value+offset;},getStandardData:function(fields,args){let debug=displayDebug.getStandardData;if(debug)console.log("getStandardData:"+this.type+"  fields:"+fields);let showUnit=this.getProperty("showUnit",true);this.recordToIndex={};this.indexToRecord={};var pointData=this.getPointData();var excludeZero=this.getProperty(PROP_EXCLUDE_ZERO,false);if(fields==null){fields=pointData.getRecordFields();if(debug)console.log("\tgetRecordFields: "+fields.length);}else{}
props={makeObject:true,includeIndex:true,includeIndexIfDate:false,groupByIndex:-1,raw:false,};if(args!=null){$.extend(props,args);}
let groupByIndex=props.groupByIndex;let groupByList=[];let groupByValues={};let groupByRecords=[];let groupByDate=this.getProperty("groupByDate");let groupByFill=this.getProperty("groupByFill");let groupByDateMap={};let groupByDates=[];var dataList=[];var fieldNames=[];if(this.getProperty("binDate")){if(debug)
console.log("binning date");var binType=this.getProperty("binType","total");var binCount=binType=="count";if(binCount){var f=[];fields.map((field)=>{f.push(new RecordField({index:0,id:field.getId(),label:this.getProperty("binDateLabel",this.getProperty("binCountLabel","Count")),type:"double",chartable:true}));});fields=f;}}
let seenDate=false;fields=fields.filter(f=>{if(f.isFieldDate()){if(seenDate&&f.isRecordDate())return null;seenDate=true;}
return f;});for(i=0;i<fields.length;i++){var field=fields[i];if(field.isFieldNumeric()&&field.isFieldDate()){}
var name=field.getLabel();if(showUnit&&field.getUnit()!=null){name+=" ("+field.getUnit()+")";}
name=name.replace(/!!/g," -- ")
fieldNames.push(name);}
if(props.makeObject){dataList.push({tuple:fieldNames,record:null});}else{dataList.push(fieldNames);}
groupByList.push("");groupByRecords.push(null);if(!this.minDateObj){this.minDateObj=Utils.parseDate(this.minDate,false);if(debug)
console.log("getStandardData setting min date:"+this.minDateObj);}
if(!this.minDateObj){this.maxDateObj=Utils.parseDate(this.maxDate,true,this.minDateObj);if(debug)
console.log("getStandardData setting max date:"+this.maxDateObj);}
if(this.minDateObj==null&&this.maxDateObj!=null){this.minDateObj=Utils.parseDate(this.minDate,false,this.maxDateObj);}
var offset=0;if(Utils.isDefined(this.offset)){offset=parseFloat(this.offset);}
var nonNullRecords=0;var records=this.filterData();if(debug)
console.log("getStandardData #fields:"+fields.length+" #records:"+records.length);var allFields=pointData.getRecordFields();this.hasDate=this.getHasDate(records);var date_formatter=this.getDateFormatter();var rowCnt=-1;var indexField=this.getFieldById(null,this.getProperty("indexField"));for(var rowIdx=0;rowIdx<records.length;rowIdx++){var record=records[rowIdx];var date=record.getDate();if(!this.dateInRange(date)){continue;}
rowCnt++;this.recordToIndex[record.getId()]=rowCnt;this.indexToRecord[rowCnt]=record;var values=[];if(props&&(props.includeIndex||props.includeIndexIfDate)){var indexName=null;if(indexField){var value=this.makeIndexValue(indexField,record.getValue(indexField.getIndex()),rowIdx);values.push(value);indexName=indexField.getLabel();}else{if(this.hasDate){values.push(this.getDateValue(date,date_formatter));indexName="Date";}else{if(!props.includeIndexIfDate){values.push(rowIdx);indexName=this.getProperty("indexName","Index");}}}
if(indexName!=null&&rowCnt==0){fieldNames.unshift(indexName);}}
let allNull=true;let allZero=true;let hasNumber=false;for(let fieldIdx=0;fieldIdx<fields.length;fieldIdx++){let field=fields[fieldIdx];if(field.isFieldNumeric()&&field.isFieldDate()){}
var value=record.getValue(field.getIndex());if(offset!=0){value+=offset;}
if(value!=null){allNull=false;}
if(typeof value=='number'){hasNumber=true;if(value!=0){allZero=false;}}
if(field.isFieldDate()){value=this.getDateValue(value,date_formatter);}
values.push(value);}
if(hasNumber&&allZero&&excludeZero){continue;}
if(groupByIndex>=0){var value=record.getValue(groupByIndex);if(!groupByValues[value])groupByValues[value]=true;if(groupByDate)
groupByList.push(record.getDate()+"-"+value);else
groupByList.push(value);groupByRecords.push(record);}
if(props.makeObject)
dataList.push({tuple:values,record:record});else
dataList.push(values);if(!allNull){nonNullRecords++;}}
if(nonNullRecords==0){console.log("no nonNull records");return[];}
if(groupByIndex>=0){var groupToTuple={};var groups=[];var agg=[];var title=[];let groupByCount=this.getProperty("groupByCount");title.push(props.groupByField.getLabel());if(groupByCount){title.push(this.getProperty("groupByCountLabel","Count"));}else{for(var fieldIdx=0;fieldIdx<fields.length;fieldIdx++){var field=fields[fieldIdx];if(field.getIndex()!=groupByIndex){title.push(field.getLabel());}}}
let groupByValueTuples={};for(var rowIdx=0;rowIdx<dataList.length;rowIdx++){var data=this.getDataValues(dataList[rowIdx]);if(rowIdx==0){continue;}
var groupBy=groupByList[rowIdx];var record=groupByRecords[rowIdx];var groupByValue=record.getValue(groupByIndex);var tuple=groupToTuple[groupBy];if(tuple==null){tuple=new Array();groups.push(groupBy);if(groupByDate){let dateList=groupByDateMap[record.getDate()];if(dateList==null){groupByDateMap[record.getDate()]=dateList=[];groupByDates.push(record.getDate());}
dateList.push(tuple);}
if(!groupByValueTuples[groupByValue])groupByValueTuples[groupByValue]=[];groupByValueTuples[groupByValue].push(tuple)
tuple.record=record;agg.push(tuple);tuple.push(groupByValue);if(groupByCount){tuple.push(0);}else{for(var fieldIdx=0;fieldIdx<fields.length;fieldIdx++){var field=fields[fieldIdx];if(field.getIndex()==groupByIndex){continue;}
tuple.push(0);}}
groupToTuple[groupBy]=tuple;}
var index=0;if(groupByCount){tuple[1]++;continue;}
for(var fieldIdx=0;fieldIdx<fields.length;fieldIdx++){var field=fields[fieldIdx];if(field.getIndex()==groupByIndex){continue;}
var dataValue=data[fieldIdx];index++;if(Utils.isNumber(dataValue)){if(typeof tuple[index]=="string"){tuple[index]=0;}
tuple[index]+=parseFloat(dataValue);}else{if(tuple[index]==0){tuple[index]="";}
var s=tuple[index];if(!Utils.isDefined(s)){s="";}
if(s.length<150){if(!Utils.isDefined(dataValue)){dataValue="";}
var sv=(""+dataValue);if(s.indexOf(sv)<0){if(s!=""){s+=", ";}
s+=sv;tuple[index]=s;}}}}}
if(groupByFill){groupByDates.map(date=>{let dateList=groupByDateMap[date];let seen={};dateList.map(tuple=>{seen[tuple[0]]=true;});for(v in groupByValues){if(!seen[v]){seen[v]=true;let tuple=[v,0];tuple.date=date;agg.push(tuple);}}});}
if(this.getProperty("groupBySort")){agg.sort(function(a,b){return b[1]-a[1]});}
if(this.getProperty("groupByMaxNumber")){let cnt=+this.getProperty("groupByMaxNumber");agg=agg.filter((t,idx)=>{return idx<cnt;});}
let tmp=[];tmp.push(title);agg.map(t=>tmp.push(t));return tmp;}
return dataList;},isGoogleLoaded:function(){if((typeof google==='undefined')||(typeof google.visualization==='undefined')||(typeof google.visualization.DateFormat==='undefined')){return false;}
return true;},initDateFormats:function(){if(!this.isGoogleLoaded()){return false;}
if(this.fmt_yyyy)return true;var tz=0;this.timezone=this.getProperty("timezone");if(Utils.isDefined(this.timezone)){tz=parseFloat(this.timezone);}
this.fmt_yyyymmddhhmm=new google.visualization.DateFormat({pattern:"yyyy-MM-dd HH:mm Z",timeZone:tz});this.fmt_yyyymmdd=new google.visualization.DateFormat({pattern:"yyyy-MM-dd",timeZone:tz});this.fmt_yyyy=new google.visualization.DateFormat({pattern:"yyyy",timeZone:tz});return true;},getDateValue:function(arg,formatter){if(!this.initDateFormats()){return arg;}
if(!(typeof arg=="object")){date=new Date(arg);}else{date=arg;}
if(isNaN(date.getUTCFullYear()))return{v:date,f:"NA"};if(!formatter){formatter=this.fmt_yyyymmddhhmm;}
var s=formatter.formatValue(date);date={v:date,f:s};return date;},applyFilters:function(record,values){for(var i=0;i<this.filters.length;i++){if(!this.filters[i].isRecordOk(record)){return false;}}
return true;}});var filter=this.getProperty(PROP_DISPLAY_FILTER);if(filter!=null){var filters=filter.split(";");for(var i=0;i<filters.length;i++){filter=filters[i];var toks=filter.split(":");var type=toks[0];if(type=="month"){this.filters.push(new MonthFilter(toks[1]));}else{console.log("unknown filter:"+type);}}}}
function DisplayGroup(argDisplayManager,argId,argProperties,type){const LAYOUT_TABLE="table";const LAYOUT_HTABLE="htable";const LAYOUT_TABS="tabs";const LAYOUT_COLUMNS="columns";const LAYOUT_ROWS="rows";let SUPER=new RamaddaDisplay(argDisplayManager,argId,type||"group",argProperties);RamaddaUtil.inherit(this,SUPER);RamaddaUtil.defineMembers(this,{displays:[],layout:this.getProperty(PROP_LAYOUT_TYPE,LAYOUT_TABLE),columns:this.getProperty(PROP_LAYOUT_COLUMNS,1),isLayoutColumns:function(){return this.layout==LAYOUT_COLUMNS;},getWikiText:function(){var attrs=["layoutType",this.layout,"layoutColumns",this.columns,"showMenu","false","divid","$entryid_maindiv"];let wiki="";wiki+="<div id=\"{{entryid}}_maindiv\"></div>\n\n";wiki+="{{group "+HU.attrs(attrs)+"}}\n\n"
return wiki;},walkTree:function(func,data){for(var i=0;i<this.displays.length;i++){let display=this.displays[i];if(display.walkTree!=null){display.walkTree(func,data);}else{func.call(data,display);}}},collectEntries:function(entries){if(entries==null)entries=[];for(let i=0;i<this.displays.length;i++){let display=this.displays[i];if(display.collectEntries!=null){display.collectEntries(entries);}else{let displayEntries=display.getEntries();if(displayEntries!=null&&displayEntries.length>0){entries.push({source:display,entries:displayEntries});}}}
return entries;},isLayoutRows:function(){return this.layout==LAYOUT_ROWS;},getPosition:function(){for(let i=0;i<this.displays.length;i++){let display=this.displays[i];if(display.getPosition){return display.getPosition();}}},getDisplays:function(){return this.displays;},notifyEvent:function(func,source,data){let displays=this.getDisplays();for(let i=0;i<this.displays.length;i++){let display=this.displays[i];if(display==source){continue;}
if(!display.getProperty("accept."+func,true))continue;let eventSource=display.getEventSource();if(eventSource!=null&&eventSource.length>0){if(eventSource!=source.getId()&&eventSource!=source.getName()){continue;}}
display.notifyEvent(func,source,data);}},getDisplaysToLayout:function(){let result=[];for(let i=0;i<this.displays.length;i++){if(this.displays[i].getIsLayoutFixed()){continue;}
result.push(this.displays[i]);}
return result;},pageHasLoaded:function(display){this.doLayout();},addDisplay:function(display){this.displays.push(display);if(display.getIsLayoutFixed()){display.initDisplay();}else{if(Utils.getPageLoaded()){this.doLayout();}}},layoutChanged:function(display){this.doLayout();},removeDisplay:function(display){let index=this.displays.indexOf(display);if(index>=0){this.displays.splice(index,1);}
this.doLayout();},doLayout:function(){let html="";let colCnt=100;let displaysToLayout=this.getDisplaysToLayout();let displaysToPrepare=this.displays;displaysToPrepare.map(display=>{if(display.prepareToLayout!=null){display.prepareToLayout();}});let weightIdx=0;let weights=null;if(typeof this.weights!="undefined"){weights=this.weights.split(",");}
for(let i=0;i<displaysToLayout.length;i++){let divId=HU.getUniqueId("divid_");let div=HU.div([CLASS," display-wrapper",ID,divId],"");displaysToLayout[i].setProperty(PROP_DIVID,divId);displaysToLayout[i].layoutDiv=div;}
if(this.layout==LAYOUT_TABLE){if(displaysToLayout.length==1){html+=displaysToLayout[0].layoutDiv;}else{let weight=12/this.columns;let i=0;let map={};for(;i<displaysToLayout.length;i++){let d=displaysToLayout[i];if(Utils.isDefined(d.column)&&Utils.isDefined(d.row)&&d.columns>=0&&d.row>=0){let key=d.column+"_"+d.row;if(map[key]==null)map[key]=[];map[key].push(d);}}
i=0;for(;i<displaysToLayout.length;i++){colCnt++;if(colCnt>=this.columns){if(i>0){html+=HU.close(TAG_DIV);}
html+=HU.open("div",[CLASS,"row"]);colCnt=0;}
let weightToUse=weight;if(weights!=null){if(weightIdx>=weights.length){weightIdx=0;}
weightToUse=weights[weightIdx];weightIdx++;}
html+=HU.div([CLASS,"col-md-"+weightToUse+" display-wrapper display-cell"],displaysToLayout[i].layoutDiv);html+="\n";}
if(i>0){html+=HU.close(TAG_DIV);}}}else if(this.layout==LAYOUT_HTABLE){if(displaysToLayout.length==1){html+=displaysToLayout[0].layoutDiv;}else{let percent=Math.round((100/this.columns))+"%";let i=0;html+="<table width=100%>\n";let colCnt=100;for(let i=0;i<displaysToLayout.length;i++){colCnt++;if(colCnt>=this.columns){if(i>0){html+=HU.close(TAG_TR);}
html+=HU.open("tr",["valign","top"]);html+="\n";colCnt=0;}
html+=HU.td(["width",percent],displaysToLayout[i].layoutDiv);html+="\n";}
if(i>0){html+=HU.close(TAG_TR);}}}else if(this.layout==LAYOUT_TABS){let tabId=HU.getUniqueId("tabs_");html+=HU.open(TAG_DIV,[ID,tabId,CLASS,"ui-tabs"]);html+=HU.open(TAG_UL,[]);let hidden="";let cnt=0;for(let i=0;i<displaysToLayout.length;i++){let display=displaysToLayout[i];let label=display.getTitle(false);if(label.length>20){label=label.substring(0,19)+"...";}
html+=HU.tag(TAG_LI,[],HU.tag(TAG_A,["href","#"+tabId+"-"+cnt],label));hidden+=HU.div([ID,tabId+"-"+cnt,CLASS,"ui-tabs-hide"],display.layoutDiv);cnt++;}
html+=HU.close(TAG_UL);html+=hidden;html+=HU.close(TAG_DIV);}else if(this.layout==LAYOUT_ROWS){let rows=[];for(let i=0;i<displaysToLayout.length;i++){let display=displaysToLayout[i];let row=display.getRow();if((""+row).length==0)row=0;while(rows.length<=row){rows.push([]);}
rows[row].push(display.layoutDiv);}
for(let i=0;i<rows.length;i++){let cols=rows[i];let width=Math.round(100/cols.length)+"%";html+=HU.open(TAG_TABLE,["border","0","width","100%","cellpadding","0","cellspacing","0"]);html+=HU.open(TAG_TR,["valign","top"]);for(let col=0;col<cols.length;col++){let cell=cols[col];cell=HU.div([CLASS,"display-cell"],cell);html+=HU.tag(TAG_TD,["width",width],cell);}
html+=HU.close(TAG_TR);html+=HU.close(TAG_TABLE);}}else if(this.layout==LAYOUT_COLUMNS){let cols=[];for(let i=0;i<displaysToLayout.length;i++){let display=displaysToLayout[i];let column=display.getColumn();if((""+column).length==0)column=0;while(cols.length<=column){cols.push([]);}
cols[column].push(display.layoutDiv);}
html+=HU.open(TAG_DIV,[CLASS,"row"]);let width=Math.round(100/cols.length)+"%";let weight=12/cols.length;for(let i=0;i<cols.length;i++){let rows=cols[i];let contents="";for(let j=0;j<rows.length;j++){contents+=rows[j];}
let weightToUse=weight;if(weights!=null){if(weightIdx>=weights.length){weightIdx=0;}
weightToUse=weights[weightIdx];weightIdx++;}
html+=HU.div([CLASS,"col-md-"+weightToUse],contents);}
html+=HU.close(TAG_DIV);}else{html+="Unknown layout:"+this.layout;}
if(!this.getShowMenu()&&displaysToLayout.length==0){$("#"+this.getId()).hide();}else{$("#"+this.getId()).show();}
this.writeHtml(ID_DISPLAYS,html);if(this.layout==LAYOUT_TABS){$("#"+tabId).tabs({activate:HtmlUtil.tabLoaded});}
this.initDisplays();},initDisplays:function(){this.getDisplaysToLayout().map(display=>{try{display.initDisplay();}catch(e){display.displayError("Error creating display:<br>"+e);console.log("error creating display: "+this.displays[i].getType());console.log(e.stack)}});},displayData:function(){},setLayout:function(layout,columns){this.layout=layout;if(columns){this.columns=columns;}
this.doLayout();},askMinZAxis:function(){let v=prompt("Minimum axis value","0");if(v!=null){v=parseFloat(v);for(let i=0;i<this.displays.length;i++){let display=this.displays[i];if(display.setMinZAxis){display.setMinZAxis(v);}}}},askMaxZAxis:function(){let v=prompt("Maximum axis value","0");if(v!=null){v=parseFloat(v);for(let i=0;i<this.displays.length;i++){let display=this.displays[i];if(display.setMaxZAxis){display.setMaxZAxis(v);}}}},askMinDate:function(){let d=this.minDate;if(!d)d="1950-0-0";this.minDate=prompt("Minimum date",d);if(this.minDate!=null){for(let i=0;i<this.displays.length;i++){let display=this.displays[i];if(display.setMinDate){display.setMinDate(this.minDate);}}}},askMaxDate:function(){let d=this.maxDate;if(!d)d="2020-0-0";this.maxDate=prompt("Maximum date",d);if(this.maxDate!=null){for(let i=0;i<this.displays.length;i++){let display=this.displays[i];if(display.setMaxDate){display.setMaxDate(this.maxDate);}}}},titlesOff:function(){for(let i=0;i<this.displays.length;i++){this.displays[i].setShowTitle(false);}},titlesOn:function(){for(let i=0;i<this.displays.length;i++){this.displays[i].setShowTitle(true);}},detailsOff:function(){for(let i=0;i<this.displays.length;i++){this.displays[i].setShowDetails(false);}
this.doLayout();},detailsOn:function(){for(let i=0;i<this.displays.length;i++){this.displays[i].setShowDetails(true);}
this.doLayout();},deleteAllDisplays:function(){this.displays=[];this.doLayout();},moveDisplayUp:function(display){let index=this.displays.indexOf(display);if(index<=0){return;}
this.displays.splice(index,1);this.displays.splice(index-1,0,display);this.doLayout();},moveDisplayDown:function(display){let index=this.displays.indexOf(display);if(index>=this.displays.length){return;}
this.displays.splice(index,1);this.displays.splice(index+1,0,display);this.doLayout();},moveDisplayTop:function(display){let index=this.displays.indexOf(display);if(index>=this.displays.length){return;}
this.displays.splice(index,1);this.displays.splice(0,0,display);this.doLayout();},});}
function RamaddaFieldsDisplay(displayManager,id,type,properties){let SUPER=new RamaddaDisplay(displayManager,id,type,properties);RamaddaUtil.inherit(this,this.RamaddaDisplay=SUPER);RamaddaUtil.defineMembers(this,{needsData:function(){return true;},handleEventMapClick:function(source,args){if(!this.dataCollection)return;var pointData=this.dataCollection.getList();for(var i=0;i<pointData.length;i++){pointData[i].handleEventMapClick(this,source,args.lon,args.lat);}},initDisplay:function(){SUPER.initDisplay.call(this);if(this.needsData()){this.setContents(this.getLoadingMessage());}
this.updateUI();},updateUI:function(){this.addFieldsCheckboxes();},checkLayout:function(){var d=this.jq(ID_DISPLAY_CONTENTS);if(this.lastWidth!=d.width()){this.displayData();}},getWikiAttributes:function(attrs){SUPER.getWikiAttributes.call(this,attrs);if(this.lastSelectedFields){attrs.push("fields");var v="";for(var i=0;i<this.lastSelectedFields.length;i++){v+=this.lastSelectedFields[i].getId();v+=",";}
attrs.push(v);}},initDialog:function(){SUPER.initDialog.call(this);this.addFieldsCheckboxes();},getDialogContents:function(tabTitles,tabContents){var height="600";var html=HU.div([ATTR_ID,this.getDomId(ID_FIELDS),STYLE,HU.css("overflow-y","auto","max-height",height+"px")]," FIELDS ");tabTitles.push("Fields");tabContents.push(html);SUPER.getDialogContents.call(this,tabTitles,tabContents);},handleEventFieldsSelected:function(source,fields){if(fields.length>0&&(typeof fields[0]=="string")){var tmp=[];fields.map(f=>{f=this.getFieldById(null,f);if(f)tmp.push(f);});fields=tmp;}
this.userHasSelectedAField=true;this.overrideFields=null;this.removeProperty(PROP_FIELDS);this.setSelectedFields(fields);this.fieldSelectionChanged();},getFieldsToSelect:function(pointData){return pointData.getRecordFields();},canDoMultiFields:function(){return true;}})}
var FILTER_ALL="-all-";let pointDataCache={};function DataCollection(){RamaddaUtil.defineMembers(this,{data:[],hasData:function(){for(var i=0;i<this.data.length;i++){if(this.data[i].hasData())return true;}
return false;},getList:function(){return this.data;},setData:function(data){this.data=[data];},addData:function(data){this.data.push(data);},handleEventMapClick:function(myDisplay,source,lon,lat){var anyHandled=false;for(var i=0;i<this.data.length;i++){if(this.data[i].handleEventMapClick(myDisplay,source,lon,lat)){anyHandled=true;}}
return anyHandled;},});}
function BasePointData(name,properties){if(properties==null)properties={};RamaddaUtil.defineMembers(this,{recordFields:null,records:null,entryId:null,entry:null});$.extend(this,properties);RamaddaUtil.defineMembers(this,{name:name,properties:properties,initWith:function(thatPointData){this.recordFields=thatPointData.recordFields;this.records=thatPointData.records;this.setGroupField();return this;},handleEventMapClick:function(myDisplay,source,lon,lat){return false;},hasData:function(){return this.records!=null;},clear:function(){this.records=null;this.recordFields=null;},getProperties:function(){return this.properties;},getProperty:function(key,dflt){var value=this.properties[key];if(value==null)return dflt;return value;},getRecordFields:function(){return this.recordFields;},addRecordField:function(field){this.recordFields.push(field);},getRecords:function(){return this.records;},getNumericFields:function(){var recordFields=this.getRecordFields();var numericFields=[];for(var i=0;i<recordFields.length;i++){var field=recordFields[i];if(field.isNumeric())numericFields.push(field);}
return numericFields;},getChartableFields:function(display){var recordFields=this.getRecordFields();var numericFields=[];var skip=/(TIME|HOUR|MINUTE|SECOND|YEAR|MONTH|DAY|LATITUDE|LONGITUDE|^ELEVATION$)/g;var skip=/(xxxnoskip)/g;for(var i=0;i<recordFields.length;i++){var field=recordFields[i];if(!field.isNumeric()||!field.isChartable()){continue;}
var ID=field.getId().toUpperCase();if(ID.match(skip)){continue;}
numericFields.push(field);}
return RecordUtil.sort(numericFields);},getNonGeoFields:function(display){var recordFields=this.getRecordFields();var numericFields=[];var hadDate=false;for(var i=0;i<recordFields.length;i++){var field=recordFields[i];if(field.isFieldGeo()){continue;}
if(field.isFieldDate()){if(hadDate&&field.getId()=="recordDate"){continue;}
hadDate=true;}
numericFields.push(field);}
return numericFields;},loadData:function(display){},getName:function(){return this.name;},getTitle:function(){if(this.records!=null&&this.records.length>0)
return this.name+" - "+this.records.length+" points";return this.name;}});}
function convertToPointData(array){var fields=[];var records=[];var header=array[0];var samples=array[1];for(var i=0;i<header.length;i++){let label=String(header[i]);let id=label.toLowerCase().replace(/[ ., ]+/g,"_");let sample=samples[i];let tof=typeof sample;let type;if(tof=="string")
type="string";else if(tof=="number")
type="double";else if(sample.getTime)
type="date";else
console.log("Unknown type:"+tof);fields.push(new RecordField({id:id,index:i,label:label,type:type,chartable:true}));}
for(var i=1;i<array.length;i++){records.push(new PointRecord(fields,NaN,NaN,NaN,null,array[i]));}
return new PointData("pointdata",fields,records,null,null);}
function PointData(name,recordFields,records,url,properties){RamaddaUtil.inherit(this,new BasePointData(name,properties));RamaddaUtil.defineMembers(this,{recordFields:recordFields,records:records,url:url,loadingCnt:0,equals:function(that){if(this.jsonUrl){return this.jsonUrl==that.jsonUrl;}
return this.url==that.url;},getIsLoading:function(){return this.loadingCnt>0;},handleEventMapClick:function(myDisplay,source,lon,lat){this.lon=lon;this.lat=lat;if(myDisplay.getDisplayManager().hasGeoMacro(this.url)){console.log("url:"+this.url);this.loadData(myDisplay,true);return true;}
return false;},startLoading:function(){this.loadingCnt++;},stopLoading:function(){this.loadingCnt--;},setGroupField:function(){if(this.recordFields){for(var i=0;i<this.recordFields.length;i++){var field=this.recordFields[i];if(field.isFieldGroup()){this.groupField=field;break;}}}},extractGroup:function(group,records){if(!this.groupField)return records;var groupData=this.getDataGroups(records);if(groupData.length==0)return records;if(!group)group=groupData[0];return records;},getDataGroups:function(records){if(!this.groupData){if(!records)return[];this.groupData=[];var groupField=this.getGroupField();if(!groupField)return this.groupData;var seen={};for(var i=0;i<records.length;i++){var record=records[i];var data;if(record.tuple)
data=record.tuple;else if(record.record)
data=record.record.getData();console.log("data:"+data);var value=groupField.getValue(data);if(!seen[value]){seen[value]=true;this.groupData.push(value);}}}
console.log(this.groupData);return this.groupData;},getGroupField:function(){return this.groupField;},isGroup:function(){return this.getGroupField()!=null;},loadData:function(display,reload){if(this.url==null){console.log("No URL");return;}
var props={lat:this.lat,lon:this.lon,};var jsonUrl=display.displayManager.getJsonUrl(this.url,display,props);this.jsonUrl=jsonUrl;this.loadPointJson(jsonUrl,display,reload);},loadPointJson:function(url,display,reload){let debug=displayDebug.loadPointJson;let doCache=true;let pointData=this;this.startLoading();var _this=this;if(debug)
console.log("loadPointJson: "+display.getId());var cacheObject=pointDataCache[url];if(!doCache)cacheObject=null;if(cacheObject==null){cacheObject={pointData:null,pending:[],size:0,url:url,toString:function(){return"cache:"+(this.pointData==null?" no data ":" data:"+this.pointData.pdcnt+" "+this.pointData.getRecords().length)+" url:"+this.url;}};if(debug)
console.log("\tcreated new obj in cache: "+url);pointDataCache[url]=cacheObject;}
if(cacheObject.pointData!=null){if(debug)
console.log("\tdata was in cache:"+cacheObject.pointData.getRecords().length+" url:"+url);display.pointDataLoaded(cacheObject.pointData,url,reload);return;}
cacheObject.pending.push(display);if(cacheObject.pending.length>1){if(debug)
console.log("\tWaiting on callback:"+cacheObject.pending.length+" "+url+" d:"+display);return;}
var fail=function(jqxhr,textStatus,error){var err=textStatus;if(err){if(error)
err+=": "+error;}else{err=error;}
console.log("Point data load error:"+(err?err:""));cacheObject.pending.map(display=>{display.pointDataLoadFailed(err);});delete pointDataCache[url];pointData.stopLoading();}
var success=function(data){if(GuiUtils.isJsonError(data)){console.log("is error");if(debug)
console.log("\tloadPointData failed");display.pointDataLoadFailed(data);return;}
if(data.errorcode=="nodata"||!data.fields){if(debug)
console.log("\tno data:"+url);let dummy=new PointData("",[],[]);var tmp=cacheObject.pending;cacheObject.pending=[];for(var i=0;i<tmp.length;i++){tmp[i].handleNoData(dummy);}
return;}
if(debug)
console.log("\tmaking point data");let t1=new Date();var newData=makePointData(data,_this.derived,display);let t2=new Date();if(debug)
Utils.displayTimes("makePointData",[t1,t2],true);if(debug)
console.log("\tdone making point data #records:"+newData.getRecords().length);pointData=cacheObject.pointData=newData;if(data.properties){display.applyRequestProperties(data.properties);}
if(debug)
console.log("\tpending:"+cacheObject.pending.length);var tmp=cacheObject.pending;cacheObject.pending=[];for(var i=0;i<tmp.length;i++){if(debug)
console.log("\tcalling pointDataLoaded:"+tmp[i].getId()+" #:"+pointData.getRecords().length);tmp[i].pointDataLoaded(pointData,url,reload);}
if(cacheObject.pointData.records&&cacheObject.pointData.records.length){cacheObject.size=cacheObject.pointData.records.length*cacheObject.pointData.records[0].getData().length;}
let size=0;Object.keys(pointDataCache).map(key=>{size+=pointDataCache[key].size;});if(debug)
console.log("\tcache size:"+size);if(size>1000000){Object.keys(pointDataCache).map(key=>{if(pointDataCache[key].pending.length==0){if(debug)
console.log("\tDeleting from cache:"+key);delete pointDataCache[key];}});}
pointData.stopLoading();}
let fullUrl=url;if(!fullUrl.startsWith("http")){var base=window.location.protocol+"//"+window.location.host;fullUrl=base+fullUrl;}
console.log("load data:"+fullUrl);Utils.doFetch(url,success,fail,"text");}});this.setGroupField();}
function DerivedPointData(displayManager,name,pointDataList,operation){RamaddaUtil.inherit(this,new BasePointData(name));RamaddaUtil.defineMembers(this,{displayManager:displayManager,operation:operation,pointDataList:pointDataList,loadDataCalls:0,display:null,pointDataLoaded:function(pointData){this.loadDataCalls--;if(this.loadDataCalls<=0){this.initData();}},equals:function(that){if(that.pointDataList==null)return false;if(this.pointDataList.length!=that.pointDataList.length)return false;for(var i in this.pointDataList){if(!this.pointDataList[i].equals(that.pointDataList[i])){return false;}}
return true;},initData:function(){var pointData1=this.pointDataList[0];if(this.pointDataList.length==1){this.records=pointData1.getRecords();this.recordFields=pointData1.getRecordFields();console.log("initData:"+this.recordFields.length);}else if(this.pointDataList.length>1){var results=this.combineData(pointData1,this.pointDataList[1]);this.records=results.records;this.recordFields=results.recordFields;console.log("initData 2:"+this.recordFields.length);}
this.setGroupField();this.display.pointDataLoaded(this);},combineData:function(pointData1,pointData2){var records1=pointData1.getRecords();var records2=pointData2.getRecords();var newRecords=[];var newRecordFields;if(records1.length!=records2.length){console.log("bad records:"+records1.length+" "+records2.length);}
if(this.operation=="average"){for(var recordIdx=0;recordIdx<records1.length;recordIdx++){var record1=records1[recordIdx];var record2=records2[recordIdx];if(record1.getDate()!=record2.getDate()){console.log("Bad record date:"+record1.getDate()+" "+record2.getDate());break;}
var newRecord=$.extend(true,{},record1);var data1=newRecord.getData();var data2=record2.getData();for(var colIdx=0;colIdx<data1.length;colIdx++){data1[colIdx]=(data1[colIdx]+data2[colIdx])/2;}
newRecords.push(newRecord);}
newRecordFields=pointData1.getRecordFields();}else if(this.operation=="other func"){}
if(newRecordFields==null){newRecords=records1;newRecordFields=pointData1.getRecordFields();}
return{records:newRecords,recordFields:newRecordFields};},loadData:function(display){this.display=display;this.loadDataCalls=0;for(var i in this.pointDataList){var pointData=this.pointDataList[i];if(!pointData.hasData()){this.loadDataCalls++;pointData.loadData(this);}
if(this.loadDataCalls==0){this.initData();}}
}});}
function RecordField(props){$.extend(this,{isDate:props.type=="date",isLatitude:false,isLongitude:false,isElevation:false,});$.extend(this,props);$.extend(this,{isGroup:props.group,properties:props});RamaddaUtil.defineMembers(this,{clone:function(){var newField={};$.extend(newField,this);return newField;},toString:function(){return this.getId();return"Field:"+this.getId()+" label:"+this.getLabel()+" type:"+this.getType()+" "+this.isNumeric();},getIndex:function(){return this.index;},getValue:function(row){return row[this.index];},getEnumeratedValues:function(row){return this.enumeratedValues;},isFieldGroup:function(){return this.isGroup;},isRecordDate:function(){return this.getId()=="recordDate";},isFieldGeo:function(){return this.isFieldLatitude()||this.isFieldLongitude()||this.isFieldElevation();},isFieldLatitude:function(){return this.isLatitude||this.id.toLowerCase()=="latitude";},isFieldLongitude:function(){return this.isLongitude||this.id.toLowerCase()=="longitude";},isFieldElevation:function(){return this.isElevation||this.id.toLowerCase()=="elevation"||this.id.toLowerCase()=="altitude";},isFieldNumeric:function(){return this.isNumeric();},isFieldString:function(){return this.type=="string"||this.type=="enumeration";},isFieldEnumeration:function(){return this.type=="enumeration";},isFieldDate:function(){return this.isDate;},isChartable:function(){return this.chartable;},getSortOrder:function(){return this.sortorder;},getId:function(){return this.id;},getTypeLabel:function(){var type="fa-font";if(this.isFieldGeo()){type="fa-globe";}else if(this.isFieldNumeric()){type="fa-hashtag";}else if(this.isFieldEnumeration()){type="fa-list";}
var tt=this.getType();return HtmlUtils.span(["title",tt,"class","fa "+type,"style","color:rgb(169, 169, 169);font-size:12pt;"]);},getUnitLabel:function(){var label=this.getLabel();if(this.unit&&this.unit!="")
label=label+" ["+this.unit+"]";return label;},getUnitSuffix:function(){if(this.unit&&this.unit!="")
return"&nbsp;["+this.unit+"]";return"";},getLabel:function(){if(this.label==null||this.label.length==0)return this.id;return this.label;},setLabel:function(l){this.label=l;},isNumeric:function(){return this.type=="double"||this.type=="integer";},isString:function(){return this.type=="string"||this.type=="enumeration"||this.type=="url"||this.type=="image";},getType:function(){return this.type;},getMissing:function(){return this.missing;},setUnit:function(u){this.unit=u;},getUnit:function(){return this.unit;}});}
function PointRecord(fields,lat,lon,elevation,time,data){this.isPointRecord=true;$.extend(this,{fields:fields,latitude:lat,longitude:lon,elevation:elevation,recordTime:time,data:data,id:HtmlUtils.getUniqueId(),});}
PointRecord.prototype={clone:function(){var newRecord={};$.extend(newRecord,this);newRecord.data=[];this.data.map((v,idx)=>{newRecord.data[idx]=v;});return newRecord;},isHighlight:function(display){if(!this.highlightForDisplay)this.highlightForDisplay={};return this.highlightForDisplay[display];},getDisplayProperty:function(display,prop,dflt){if(!this.displayProperties)this.displayProperties={};let props=this.displayProperties[display];if(!props){props=this.displayProperties[display]={};}
return props[prop]||dflt;},setDisplayProperty:function(display,prop,value){if(!this.displayProperties)this.displayProperties={};let props=this.displayProperties[display];if(!props){props=this.displayProperties[display]={};}
props[prop]=value;},setHighlight:function(display,value){if(!this.highlightForDisplay)this.highlightForDisplay={};if(!value||this.highlightForDisplay[display]==null){this.highlightForDisplay[display]=value;}},clearHighlight:function(display){if(!this.highlightForDisplay)this.highlightForDisplay={};delete this.highlightForDisplay[display];},toString:function(){return"data:"+this.data;},getId:function(){return this.id;},getData:function(){return this.data;},allZeros:function(){var tuple=this.getData();var allZeros=false;var nums=0;var nonZero=0;for(var j=0;j<tuple.length;j++){if(typeof tuple[j]=="number"){nums++;if(!isNaN(tuple[j])&&tuple[j]!=0){nonZero++;break;}}}
if(nums>0&&nonZero==0){return true;}
return false;},getValue:function(index){return this.data[index];},setValue:function(index,value){this.data[index]=value;},push:function(v){this.data.push(v);},hasDate:function(){return this.getDate()!=null;},hasLocation:function(){return this.latitude!=null&&!isNaN(this.latitude);},hasElevation:function(){return this.elevation!=null&&!isNaN(this.elevation);},getLatitude:function(){return this.latitude;},getLongitude:function(){return this.longitude;},getTime:function(){return this.recordTime;},getElevation:function(){return this.elevation;},getDate:function(){return this.recordTime;}};function makePointData(json,derived,source){let debug=false;if(debug)console.log("makePointData");var fields=[];var latitudeIdx=-1;var longitudeIdx=-1;var elevationIdx=-1;var dateIdx=-1;var dateIndexes=[];var offsetFields=[];var lastField=null;for(var i=0;i<json.fields.length;i++){var field=json.fields[i];var recordField=new RecordField(field);if(recordField.isFieldNumeric()){if(source.getProperty){var offset1=source.getProperty(recordField.getId()+".offset1",source.getProperty("offset1"));var offset2=source.getProperty(recordField.getId()+".offset2",source.getProperty("offset2"));var scale=source.getProperty(recordField.getId()+".scale",source.getProperty("scale"));if(offset1||offset2||scale){var unit=source.getProperty(recordField.getId()+".unit",source.getProperty("unit"));if(unit){recordField.unit=unit;}
var o={offset1:0,offset2:0,scale:1};if(offset1)o.offset1=parseFloat(offset1);if(offset2)o.offset2=parseFloat(offset2);if(scale)o.scale=parseFloat(scale);recordField.offset=o;offsetFields.push(recordField);}}}
lastField=recordField;fields.push(recordField);if(recordField.isFieldLatitude()){latitudeIdx=recordField.getIndex();}else if(recordField.isFieldLongitude()){longitudeIdx=recordField.getIndex();}else if(recordField.isFieldElevation()){elevationIdx=recordField.getIndex();}else if(recordField.isFieldDate()){dateIdx=recordField.getIndex();dateIndexes.push(dateIdx);}}
if(derived){var index=lastField.getIndex()+1;for(var dIdx=0;dIdx<derived.length;dIdx++){var d=derived[dIdx];var label=d.label||d.name;var recordField=new RecordField({type:"double",index:(index+dIdx),chartable:true,id:d.name,label:label,});recordField.derived=d;fields.push(recordField);}}
let pointRecords=[];let isArray=false;let hasGeo=false;json.data.forEach((tuple,i)=>{if(debug&&i>0&&(i%10000)==0)console.log("\tprocessed:"+i);if(i==0){isArray=Array.isArray(tuple);}
let values;if(isArray)
values=tuple;else
values=tuple.values;let date=null;if(isArray||(typeof tuple.date==='undefined')){if(dateIdx>=0){date=new Date(values[dateIdx]);}}else{if(tuple.date!=null&&tuple.date!=0){date=new Date(tuple.date);}}
if(isArray||(typeof tuple.latitude==='undefined')){if(latitudeIdx>=0)
tuple.latitude=values[latitudeIdx];else
tuple.latitude=NaN;}
if(isArray||(typeof tuple.longitude==='undefined')){if(longitudeIdx>=0)
tuple.longitude=values[longitudeIdx];else
tuple.longitude=NaN;}
for(var j=0;j<dateIndexes.length;j++){values[dateIndexes[j]]=new Date(values[dateIndexes[j]]);}
for(var col=0;col<values.length;col++){if(values[col]==null){values[col]=NaN;}}
if(derived){for(var dIdx=0;dIdx<derived.length;dIdx++){var d=derived[dIdx];if(!d.isRow){continue;}
if(!d.compiledFunction){var funcParams=[];var params=(d.columns.indexOf(";")>=0?d.columns.split(";"):d.columns.split(","));d.fieldsToUse=[];for(var i=0;i<params.length;i++){var param=params[i].trim();funcParams.push("v"+(i+1));var theField=null;for(var fIdx=0;fIdx<fields.length;fIdx++){var f=fields[fIdx];if(f.getId()==param){theField=f;break;}}
d.fieldsToUse.push(theField);}
var code="";for(var i=0;i<funcParams.length;i++){code+="var v"+(i+1)+"=args["+i+"];\n";}
var tmp=d["function"];if(tmp.indexOf("return")<0)tmp="return "+tmp;code+=tmp+"\n";d.compiledFunction=new Function("args",code);}
var args=[];var anyNotNan=false;for(var fIdx=0;fIdx<d.fieldsToUse.length;fIdx++){var f=d.fieldsToUse[fIdx];var v=NaN;if(f!=null){v=values[f.getIndex()];if(v==null)v=NaN;}
if(!isNaN(v)){anyNotNan=true;}else{}
args.push(v);}
try{var result=NaN;if(anyNotNan){result=d.compiledFunction(args);if(d.decimals>=0){result=result.toFixed(d.decimals);}
result=parseFloat(result);}else{}
values.push(result);}catch(e){console.log("Error evaluating function:"+d["function"]+"\n"+e);values.push(NaN);}}}
for(var fieldIdx=0;fieldIdx<offsetFields.length;fieldIdx++){var field=offsetFields[fieldIdx];var offset=field.offset;var value=values[field.getIndex()];value=(value+offset.offset1)*offset.scale+offset.offset2;values[field.getIndex()]=value;}
var record=new PointRecord(fields,tuple.latitude,tuple.longitude,tuple.elevation,date,values);pointRecords.push(record);});if(source!=null){for(var i=0;i<fields.length;i++){var field=fields[i];var prefix="field."+field.getId()+".";if(Utils.isDefined(source[prefix+"unit"])){field.setUnit(source[prefix+"unit"]);}
if(Utils.isDefined(source[prefix+"label"])){field.setLabel(source[prefix+"label"]);}
if(Utils.isDefined(source[prefix+"scale"])||Utils.isDefined(source[prefix+"offset1"])||Utils.isDefined(source[prefix+"offset2"])){var offset1=Utils.isDefined(source[prefix+"offset1"])?parseFloat(source[prefix+"offset1"]):0;var offset2=Utils.isDefined(source[prefix+"offset2"])?parseFloat(source[prefix+"offset2"]):0;var scale=Utils.isDefined(source[prefix+"scale"])?parseFloat(source[prefix+"scale"]):1;var index=field.getIndex();for(var rowIdx=0;rowIdx<pointRecords.length;rowIdx++){var record=pointRecords[rowIdx];var values=record.getData();var value=values[index];values[index]=(value+offset1)*scale+offset2;}}}}
var name=json.name;if((typeof name==='undefined')){name="Point Data";}
pointRecords.sort(function(a,b){if(a.getDate()&&b.getDate()){if(a.getDate().getTime()<b.getDate().getTime())return-1;if(a.getDate().getTime()>b.getDate().getTime())return 1;return 0;}});let pd=new PointData(name,fields,pointRecords);return pd;}
function BaseFilter(display,properties){this.display=display;if(properties==null)properties={};RamaddaUtil.defineMembers(this,{properties:properties,isEnabled:function(){return true;},prepareToFilter:function(){},isRecordOk:function(display,record,values){return true;},getWidget:function(){return""}});}
function BoundsFilter(display,properties){RamaddaUtil.inherit(this,new BaseFilter(display,properties));$.extend(this,{isRecordOk:function(record){if(this.display.filterBounds&&record.hasLocation()){var b=this.display.filterBounds;var lat=record.getLatitude();var lon=record.getLongitude();if(lat>b.top||lat<b.bottom||lon<b.left||lon>b.right)
return false;}
return true;},});}
function RecordFilter(display,filterFieldId,properties){let filterField=display.getFieldById(null,filterFieldId);RamaddaUtil.inherit(this,new BaseFilter(display,properties));this.id=filterFieldId;$.extend(this,{field:filterField,values:[],hideFilterWidget:display.getProperty("hideFilterWidget",false,true),displayType:display.getProperty(filterField+".filterDisplay","menu"),label:filterField==null?"":display.getProperty(filterField.getId()+".filterLabel",filterField.getLabel()+":"),suffix:filterField==null?"":display.getProperty(filterField.getId()+".filterSuffix",""),dateIds:[],prefix:display.getProperty(this.id+".filterPrefix"),suffix:display.getProperty(this.id+".filterSuffix"),startsWith:display.getProperty(this.id+".filterStartsWith",false)});RamaddaUtil.defineMembers(this,{toString:function(){return"filter:"+filterFieldId;},getField:function(){return this.field;},getFilterId:function(id){return this.display.getDomId("filterby_"+id);},isEnabled:function(){return this.field!=null;},recordOk:function(display,record,values){return true;},getProperty:function(key,dflt){return this.display.getProperty(key,dflt);},prepareToFilter:function(){if(!this.field)return;var value=null;var _values=[];var values=null;var matchers=[];if(this.field.isNumeric()){var minField=$("#"+this.display.getDomId("filterby_"+this.field.getId()+"_min"));var maxField=$("#"+this.display.getDomId("filterby_"+this.field.getId()+"_max"));if(!minField.val()||!maxField.val())return;var minValue=parseFloat(minField.val().trim());var maxValue=parseFloat(maxField.val().trim());var dfltMinValue=parseFloat(minField.attr("data-min"));var dfltMaxValue=parseFloat(maxField.attr("data-max"));if(minValue!=dfltMinValue||maxValue!=dfltMaxValue){value=[minValue,maxValue];}}else if(this.field.getType()=="date"){var date1=$("#"+this.display.getDomId("filterby_"+this.field.getId()+"_date1")).val();var date2=$("#"+this.display.getDomId("filterby_"+this.field.getId()+"_date2")).val();if(date1!=null&&date1.trim()!="")
date1=Utils.parseDate(date1);else
date1=null;if(date2!=null&&date2.trim()!="")
date2=Utils.parseDate(date2);else
date2=null;if(date1!=null||date2!=null)
value=[date1,date2];}else{values=this.getFieldValues();if(!values&&!Array.isArray(values))values=[values];if(values.length==0)return;var tmp=[];values.map(v=>{tmp.push(v.replace(/_comma_/g,","));});values=tmp;values.map(v=>{_values.push((""+v).toLowerCase());try{matchers.push(new TextMatcher(v));}catch(skipIt){}});}
var anyValues=value!=null;if(!anyValues&&values){values.forEach(v=>{if(v.length>0&&v!=FILTER_ALL)anyValues=true});}
if(anyValues){this.mySearch={value:value,values:values,matchers:matchers,_values:_values,anyValues:anyValues,};}else{this.mySearch=null;}},isRecordOk:function(record){let ok=true;if(!this.isEnabled()||!this.mySearch)return ok;var rowValue=record.getValue(this.field.getIndex());let filterField=this.field;if(filterField.getType()=="enumeration"){ok=this.mySearch.values.includes(""+rowValue);}else if(filterField.isNumeric()){if(isNaN(this.mySearch.value[0])&&isNaN(this.mySearch.value[0]))return ok;if(!isNaN(this.mySearch.value[0])&&rowValue<this.mySearch.value[0])ok=false;else if(!isNaN(this.mySearch.value[1])&&rowValue>this.mySearch.value[1])ok=false;}else if(filterField.getType()=="date"){if(this.mySearch.value&&Array.isArray(this.mySearch.value)){if(rowValue==null){ok=false;}else{var date1=this.mySearch.value[0];var date2=this.mySearch.value[1];var dttm=rowValue.getTime();if(isNaN(dttm))ok=false;else if(date1&&dttm<date1.getTime())
ok=false;else if(date2&&dttm>date2.getTime())
ok=false;}}}else{var startsWith=this.startsWith;ok=false;roWValue=String(rowValue).toLowerCase();for(var j=0;j<this.mySearch._values.length;j++){var fv=this.mySearch._values[j];if(startsWith){if(rowValue.toString().startsWith(fv)){ok=true;break;}}else if(rowValue.toString().indexOf(fv)>=0){ok=true;break;}}
if(!ok&&!startsWith){for(ri=0;ri<this.mySearch.matchers.length;ri++){var matcher=this.mySearch.matchers[ri];if(matcher.matches(rowValue.toString())){ok=true;break;}}}}
return ok;},getFieldValues:function(){var element=$("#"+this.display.getDomId("filterby_"+this.field.getId()));var value=null;if(element.attr("isCheckbox")){if(element.is(':checked')){value=element.attr("onValue");}else{value=element.attr("offValue");}}else if(element.attr("isButton")){value=element.attr("data-value");}else{value=element.val();}
if(!value)value=FILTER_ALL;if(!Array.isArray(value)){if(!this.field.isFieldEnumeration()){value=value.split(",");}else{value=[value];}}
var tmp=[];value.forEach(v=>tmp.push(v.trim()));value=tmp;return value;},initDateWidget:function(inputFunc){if(!this.hideFilterWidget){for(var i=0;i<this.dateIds.length;i++){let id=this.dateIds[i];HtmlUtils.datePickerInit(id);$("#"+id).change(function(){inputFunc($(this));});}}},getWidget:function(fieldMap,bottom,records){let debug=false;if(debug)console.log(this.id+".getWidget");if(!this.isEnabled()){if(debug)console.log("\tnot enabled");return"";}
let widgetStyle="";if(this.hideFilterWidget)
widgetStyle="display:none;";let filterField=this.field;fieldMap[filterField.getId()]={field:filterField,values:[],};let widget;let widgetId=this.getFilterId(filterField.getId());if(filterField.getType()=="enumeration"){if(debug)console.log("\tis enumeration");let dfltValue=this.getProperty(filterField.getId()+".filterValue",FILTER_ALL);let filterValues=this.getProperty(filterField.getId()+".filterValues");let enums=null;if(filterValues){let toks;if((typeof filterValues)=="string"){filterValues=Utils.getMacro(filterValues);toks=filterValues.split(",");}else{toks=filterValues;}
enums=[];toks.map(tok=>{let tmp=tok.split(":");if(tmp.length>1){tok=[tmp[0],tmp[1]];}else if(tok==FILTER_ALL){tok=[tmp[0],"All"];}
enums.push({value:tok});})}
let includeAll=this.getProperty(filterField.getId()+".includeAll",true);if(enums==null){let allName=this.getProperty(filterField.getId()+".allName","All");enums=[];if(includeAll){enums.push({value:[FILTER_ALL,allName]});}
let seen={};let dflt=filterField.getEnumeratedValues();if(dflt){for(let v in dflt){seen[v]=true;enums.push({value:[v,dflt[v]]});}}
let enumValues=[];let imageField=this.display.getFieldOfType(null,"image");let valuesAreNumbers=true;records.map((record,idx)=>{let value=this.display.getDataValues(record)[filterField.getIndex()];if(!seen[value]){seen[value]=true;let obj={};if(imageField)
obj.image=this.display.getDataValues(record)[imageField.getIndex()];if((+value+"")!=value)valuesAreNumbers=false;let label=value;if(label.length>30){label=label.substring(0,29)+"...";}
if(typeof value=="string")
value=value.replace(/\'/g,"&apos;");let tuple=[value,label];obj.value=tuple;enumValues.push(obj);}});if(this.getProperty(filterField.getId()+".filterSort",true)){enumValues.sort((a,b)=>{a=a.value;b=b.value;if(valuesAreNumbers){return+a-+b;}
return(""+a[1]).localeCompare(""+b[1]);});}
for(let j=0;j<enumValues.length;j++){let v=enumValues[j];enums.push(v);}}
let attrs=["style",widgetStyle,"id",widgetId,"fieldId",filterField.getId()];if(this.getProperty(filterField.getId()+".filterMultiple",false)){attrs.push("multiple");attrs.push("");attrs.push("size");attrs.push(this.getProperty(filterField.getId()+".filterMultipleSize","3"));dfltValue=dfltValue.split(",");}
if(this.displayType!="menu"){if(debug)console.log("\tnot menu");if(!includeAll&&dfltValue==FILTER_ALL)dfltValue=enums[0].value;let buttons="";let colorMap=Utils.parseMap(this.getProperty(filterField.getId()+".filterColorByMap"));let useImage=this.displayType=="image";let imageAttrs=[];let imageMap=Utils.getNameValue(this.getProperty(filterField.getId()+".filterImages"));if(useImage){let w=this.getProperty(filterField.getId()+".filterImageWidth");let h=this.getProperty(filterField.getId()+".filterImageHeight");if(h){imageAttrs.push("height");imageAttrs.push(h);}
if(w){imageAttrs.push("width");imageAttrs.push(w);}
if(!h&&!w){imageAttrs.push("width");imageAttrs.push("50");}
imageAttrs.push("style");imageAttrs.push(this.getProperty(filterField.getId()+".filterImageStyle","border-radius:50%;"));}
for(let j=0;j<enums.length;j++){var extra="";var v=enums[j].value;var color=colorMap?colorMap[v]:null;var label;if(Array.isArray(v)){label=v[1];v=v[0];}else{label=v;}
var style=this.getProperty(filterField.getId()+".filterItemStyle","");if(color){style+=" background-color:"+color+"; ";}
var clazz=" display-filter-item display-filter-item-"+this.displayType+" ";if(v==dfltValue){clazz+=" display-filter-item-"+this.displayType+"-selected ";}else{}
if(v==FILTER_ALL){extra=" display-filter-item-all ";}
if(useImage){var image=null;if(imageMap)image=imageMap[v];if(!image||image=="")image=enums[j].image;if(image){buttons+=HtmlUtils.div(["fieldId",filterField.getId(),"class",clazz,"style",style,"data-value",v,"title",label],HtmlUtils.image(image,imageAttrs));}else{buttons+=HtmlUtils.div(["fieldId",filterField.getId(),"class",clazz,"style",style,"data-value",v,"title",label],label);}}else{buttons+=HtmlUtils.div(["fieldId",filterField.getId(),"class",clazz,"style",style,"data-value",v],label);}
buttons+="\n";}
if(useImage&&this.getProperty(filterField.getId()+".filterShowButtonsLabel")){buttons+=HtmlUtils.div(["class","display-filter-item-label","id",this.display.getDomId("filterby_"+filterField.getId()+"_label")],"&nbsp;");}
bottom[0]+=HtmlUtils.div(["data-value",dfltValue,"class","display-filter-items","id",widgetId,"isButton","true","fieldId",filterField.getId()],buttons);if(debug)console.log("\treturn 1");return"";}else if(this.getProperty(filterField.getId()+".filterCheckbox")){if(debug)console.log("\tis checkbox");attrs.push("isCheckbox");attrs.push(true);var tmp=[];enums.map(e=>tmp.push(e.value));var checked=tmp.includes(dfltValue);if(tmp.length>0){attrs.push("onValue");attrs.push(tmp[0]);}
if(tmp.length>1){attrs.push("offValue");attrs.push(tmp[1]);}
widget=HtmlUtils.checkbox("",attrs,checked);}else{if(debug)console.log("\tis select");var tmp=[];enums.map(e=>tmp.push(e.value));widget=HtmlUtils.select("",attrs,tmp,dfltValue);}}else if(filterField.isNumeric()){if(debug)console.log("\tis numeric");var min=0;var max=0;var cnt=0;records.map(record=>{var value=this.display.getDataValues(record)[filterField.getIndex()];if(isNaN(value))return;if(cnt==0){min=value;max=value;}
else{min=Math.min(min,value);max=Math.max(max,value);}
cnt++;});var dfltValueMin=this.getProperty(filterField.getId()+".filterValueMin",min);var dfltValueMax=this.getProperty(filterField.getId()+".filterValueMax",max);widget=HtmlUtils.input("",dfltValueMin,["data-min",min,"class","display-filter-range display-filter-input","style",widgetStyle,"id",widgetId+"_min","size",3,"fieldId",filterField.getId()]);widget+="-";widget+=HtmlUtils.input("",dfltValueMax,["data-max",max,"class","display-filter-range display-filter-input","style",widgetStyle,"id",widgetId+"_max","size",3,"fieldId",filterField.getId()]);}else if(filterField.getType()=="date"){widget=HtmlUtils.datePicker("","",["class","display-filter-input","style",widgetStyle,"id",widgetId+"_date1","fieldId",filterField.getId()])+"-"+
HtmlUtils.datePicker("","",["class","display-filter-input","style",widgetStyle,"id",widgetId+"_date2","fieldId",filterField.getId()]);this.dateIds.push(widgetId+"_date1");this.dateIds.push(widgetId+"_date2");}else{var dfltValue=this.getProperty(filterField.getId()+".filterValue","");var attrs=["style",widgetStyle,"id",widgetId,"fieldId",filterField.getId(),"class","display-filter-input"];var placeholder=this.getProperty(filterField.getId()+".filterPlaceholder");if(placeholder){attrs.push("placeholder");attrs.push(placeholder);}
widget=HtmlUtils.input("",dfltValue,attrs);var values=fieldMap[filterField.getId()].values;var seen={};records.map(record=>{var value=this.display.getDataValues(record)[filterField.getIndex()];if(!seen[value]){seen[value]=true;values.push(value);}});}
var label=this.getProperty(filterField.getId()+".filterLabel",filterField.getLabel()+":");var suffix=this.getProperty(filterField.getId()+".filterSuffix","");if(!this.hideFilterWidget){var tt=label;if(label.length>50)label=label.substring(0,49)+"...";if(!this.getProperty(filterField.getId()+".showFilterLabel",true)){label="";}
else
label=label+" ";widget=HtmlUtils.div(["style","display:inline-block;"],this.display.makeFilterLabel(label,tt)+widget+suffix);}
return widget+(this.hideFilterWidget?"":"&nbsp;&nbsp;");}});}
function MonthFilter(param){RamaddaUtil.inherit(this,new BaseFilter());RamaddaUtil.defineMembers(this,{months:param.split(","),recordOk:function(display,record,values){for(i in this.months){var month=this.months[i];var date=record.getDate();if(date==null)return false;if(date.getMonth==null){return false;}
if(date.getMonth()==month)return true;}
return false;}});}
var A={add:function(v1,v2){if(isNaN(v1)||isNaN(v2))return NaN;return v1+v2;},average:function(values){var sum=0;if(values.length==0)return 0;for(var i=0;i<values.length;i++){sum+=values[i];}
return sum/values.length;},percentIncrease:function(values){var percents=[];var sum=0;if(values.length==0)return 0;var lastValue;for(var i=0;i<values.length;i++){var v=values[i];var incr=NaN;if(i>0&&lastValue!=0){incr=(v-lastValue)/lastValue;}
lastValue=v;percents.push(incr*100);}
return percents;},movingAverage:function(values,props){if(!props){props={};}
if(!props.step)props.step=5;var newValues=[];console.log("STEP:"+props.step);for(var i=props.step;i<values.length;i++){var total=0;var cnt=0;for(var j=i-props.step;j<i;j++){if(values[j]==values[j]){total+=values[j];cnt++;}}
var value=(cnt>0?total/cnt:NaN);if(newValues.length==0){for(var extraIdx=0;extraIdx<props.step;extraIdx++){newValues.push(value);}}
newValues.push(value);}
console.log("MovingAverage: values:"+values.length+" new:"+newValues.length);return newValues;},expMovingAverage:function(values,props){if(!props){props={};}
if(!props.step)props.step=5;var sma=A.movingAverage(values,props);var mult=(2.0/(props.step+1));var newValues=[];console.log("STEP:"+props.step);for(var i=props.step;i<values.length;i++){var total=0;var cnt=0;for(var j=i-props.step;j<i;j++){if(values[j]==values[j]){total+=values[j];cnt++;}}
var value=(cnt>0?total/cnt:NaN);if(newValues.length==0){for(var extraIdx=0;extraIdx<props.step;extraIdx++){newValues.push(value);}}
newValues.push(value);}
console.log("MovingAverage: values:"+values.length+" new:"+newValues.length);return newValues;},max:function(values){var max=NaN;for(var i=0;i<values.length;i++){if(i==0||values[i]>max){max=values[i];}}
return max;},min:function(values){var min=NaN;for(var i=0;i<values.length;i++){if(i==0||values[i]<min){min=values[i];}}
return min;},}
var RecordUtil={groupBy:function(records,display,dateBin,field){let debug=displayDebug.groupBy;if(debug)console.log("groupBy");let groups={max:0,values:[],labels:[],map:{},}
records.forEach((r,idx)=>{let key;let label=null;let date=r.getDate();if(field){if(field=="latlon"){key=label=r.getLatitude()+"/"+r.getLongitude();}else{key=label=r.getValue(field.getIndex());}}else{if(!date){return;}
key=date;if(dateBin===true){}else{if(dateBin=="day"){key=new Date(label=date.getFullYear()+"-"+date.getUTCMonth()+"-"+date.getUTCDay())}else if(dateBin=="month"){label=date.getFullYear()+"-"+date.getUTCMonth();key=new Date(label+"-01");}else if(dateBin=="year"){label=date.getFullYear();key=new Date(date.getFullYear()+"-01-01");}else if(dateBin=="decade"){let year=date.getFullYear();year=year-year%10;label=year+"s";key=new Date(year+"-01-01");}else if(dateBin){label=String(key);}}}
let array=groups.map[key];if(!array){if(debug)console.log("\tadding group:"+key);array=groups.map[key]=[];groups.values.push(key);if(label==null)
label=display.formatDate(date,null,true);groups.labels.push(label);}
array.push(r);groups.max=Math.max(groups.max,array.length);});return groups;},expandBounds:function(bounds,perc){return{east:Math.min(180,bounds.east+(bounds.east-bounds.west)*perc),west:Math.max(-180,bounds.west-(bounds.east-bounds.west)*perc),north:Math.min(90,bounds.north+(bounds.north-bounds.south)*perc),south:Math.max(-90,bounds.south-(bounds.north-bounds.south)*perc),}},convertBounds:function(bounds){if(!bounds)return null;if(Utils.isDefined(bounds.top))
return{north:bounds.top,west:bounds.left,south:bounds.bottom,east:bounds.right};return bounds;},subset:function(records,bounds){bounds=RecordUtil.convertBounds(bounds);let cnt=0;records=records.filter((record,idx)=>{let lat=record.getLatitude?record.getLatitude():record.r?record.r.getLatitude():record.y;let lon=record.getLongitude?record.getLongitude():record.r?record.r.getLongitude():record.x;let ok=lat<=bounds.north&&lat>=bounds.south&&lon>=bounds.west&&lon<=bounds.east;return ok;});return records;},gridPoints:function(rows,cols,points,args){let debug=displayDebug.gridPoints;let values=[];for(var rowIdx=0;rowIdx<rows;rowIdx++){let row=[];values.push(row);for(var colIdx=0;colIdx<cols;colIdx++){row.push({v:NaN,count:0,total:0,min:NaN,max:NaN,t:""});}}
points.map((p,idx)=>{let cell=values[p.y][p.x];cell.min=cell.count==0?p.v:Math.min(cell.min,p.v);cell.max=cell.count==0?p.v:Math.max(cell.max,p.v);cell.count++;cell.total+=p.value;});let minValue=NaN;let maxValue=NaN;let maxCount=0;let minCount=0;for(var rowIdx=0;rowIdx<rows;rowIdx++){for(var colIdx=0;colIdx<cols;colIdx++){let cell=values[rowIdx][colIdx];if(cell.count==0)continue;let v;if(args.operator=="count")
v=cell.count;else if(args.operator=="min")
v=cell.min;else if(args.operator=="max")
v=cell.max;else if(args.operator=="total")
v=cell.total;else
v=cell.total/cell.count;cell.v=v;if(!isNaN(v)){minValue=isNaN(minValue)?v:Math.min(minValue,v);maxValue=isNaN(maxValue)?v:Math.max(maxValue,v);}
maxCount=Math.max(maxCount,cell.count);minCount=minCount==0?cell.count:Math.min(minCount,cell.count);}}
if(debug)
console.log("operator:"+args.operator+" values:"+minValue+" - "+maxValue+" counts:"+minCount+" - "+maxCount);values.minValue=minValue;values.maxValue=maxValue;values.minCount=minCount;values.maxCount=maxCount;return values;},draw3DRect:function(canvas,ctx,x,y,width,height,depth){var dimetricTx=function(x,y,z){return x+z/2;};var dimetricTy=function(x,y,z){return y+z/4;};var isometricTx=function(x,y,z){return(x-z)*Math.cos(Math.PI/6);};var isometricTy=function(x,y,z){return y+(x+z)*Math.sin(Math.PI/6);};var drawPoly=(function(ctx,tx,ty){return function(){var args=Array.prototype.slice.call(arguments,0);ctx.beginPath();var p=args.pop();if(p){ctx.moveTo(tx.apply(undefined,p),ty.apply(undefined,p));}
while((p=args.pop())!==undefined){ctx.lineTo(tx.apply(undefined,p),ty.apply(undefined,p));}
ctx.closePath();ctx.stroke();ctx.fill();};})(ctx,dimetricTx,dimetricTy);ctx.save();ctx.scale(1,-1);ctx.translate(0,-canvas.height);ctx.save();ctx.translate(x,y);let baseColor=ctx.fillStyle;ctx.fillStyle=Utils.pSBC(-0.5,baseColor);drawPoly([width,0,0],[width,0,depth],[width,height,depth],[width,height,0]);ctx.fillStyle=baseColor;drawPoly([0,0,0],[0,height,0],[width,height,0],[width,0,0]);ctx.fillStyle=Utils.pSBC(0.5,baseColor);drawPoly([0,height,0],[0,height,depth],[width,height,depth],[width,height,0]);ctx.fillStyle=baseColor;ctx.restore();ctx.restore();},xcnt:0,drawArrow:function(context,fromx,fromy,tox,toy,headlen){let dx=tox-fromx;let dy=toy-fromy;let angle=Math.atan2(dy,dx);context.moveTo(fromx,fromy);context.lineTo(tox,toy);context.lineTo(tox-headlen*Math.cos(angle-Math.PI/6),toy-headlen*Math.sin(angle-Math.PI/6));context.moveTo(tox,toy);context.lineTo(tox-headlen*Math.cos(angle+Math.PI/6),toy-headlen*Math.sin(angle+Math.PI/6));},drawGridCell:function(opts,canvas,ctx,x,y,v,colIdx,rowIdx,cell,grid,alphaByCount){let c=opts.color||"#ccc";let perc=1.0;if(opts.colorBy&&v){perc=opts.colorBy.getValuePercent(v);if(opts.colorBy.index>=0){c=opts.colorBy.getColor(v);}}
if(alphaByCount&&cell&&grid){if(grid.maxCount!=grid.minCount){let countPerc=(cell.count-grid.minCount)/(grid.maxCount-grid.minCount);c=Utils.addAlphaToColor(c,countPerc);}}
ctx.fillStyle=c
ctx.strokeStyle=c
if(opts.shape=="circle"){ctx.beginPath();ctx.arc(x,y,opts.cellSize,0,2*Math.PI);if(opts.stroke)
ctx.stroke();else
ctx.fill();}else if(opts.shape=="vector"){let length=opts.cellSizeH;if(opts.lengthBy&&opts.lengthBy.index>=0){length=opts.lengthBy.scaleToValue(v);}
let x2=x+length;let y2=y;let arrowLength=opts.display.getProperty("arrowLength",-1);if(opts.colorBy&&opts.colorBy.index>=0){let perc=opts.colorBy.getValuePercent(v);let degrees=(180*perc)+90;degrees=degrees*(Math.PI/360)
x2=length*Math.cos(degrees)-0*Math.sin(degrees);y2=0*Math.cos(degrees)-length*Math.sin(degrees);x2+=x;y2+=y;}
if(arrowLength<=0){ctx.save();ctx.fillStyle="#000";ctx.beginPath();ctx.arc(x,y,1,0,2*Math.PI);ctx.fill();ctx.restore();}
ctx.beginPath();ctx.moveTo(x,y);ctx.lineTo(x2,y2);ctx.lineWidth=opts.display.getProperty("lineWidth",1);ctx.stroke();if(arrowLength>0){ctx.beginPath();this.drawArrow(ctx,x,y,x2,y2,arrowLength);ctx.stroke();}}else if(opts.cell3D){let height=perc*(opts.cellSizeH||20);ctx.strokeStyle="#000";ctx.strokeStyle="rgba(0,0,0,0)"
RecordUtil.draw3DRect(canvas,ctx,x,canvas.height-y,+opts.cellSize,height,+opts.cellSize);}else if(opts.shape=="tile"){let crx=x+opts.cellSizeX/2;let cry=y+opts.cellSizeY/2;if((rowIdx%2)==0){crx=crx+opts.cellSizeX/2;cry=cry-opts.cellSizeY/2;}
let sizex=opts.cellSizeX/2;let sizey=opts.cellSizeY/2;ctx.beginPath();let quarter=Math.PI/2;ctx.moveTo(crx+sizex*Math.cos(quarter),cry+sizey*Math.sin(quarter));for(let side=0;side<7;side++){ctx.lineTo(crx+sizex*Math.cos(quarter+side*2*Math.PI/6),cry+sizey*Math.sin(quarter+side*2*Math.PI/6));}
ctx.strokeStyle="#000";ctx.stroke();}else{let crx=x-opts.cellSizeX/2;let cry=y+opts.cellSizeY/2;crx=x;cry=y
if(opts.stroke)
ctx.strokeRect(x-opts.cellSizeX/2,y ,opts.cellSizeX,opts.cellSizeY);else
ctx.fillRect(crx,cry,opts.cellSizeX,opts.cellSizeY);}
if(opts.cellShowText&&v!=null){ctx.textAlign="center";ctx.fillStyle=opts.cellTextColor||"#000";ctx.fillText(Utils.formatNumber(v),x,y+10);}},getGridValue:function(src,row,col,mult,total,goodones){if(row>=0&&row<src.length&&col>=0&&col<src[row].length){if(isNaN(src[row][col]))return 0;total[0]+=mult;goodones[0]++;return src[row][col]*mult;}
return 0;},applyKernel:function(src,kernel){let result=this.cloneGrid(src,null,0);for(var rowIdx=0;rowIdx<src.length;rowIdx++){let row=result[rowIdx];for(var colIdx=0;colIdx<row.length;colIdx++){if(isNaN(row[colIdx]))row[colIdx]=0;let total=[0];let goodones=[0];let sum=0;kernel.every(t=>{sum+=this.getGridValue(src,rowIdx+t[0],colIdx+t[1],t[2],total,goodones);return true;});if(goodones[0]>0)
row[colIdx]=sum/total[0];else
row[colIdx]=NaN;}}
return result;},blurGrid:function(type,src){let kernels={average5:[[0,1,0],[1,1,1],[0,1,0],],average9:[[1,1,1],[1,1,1],[1,1,1],],average25:[[1,1,1,1,1],[1,1,1,1,1],[1,1,1,1,1],[1,1,1,1,1],[1,1,1,1,1],],average49:[[1,1,1,1,1,1,1],[1,1,1,1,1,1,1],[1,1,1,1,1,1,1],[1,1,1,1,1,1,1],[1,1,1,1,1,1,1],[1,1,1,1,1,1,1],[1,1,1,1,1,1,1],],gauss9:[[0.077847,0.123317,0.077847],[0.123317,0.195346,0.123317],[0.077847,0.123317,0.077847]],gauss25:[[0.003765,0.015019,0.023792,0.015019,0.003765],[0.015019,0.059912,0.094907,0.059912,0.015019],[0.023792,0.094907,0.150342,0.094907,0.023792],[0.015019,0.059912,0.094907,0.059912,0.015019],[0.003765,0.015019,0.023792,0.015019,0.003765],],gauss49:[[0.00000067,0.00002292,0.00019117,0.00038771,0.00019117,0.00002292,0.00000067],[0.00002292,0.00078633,0.00655965,0.01330373,0.00655965,0.00078633,0.00002292],[0.00019117,0.00655965,0.05472157,0.11098164,0.05472157,0.00655965,0.00019117],[0.00038771,0.01330373,0.11098164,0.22508352,0.11098164,0.01330373,0.00038771],[0.00019117,0.00655965,0.05472157,0.11098164,0.05472157,0.00655965,0.00019117],[0.00002292,0.00078633,0.00655965,0.01330373,0.00655965,0.00078633,0.00002292],[0.00000067,0.00002292,0.00019117,0.00038771,0.00019117,0.00002292,0.00000067]]}
let a=kernels[type];if(!a){if(type.startsWith("average"))
a=kernels.average5;else if(type.startsWith("gauss"))
a=kernels.gauss9;}
if(!a)return src;return this.applyKernel(src,this.makeKernel(a));},makeKernel:function(kernel){let a=[];let mid=(kernel.length-1)/2;for(let rowIdx=0;rowIdx<kernel.length;rowIdx++){let row=kernel[rowIdx];let rowOffset=rowIdx-mid;for(let colIdx=0;colIdx<row.length;colIdx++){let colOffset=colIdx-mid;a.push([rowOffset,colOffset,kernel[rowIdx][colIdx]]);}}
return a;},printGrid:function(grid){console.log("grid:");for(var rowIdx=0;rowIdx<grid.length;rowIdx++){let row=grid[rowIdx];let h="";for(var colIdx=0;colIdx<row.length;colIdx++){if(Utils.isDefined(row[colIdx].v))
h+=row[colIdx].v+",";else
h+=row[colIdx]+",";}
console.log(h);}},applyFilter(opts,grid){if(!opts.filter||opts.filter==""||opts.filter=="none"){return;}
let copy=this.cloneGrid(grid,v=>v.v);let filtered=copy;let filterPasses=opts.display.getProperty("hm.filterPasses",1);for(var i=0;i<filterPasses;i++){filtered=this.blurGrid(opts.filter,filtered);}
let filterThreshold=opts.display.getProperty("hm.filterThreshold",-999);for(var rowIdx=0;rowIdx<grid.length;rowIdx++){let row=grid[rowIdx];for(var colIdx=0;colIdx<row.length;colIdx++){let cell=row[colIdx];let filterValue=filtered[rowIdx][colIdx];if(filterThreshold!=-999){if(filterValue<filterThreshold)
filterValue=cell.v;}
cell.v=filterValue;}}},getMinMaxGrid:function(src,valueGetter){let min=NaN;let max=NaN;for(var rowIdx=0;rowIdx<src.length;rowIdx++){let row=src[rowIdx];for(var colIdx=0;colIdx<row.length;colIdx++){let v=row[colIdx]
if(valueGetter)v=valueGetter(v,rowIdx,colIdx);if(isNaN(v))continue;min=isNaN(min)?v:Math.min(min,v);max=isNaN(max)?v:Math.max(max,v);}}
return{min:min,max:max};},cloneGrid:function(src,valueGetter,dflt){let dest=[];let hasDflt=Utils.isDefined(dflt);for(var rowIdx=0;rowIdx<src.length;rowIdx++){let row=src[rowIdx];let nrow=[];dest.push(nrow);for(var colIdx=0;colIdx<row.length;colIdx++){let v=row[colIdx]
if(valueGetter)v=valueGetter(v,rowIdx,colIdx);if(hasDflt)
nrow.push(dflt);else
nrow.push(v);}}
return dest;},gridData:function(gridId,records,args){if(!args)args={};if(isNaN(args.cellSize)||args.cellSize==null)
args.cellSize=args.cellSizeX;if(isNaN(args.cellSizeX)||args.cellSizeX==null)
args.cellSizeX=args.cellSize;if(isNaN(args.cellSizeY)||args.cellSizeY==null)
args.cellSizeY=args.cellSizeX;let opts={shape:"circle",color:"blue",w:800,h:400,cellSize:2,cellSizeX:2,cellSizeY:2,operator:"average"}
$.extend(opts,args);let id=HtmlUtils.getUniqueId();$(document.body).append('<canvas style="display:none;" id="'+id+'" width="'+opts.w+'" height="'+opts.h+'"></canvas>');let canvas=document.getElementById(id);var ctx=canvas.getContext("2d");let cnt=0;let earthWidth=args.bounds.east-args.bounds.west;let earthHeight=args.bounds.north-args.bounds.south;ctx.font=opts.cellFont||"8pt Arial;"
var gradient=ctx.createLinearGradient(0,0,0,canvas.height);gradient.addColorStop(0,'white');gradient.addColorStop(1,'red');let scaleX=(lat,lon)=>{return Math.floor(opts.w*(lon-args.bounds.west)/earthWidth);};let scaleY;if(opts.display&&opts.display.map){var n1=opts.display.map.transformLLPoint(createLonLat(opts.bounds.east,85));var s1=opts.display.map.transformLLPoint(createLonLat(opts.bounds.east,-85));var n2=opts.display.map.transformLLPoint(createLonLat(opts.bounds.east,opts.bounds.north));var s2=opts.display.map.transformLLPoint(createLonLat(opts.bounds.east,opts.bounds.south));scaleY=(lat,lon)=>{var pt=opts.display.map.transformLLPoint(createLonLat(lon,lat));var dy=n2.lat-pt.lat;var perc=dy/(n2.lat-s2.lat)
return Math.floor(perc*opts.h);};}else{scaleY=(lat,lon)=>{return Math.floor(opts.h*(args.bounds.north-lat)/earthHeight);}}
ctx.lineStyle="#000";if(opts.doHeatmap){let cols=Math.floor(opts.w/opts.cellSizeX);let rows=Math.floor(opts.h/opts.cellSizeY);let points=[];records.map((record,idx)=>{let lat=record.getLatitude();let lon=record.getLongitude();let x=scaleX(lat,lon);let y=scaleY(lat,lon);record[gridId+"_coordinates"]={x:x,y:y};let v=0;if(opts.colorBy&&opts.colorBy.index>=0){v=record.getValue(opts.colorBy.index);}
x=Math.floor(x/opts.cellSizeX);y=Math.floor(y/opts.cellSizeY);if(x<0)x=0;if(y<0)y=0;if(x>=cols)x=cols-1;if(y>=rows)y=rows-1;points.push({x:x,y:y,value:v,r:record});});let grid=RecordUtil.gridPoints(rows,cols,points,args);opts.cellSizeX=+opts.cellSizeX;opts.cellSizeY=+opts.cellSizeY;this.applyFilter(opts,grid);let mm=this.getMinMaxGrid(grid,v=>v.v);if(opts.colorBy){if(!Utils.isDefined(opts.display.getProperty("colorByMin"))){opts.colorBy.setRange(mm.min,mm.max);}else{}
opts.colorBy.index=0;}
let countThreshold=opts.display.getProperty("hm.countThreshold",opts.operator=="count"?1:0);for(var rowIdx=0;rowIdx<rows;rowIdx++){let row=grid[rowIdx];for(var colIdx=0;colIdx<cols;colIdx++){let cell=row[colIdx];let v=cell.v;if(isNaN(v))continue;let x=colIdx*opts.cellSizeX;let y=rowIdx*opts.cellSizeY;if(cell.count>=countThreshold)
RecordUtil.drawGridCell(opts,canvas,ctx,x,y,cell.v,colIdx,rowIdx,cell,grid);}}
opts.shape="rect";for(var rowIdx=0;rowIdx<rows;rowIdx++){let row=grid[rowIdx];for(var colIdx=0;colIdx<cols;colIdx++){let cell=row[colIdx];let v=cell.v;if(isNaN(v))continue;let x=colIdx*opts.cellSizeX;let y=rowIdx*opts.cellSizeY;if(cell.count>=countThreshold)
RecordUtil.drawGridCell(opts,canvas,ctx,x,y,cell.v,colIdx,rowIdx,cell,grid);}}}else{records.sort((a,b)=>{return b.getLatitude()-a.getLatitude()});records.map((record,idx)=>{let lat=record.getLatitude();let lon=record.getLongitude();let x=scaleX(lat,lon);let y=scaleY(lat,lon);record[gridId+"_coordinates"]={x:x,y:y};let v=opts.colorBy?record.getData()[opts.colorBy.index]:null;if(false&&opts.forMercator){var[tx,ty]=RecordUtil.convertGeoToPixel(lat,lon,opts.bounds,opts.w,opts.h);x=tx;y=ty;}
RecordUtil.drawGridCell(opts,canvas,ctx,x,y,v);});}
let alpha=opts.display.getProperty("colorTableAlpha",-1);if(alpha>0){var image=ctx.getImageData(0,0,opts.w,opts.h);var imageData=image.data,length=imageData.length;for(var i=3;i<length;i+=4){if(imageData[i]){imageData[i]=alpha*255;}}
image.data=imageData;ctx.putImageData(image,0,0);}
let img=canvas.toDataURL("image/png");canvas.parentNode.removeChild(canvas);return img;},convertGeoToPixel:function(lat,lon,bounds,mapWidth,mapHeight){var mapLonLeft=bounds.west;var mapLonRight=bounds.east;var mapLonDelta=mapLonRight-mapLonLeft;var mapLatBottom=bounds.south;var mapLatBottomDegree=mapLatBottom*Math.PI/180;var x=(lon-mapLonLeft)*(mapWidth/mapLonDelta);var lat=lat*Math.PI/180;var worldMapWidth=((mapWidth/mapLonDelta)*360)/(2*Math.PI);var mapOffsetY=(worldMapWidth/2*Math.log((1+Math.sin(mapLatBottomDegree))/(1-Math.sin(mapLatBottomDegree))));var y=mapHeight-((worldMapWidth/2*Math.log((1+Math.sin(lat))/(1-Math.sin(lat))))-mapOffsetY);return[x,y];},getRanges:function(fields,records){var maxValues=[];var minValues=[];for(var i=0;i<fields.length;i++){maxValues.push(NaN);minValues.push(NaN);}
for(var row=0;row<records.length;row++){for(var col=0;col<fields.length;col++){var value=records[row].getValue(col);if(isNaN(value))continue;maxValues[col]=(isNaN(maxValues[col])?value:Math.max(value,maxValues[col]));minValues[col]=(isNaN(minValues[col])?value:Math.min(value,minValues[col]));}}
var ranges=[];for(var col=0;col<fields.length;col++){ranges.push([minValues[col],maxValues[col]]);}
return ranges;},getElevationRange:function(fields,records){var maxValue=NaN;var minValue=NaN;for(var row=0;row<records.length;row++){if(records[row].hasElevation()){var value=records[row].getElevation();maxValue=(isNaN(maxValue)?value:Math.max(value,maxValue));minValue=(isNaN(minValue)?value:Math.min(value,minValue));}}
return[minValue,maxValue];},slice:function(records,index){var values=[];for(var rowIdx=0;rowIdx<records.length;rowIdx++){var row=records[rowIdx];if(row.getValue){values.push(row.getValue(index));}else{values.push(row[index]);}}
return values;},sort:function(fields){fields=fields.slice(0);fields.sort(function(a,b){var s1=a.getSortOrder();var s2=b.getSortOrder();return s1<s2;});return fields;},getPoints:function(records,bounds){let points=[];this.getBounds(records,bounds,points);return points;},getBounds:function(records,bounds,points){bounds=bounds||{};if(records==null){return bounds;}
var north=NaN,west=NaN,south=NaN,east=NaN;let errorCnt=0;for(j=0;j<records.length;j++){var record=records[j];if(!isNaN(record.getLatitude())&&!isNaN(record.getLongitude())){if(j==0){north=record.getLatitude();south=record.getLatitude();west=record.getLongitude();east=record.getLongitude();}else{north=Math.max(north,record.getLatitude());south=Math.min(south,record.getLatitude());west=Math.min(west,record.getLongitude());east=Math.max(east,record.getLongitude());}
if(record.getLongitude()<-180||record.getLatitude()>90){}
if(points)
points.push(new OpenLayers.Geometry.Point(record.getLongitude(),record.getLatitude()));}}
bounds.north=north;bounds.west=west;bounds.south=south;bounds.east=east;return bounds;},findClosest:function(records,lon,lat,indexObj){if(records==null)return null;var closestRecord=null;var minDistance=1000000000;var index=-1;for(j=0;j<records.length;j++){var record=records[j];if(isNaN(record.getLatitude())){continue;}
var distance=Math.sqrt((lon-record.getLongitude())*(lon-record.getLongitude())+(lat-record.getLatitude())*(lat-record.getLatitude()));if(distance<minDistance){minDistance=distance;closestRecord=record;index=j;}}
if(indexObj!=null){indexObj.index=index;}
return closestRecord;},clonePoints:function(points){var result=[];for(var i=0;i<points.length;i++){var point=points[i];result.push(new OpenLayers.Geometry.Point(point.x,point.y));}
return result;}};function CsvUtil(){let eg="convertData=\"derived(field=field_id, function=population*10);\nrotateData(includeFields=true,includeDate=true,flipColumns=true);\naddPercentIncrease(replaceValues=false);\"\n";$.extend(this,{process:function(display,pointData,cmds){this.display=display;let commands=DataUtils.parseCommands(cmds);commands.map(cmd=>{if(this[cmd.command]){let orig=pointData;pointData=this[cmd.command](pointData,cmd.args);if(!pointData)pointData=orig;else pointData.entryId=orig.entryId;}else{console.log("unknown command:"+cmd.command);}});return pointData;},help:function(pointData,args){console.log(eg);return null;},furlData:function(pointData,args){},derived:function(pointData,args){let records=pointData.getRecords();let fields=pointData.getRecordFields();let newFields=fields.slice();let newRecords=[];let id=args["field"]||("field_"+fields.length);newFields.push(new RecordField({id:id,index:fields.length,label:Utils.makeLabel(id),type:"double",chartable:true,unit:args.unit}));let func=args["function"];if(!func){console.log("No func specified in derived");return null;}
func=func.replace(/_nl_/g,"\n").replace(/_semi_/g,";");if(func.indexOf("return")<0){func="return "+func;}
let setVars="";fields.map((field,idx)=>{if(field.isFieldNumeric()&&field.getId()!=""){let varName=field.getId().replace(/^([0-9]+)/g,"v$1");setVars+="\tvar "+varName+"=displayGetFunctionValue(args[\""+field.getId()+"\"]);\n";}});let code="function displayDerivedEval(args) {\n"+setVars+func+"\n}";eval(code);records.map((record,rowIdx)=>{let newRecord=record.clone();newRecord.data=record.data.slice();newRecords.push(newRecord);let funcArgs={};fields.map((field,idx)=>{if(field.isFieldNumeric()&&field.getId()!=""){funcArgs[field.getId()]=record.getValue(field.getIndex());}});try{let value=displayDerivedEval(funcArgs);newRecord.data.push(value);}catch(exc){console.log("Error processing derived:"+exc);newRecord.data.push(NaN);}});return new PointData("pointdata",newFields,newRecords,null,null);},rotateData:function(pointData,args){let records=pointData.getRecords();let header=this.display.getDataValues(records[0]);let rotated=[];for(var colIdx=0;colIdx<header.length;colIdx++){rotated.push([]);}
let includeFields=args["includeFields"]=="true";let includeDate=args["includeDate"]=="true";let flipColumns=args["flipColumns"]=="true";let fields=pointData.getRecordFields();if(!flipColumns&&includeFields){fields.map((f,colIdx)=>{if(f.isRecordDate())return;rotated[colIdx].push(colIdx==0?args["fieldName"]||"Field":f.getLabel());});}
for(var rowIdx=0;rowIdx<records.length;rowIdx++){let row=this.display.getDataValues(records[rowIdx]);for(var colIdx=0;colIdx<row.length;colIdx++){let field=fields[colIdx];if(field.isRecordDate()){continue;}
var value=row[colIdx];if(value.f)value=value.f;if(value.getTime){value=this.display.formatDate(value);}
if(!includeFields&&rowIdx==0&&colIdx==0)value="";if(flipColumns)
rotated[colIdx].unshift(value);else
rotated[colIdx].push(value);}}
if(flipColumns&&includeFields){fields.map((f,colIdx)=>{if(f.isRecordDate())return;rotated[colIdx].unshift(colIdx==0?args["fieldName"]||"Field":f.getLabel());});}
return convertToPointData(rotated);},addPercentIncrease:function(pointData,args){let records=pointData.getRecords();let header=this.display.getDataValues(records[0]);let fields=pointData.getRecordFields();let newRecords=[];let firstRecord=records[0];let replaceValues=args["replaceValues"]=="true";let newFields=[];fields.map((f,fieldIdx)=>{f=f.clone();let newField=f.clone();if(!replaceValues){f.index=newFields.length;newFields.push(f);}
if(f.isNumeric()){newField.unit="%";newField.index=newFields.length;newFields.push(newField);newField.id=newField.id+"_percent";newField.label=newField.label+" % increase";}});records.map((record,rowIdx)=>{let data=[];let newRecord=record.clone();newRecords.push(newRecord);fields.map((f,fieldIdx)=>{let value=record.data[f.getIndex()];if(!f.isNumeric()){data.push(value);return;}
if(!replaceValues){data.push(value);}
if(rowIdx==0){data.push(0);}else{let basev=firstRecord.data[f.getIndex()];let perc=basev==0?0:(value-basev)/basev;data.push(perc);}});newRecord.data=data;});return new PointData("pointdata",newFields,newRecords,null,null);},doAverage:function(pointData,args){let records=pointData.getRecords();let header=this.display.getDataValues(records[0]);let fields=pointData.getRecordFields();var newRecords=[];var newFields=[];var firstRow=records[0];fields.map(f=>{var newField=f.clone();newFields.push(newField);newField.label=newField.label+" (avg)";});var sums=[];fields.map(f=>{sums.push(0)});var newRecord;for(var rowIdx=0;rowIdx<records.length;rowIdx++){var record=records[rowIdx];if(newRecord==null){newRecord=record.clone();newRecords.push(newRecord);}
fields.map((f,idx)=>{if(!f.isNumeric())return;var v=record.data[f.getIndex()];sums[idx]+=v;});fields.map((f,idx)=>{if(!f.isNumeric())return;newRecord.data[idx]=sums[idx]/records.length;});}
return new PointData("pointdata",newFields,newRecords,null,null);},mergeRows:function(pointData,args){let records=pointData.getRecords();let fields=pointData.getRecordFields();let op=args["operator"]||"count";let keyFields=this.display.getFieldsByIds(fields,(args["keyFields"]||"").replace(/_comma_/g,","));if(keyFields.length==0)throw new Error("No key fields processing mergeRows:"+args["keyFields"]);let altFields=this.display.getFieldsByIds(fields,(args["altFields"]||"").replace(/_comma_/g,","));let newFields=[];let seen={};keyFields.forEach((f,idx)=>{seen[f.getId()]=true;var newField=f.clone();newField.index=newFields.length;newFields.push(newField);});let tmp=this.display.getFieldsByIds(fields,(args["valueFields"]||"").replace(/_comma_/g,","));if(args["valueFields"]==null)tmp=fields;let valueFields=[];tmp.forEach(f=>{if(!seen[f.getId()])
valueFields.push(f);});valueFields.forEach((f,idx)=>{var newField=f.clone();newField.index=newFields.length;if(newField.isNumeric()){newField.id=newField.id+"_"+op;newField.label=Utils.makeLabel(newField.id);}
newFields.push(newField);});if(op=="count"){newFields.push(new RecordField({id:"count",index:newFields.length,label:"Count",type:"double",chartable:true,}));}
let keys=[];let collection={};for(var rowIdx=0;rowIdx<records.length;rowIdx++){var record=records[rowIdx];let key="";keyFields.forEach(f=>{let v=record.getValue(f.getIndex());if(v==""&&altFields.length>0){altFields.forEach(f2=>{v+=record.getValue(f1.getIndex())+"-";});}
key+=v+"-";});let obj=collection[key];if(!obj){keys.push(key);obj=collection[key]={count:0,sums:[],mins:[],maxs:[],records:[]};valueFields.forEach((f,idx)=>{obj.sums.push(0);obj.mins.push(NaN);obj.maxs.push(NaN);});}
valueFields.forEach((f,idx)=>{let v=record.getValue(f.getIndex());if(f.isNumeric()&&!isNaN(v)){obj.sums[idx]+=v;obj.mins[idx]=isNaN(obj.mins[idx])?v:Math.min(obj.mins[idx],v);obj.maxs[idx]=isNaN(obj.maxs[idx])?v:Math.max(obj.maxs[idx],v);}});obj.count++;obj.records.push(record);}
let newRecords=[];let cnt=0;keys.forEach((key,idx)=>{let obj=collection[key];let data=[];let seen={};let date=obj.records[0].getDate();let bounds=RecordUtil.getBounds(obj.records);let lat=bounds.south+(bounds.north-bounds.south)/2;let lon=bounds.west+(bounds.east-bounds.west)/2;if(key.indexOf("US")>=0){cnt++;if(cnt==1){obj.records.forEach(r=>{});}}
keyFields.forEach(f=>{let v=obj.records[0].getValue(f.getIndex());data.push(v);seen[f.getId()]=true;});valueFields.forEach((f,idx)=>{if(seen[f.getId()])return;if(!f.isNumeric()){data.push(obj.records[0].getValue(f.getIndex()));}else{if(op=="sum")
data.push(obj.sums[idx]);else if(op=="average")
data.push(obj.sums[idx]/obj.count);else if(op=="min")
data.push(obj.mins[idx]);else if(op=="max")
data.push(obj.maxs[idx]);}});if(op=="count"){data.push(obj.count);}
let newRecord=new PointRecord(newFields,lat,lon,NaN,date,data);newRecords.push(newRecord);});return new PointData("pointdata",newFields,newRecords,null,null);},unfurl:function(pointData,args){let records=pointData.getRecords();let fields=pointData.getRecordFields();let headerField=this.display.getFieldById(fields,args.headerField||"");let uniqueField=this.display.getFieldById(fields,args.uniqueField||"");let valueFields=this.display.getFieldsByIds(fields,args.valueFields||"");let includeFields=this.display.getFieldsByIds(fields,args.includeFields||"");if(!headerField)throw new Error("No headerField");if(!uniqueField)throw new Error("No uniqueField");if(valueFields.length==0)throw new Error("No value fields");let newColumns=[];let newColumnMap={};let uniqueToRecords={};let rowMap={};let uniques=[];let indexMap={};records.forEach(record=>{let unfurlValue=record.getValue(headerField.getIndex());let uniqueValue=record.getValue(uniqueField.getIndex());if(!newColumnMap[unfurlValue]){newColumnMap[unfurlValue]=true;if(valueFields.length>1){valueFields.forEach(f=>{let label=unfurlValue+" - "
+f.getLabel();newColumns.push(label);});}else{newColumns.push(unfurlValue);}}
let rowGroup=rowMap[uniqueValue];if(rowGroup==null){rowMap[uniqueValue]=rowGroup=[];uniques.push(uniqueValue);}
rowGroup.push(record);});newColumns.sort();newColumns.forEach((v,idx)=>{indexMap[v]=idx;});let newRecords=[];let newFields=[];newColumns=Utils.mergeLists([uniqueField.getId()],newColumns);newColumns.forEach((c,idx)=>{let type=(idx==0?"string":"double");newFields.push(new RecordField({id:c,index:newFields.length,label:c,type:type,chartable:true,}));});uniques.forEach(u=>{let array=[];newColumns.forEach(c=>{array.push("");});array[0]=u;let includeCnt=0;let rowValues=null;let firstRow=null;cnt=0;rowMap[u].forEach(row=>{if(firstRow==null){firstRow=row;}
let colname=row.getValue(headerField.getIndex());if(valueFields.length>1){valueFields.forEach(f=>{let label=colname+" - "+f.getId();let idx=indexMap[label];if(idx==null){return;}
let value=row.getValue(valueIndex);array[1+includeFields.length+idx]=value;});}else{let idx=indexMap[colname];if(idx==null){return;}
let valueIndex=valueFields[0].getIndex();let value=row.getValue(valueIndex);array[1+includeFields.length+idx]=value;}
cnt++;});includeFields.forEach(f=>{array[1+includeCnt]=firstRow.getValue(f.getIndex());includeCnt++;});let newRecord=new PointRecord(newFields,NaN,NaN,NaN,null,array);newRecords.push(newRecord);cnt++;});return new PointData("pointdata",newFields,newRecords,null,null);},});}
var DataUtils={parseCommands:function(commands){let result=[];if(!commands)return result;commands.split(";").map(command=>{command=command.trim();let idx=command.indexOf("(");let args={};if(idx>=0){let rest=command.substring(idx+1).trim();command=command.substring(0,idx).trim();if(rest.endsWith(")"))rest=rest.substring(0,rest.length-1);let toks=[];let inQuote=false;let escape=false;let tok="";for(let i=0;i<rest.length;i++){let c=rest[i];if(c=="\\"){escape=true;continue;}
if(escape){tok+=c;escape=false;continue;}
if(c=="\'"){if(!inQuote){inQuote=true;}else{inQuote=false;}
tok+=c;continue;}
if(c==","){if(inQuote){tok+=c;continue;}
toks.push(tok);tok="";continue;}
tok+=c;}
toks.push(tok);toks.forEach(arg=>{arg=arg.trim();let value="";let atoks=arg.match(/(.*)=(.*)/);if(atoks){arg=atoks[1];value=atoks[2];}
arg=arg.trim();value=value.trim();value=value.replace(/^'/g,"").replace(/'$/g,"");if(arg!=""){args[arg]=value;}});}
if(command!=""){result.push({command:command,args:args});}});return result;},getDataFilters:function(display,prop){let filters=[];if(!prop)return filters;let baseId=display.getId();let cnt=0;DataUtils.parseCommands(prop).map(cmd=>{let filterId=baseId+"_"+(cnt++);let[type,fieldId,value,enabled,label,expr]=[cmd.command,cmd.args.field,cmd.args.value,cmd.args.enabled,cmd.args.label,cmd.args.expr];if(!Utils.isDefined(enabled))
enabled=true;else{enabled=enabled.trim()=="true"||enabled.trim()=="";}
if(label){var cbx=display.jq("datafilterenabled_"+filterId);if(cbx.length){enabled=cbx.is(':checked');}}
if(type=="match"||type=="notmatch")
value=new RegExp(value);else
value=+value;let fields=null;if(cmd.args.fields){fields=display.getFieldsByIds(null,cmd.args.fields.replace(/:/g,","));}
let allFields=display.getData().getRecordFields();let field=display.getFieldById(null,fieldId);filters.push({id:filterId,props:cmd.args,type:type.trim(),field:field,fields:fields?fields:field?[field]:null,allFields:allFields,value:value,label:label,enabled:enabled,expr:expr,isRecordOk:function(r){if(!this.enabled){return true;}
let value=this.field?r.getValue(this.field.getIndex()):NaN;if(this.type=="match"){return String(value).match(this.value);}else if(this.type=="nomissing"){let fieldsToUse=null;if(this.fields){fieldsToUse=this.fields;}else if(this.field){fieldsToUse=[this.field];}else{fieldsToUse=r.fields;}
let ok=false;fieldsToUse.some(f=>{if(field&&!(field.isFieldLatitude()||f.isFieldLongitude()))
if(f.isFieldLatitude()||f.isFieldLongitude())return true;if(f.isNumeric()){let v=r.getValue(f.getIndex());ok=!isNaN(v);}
return ok;});return ok;}else if(this.type=="notmatch"){return!String(value).match(this.value);}else if(this.type=="lessthan"){return value<this.value;}else if(this.type=="greaterthan"){return value>this.value;}else if(this.type=="equals"){return value==this.value;}else if(this.type=="notequals"){return value!=this.value;}else if(this.type=="bounds"){let lat=r.getLatitude();let lon=r.getLongitude();if(this.props.north&&lat>+this.props.north)return false;if(this.props.south&&lat<+this.props.south)return false;if(this.props.west&&lon<+this.props.west)return false;if(this.props.east&&lon>+this.props.east){return false;}
return true;}else if(this.type=="eval"){let code="function dataFilterCall(){\n";this.allFields.every(f=>{let value=r.getValue(f.getIndex());if(typeof value=="string")value="'"+value+"'";else if(typeof value!="number")value="'"+value+"'";code+=f.getId()+"="+value+";\n"
return true;});let expr=this.expr;if(expr==null)throw"No expr given in data filter";if(expr.indexOf("return")<0)expr=" return "+expr;code+=expr+"\n}\n";code+="var dataFilterValue = dataFilterCall();\n";eval(code);return dataFilterValue;}else{console.log("Unknown filter:"+this.type);return true;}}});});return filters;},}
function RequestMacro(display,macro){this.display=display;let values=null;let enums=this.getProperty("request."+macro+".values");if(enums){values=[]
if(this.getProperty("request."+macro+".includeAll",this.getProperty("request.includeAll",false))){values.push(["","All"]);}
if(this.getProperty("request."+macro+".includeNone",false)){values.push(["","None"]);}
enums.split(",").every(tok=>{[id,label]=tok.split(":");values.push([id,label||id]);return true;});}
let macroType=this.getProperty("request."+macro+".type",values!=null?"enumeration":macro=="bounds"?"bounds":"string");let dflt=this.getProperty("request."+macro+".default",null);if(dflt==null){if(values&&values.length>0&&macroType=="enumeration"){dflt=values[0][0];}else{dflt="";}}
$.extend(this,{name:macro,values:values,urlarg:this.getProperty("request."+macro+".urlarg",macro),type:macroType,triggerReload:this.getProperty("request."+macro+".triggerReload",true),dflt:dflt,dflt_from:this.getProperty("request."+macro+"_from.default",""),dflt_to:this.getProperty("request."+macro+"_to.default",""),dflt_min:this.getProperty("request."+macro+"_min.default",""),dflt_max:this.getProperty("request."+macro+"_max.default",""),label:this.getProperty("request."+macro+".label",Utils.makeLabel(macro)),multiple:this.getProperty("request."+macro+".multiple",false),rows:this.getProperty("request."+macro+".rows",3),});}
RequestMacro.prototype={getProperty:function(prop,dflt){return this.display.getProperty(prop,dflt);},isVisible:function(){return this.getProperty("request."+this.name+".visible",this.getProperty("macros.visible",true));},getWidget:function(dateIds){let debug=false;let visible=this.isVisible();let style=visible?"":"display:none;";let widget;let label=this.label;if(debug)console.log(this.getId()+".getWidget:"+label+" type:"+this.type);if(this.type=="bounds"){widget=HU.checkbox("",[ID,this.display.getDomId(this.getId())],false)+HU.span([CLASS,"display-request-reload",TITLE,"Reload with current bounds"]," In bounds");label=null;}else if(this.type=="enumeration"){if(this.values&&this.values.length>0){let attrs=[STYLE,style,ID,this.display.getDomId(this.getId()),CLASS,"display-filter-input"];if(this.multiple){attrs.push("multiple");attrs.push(null);attrs.push("size");attrs.push(Math.min(this.rows,this.values.length));}
if(debug)
console.log("\tselect: dflt:"+this.dflt+" values:"+this.values);widget=HU.select("",attrs,this.values,this.dflt,20);}}else if(this.type=="numeric"){let minId=this.display.getDomId(this.getId()+"_min");let maxId=this.display.getDomId(this.getId()+"_max");widget=HU.input("","",[STYLE,style,ID,minId,"size",4,CLASS,"display-filter-input"],this.dflt_min)+
" - "+
HU.input("","",[STYLE,style,ID,maxId,"size",4,CLASS,"display-filter-input"],this.dflt_max)
label=label+" range";}else if(this.type=="date"){let fromId=this.display.getDomId(this.getId()+"_from");let toId=this.display.getDomId(this.getId()+"_to");dateIds.push(fromId);dateIds.push(toId);widget=HU.datePicker("",this.dflt_from,[CLASS,"display-filter-input",STYLE,style,"name","",ID,fromId])+
" - "+
HU.datePicker("",this.dflt_to,[CLASS,"display-filter-input",STYLE,style,"name","",ID,toId])
label=label+" range";}else{let size="10";if(this.type=="number")
size="4";widget=HU.input("",this.dflt,[STYLE,style,ID,this.display.getDomId(this.getId()),"size",size,CLASS,"display-filter-input"]);}
if(!widget)return"";return(visible?this.display.makeFilterWidget(label,widget):widget);},getId:function(){return"macro_"+this.name;},getValue:function(){let widget=this.display.jq(this.getId());let value=this.dflt;if(widget.length!=0)value=widget.val();this.display.setProperty("request."+this.name+".default",value);return value;},apply:function(url){if(this.type=="bounds"){if(this.display.getBounds&&this.display.jq(this.getId()).is(':checked')){let bounds=this.display.getBounds();if(bounds){bounds=RecordUtil.convertBounds(bounds);["north","south","east","west"].map(b=>{url+="&"+b+"="+bounds[b];});}}}else if(this.type=="numeric"){let min=this.display.jq(this.getId()+"_min").val()||"";let max=this.display.jq(this.getId()+"_max").val()||"";this.dflt_min=min;this.dflt_max=max;if(min!="")
url=url+"&"+HU.urlArg(this.urlarg+"_from",min);if(max!="")
url=url+"&"+HU.urlArg(this.urlarg+"_to",max);this.display.setProperty("request."+this.name+"_min.default",min);this.display.setProperty("request."+this.name+"_max.default",max);}else if(this.type=="date"){let from=this.display.jq(this.getId()+"_from").val()||"";let to=this.display.jq(this.getId()+"_to").val()||"";this.dflt_from=from;this.dflt_to=to;this.display.setProperty("request."+this.name+"_from.default",from);this.display.setProperty("request."+this.name+"_to.default",to);if(from!="")
url=url+"&"+HU.urlArg(this.urlarg+"_fromdate",from);if(to!="")
url=url+"&"+HU.urlArg(this.urlarg+"_todate",to);}else if(this.type=="enumeration"){let value=this.getValue();if(!Array.isArray(value)){value=[value];}
if(value.length>0&&value[0]!=""){let regexp=new RegExp(this.urlarg+"=[^$&]*",'g');url=url.replace(regexp,"");value.map(v=>{if(v!="")
url=url+"&"+HU.urlArg(this.urlarg,v);});}}else{let value=this.getValue();this.dflt=value;if(value!=""){let regexp=new RegExp(this.urlarg+"=[^$&]*",'g');url=url.replace(regexp,"");url=url+"&"+HU.urlArg(this.urlarg,value);}}
return url;}}
var DISPLAY_FILTER="filter";var DISPLAY_ANIMATION="animation";var DISPLAY_LABEL="label";addGlobalDisplayType({type:DISPLAY_FILTER,label:"Filter",requiresData:false,category:"Controls"});addGlobalDisplayType({type:DISPLAY_ANIMATION,label:"Animation",requiresData:false,category:"Controls"});addGlobalDisplayType({type:DISPLAY_LABEL,label:"Text",requiresData:false,category:"Misc"});var DISPLAY_LEGEND="legend";addGlobalDisplayType({type:DISPLAY_LEGEND,label:"Legend",requiresData:true,forUser:true,category:CATEGORY_MISC});function RamaddaFilterDisplay(displayManager,id,properties){RamaddaUtil.inherit(this,new RamaddaDisplay(displayManager,id,properties));addRamaddaDisplay(this);RamaddaUtil.defineMembers(this,{html:"<p>&nbsp;&nbsp;&nbsp;Nothing selected&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<p>",initDisplay:function(){this.createUI();this.setContents(this.html);},});}
function RamaddaAnimationDisplay(displayManager,id,properties){var ID_START="start";var ID_STOP="stop";var ID_TIME="time";RamaddaUtil.inherit(this,new RamaddaDisplay(displayManager,id,DISPLAY_ANIMATION,properties));addRamaddaDisplay(this);RamaddaUtil.defineMembers(this,{running:false,timestamp:0,index:0,sleepTime:500,iconStart:"fa-play",iconStop:"fa-stop",iconBack:"fa-step-backward",iconForward:"fa-step-forward",iconSlower:"fa-minus",iconFaster:"fa-plus",iconBegin:"fa-fast-backward",iconEnd:"fa-fast-forward",deltaIndex:function(i){this.stop();this.setIndex(this.index+i);},setIndex:function(i){if(i<0)i=0;this.index=i;this.applyStep(true,!Utils.isDefined(i));},toggle:function(){if(this.running){this.stop();}else{this.start();}},tick:function(){if(!this.running)return;this.index++;this.applyStep();var theAnimation=this;setTimeout(function(){theAnimation.tick();},this.sleepTime);},applyStep:function(propagate,goToEnd){if(!Utils.isDefined(propagate))propagate=true;var data=this.displayManager.getDefaultData();if(data==null)return;var records=data.getRecords();if(records==null){$("#"+this.getDomId(ID_TIME)).html("no records");return;}
if(goToEnd)this.index=records.length-1;if(this.index>=records.length){this.index=0;}
var record=records[this.index];var label="";if(record.getDate()!=null){var dttm=this.formatDate(record.getDate(),{suffix:this.getTimeZone()});label+=HtmlUtils.b("Date:")+" "+dttm;}else{label+=HtmlUtils.b("Index:")+" "+this.index;}
$("#"+this.getDomId(ID_TIME)).html(label);if(propagate){this.displayManager.propagateEventRecordSelection(this,data,{index:this.index});}},handleEventRecordSelection:function(source,args){if(!args.record)return;var data=this.displayManager.getDefaultData();if(data==null)return;let records=data.getRecords();records.every((r,idx)=>{if(r.getId()==args.record.getId()){this.index=idx;this.applyStep(false);return false;}
return true;});},faster:function(){this.sleepTime=this.sleepTime/2;if(this.sleepTime==0)this.sleepTime=100;},slower:function(){this.sleepTime=this.sleepTime*1.5;},start:function(){if(this.running)return;this.running=true;this.timestamp++;$("#"+this.getDomId(ID_START)).html(HtmlUtils.getIconImage(this.iconStop));this.tick();},stop:function(){if(!this.running)return;this.running=false;this.timestamp++;$("#"+this.getDomId(ID_START)).html(HtmlUtils.getIconImage(this.iconStart));},initDisplay:function(){this.createUI();this.stop();var get=this.getGet();var html="";let c="display-animation-button";html+=HtmlUtils.onClick(get+".setIndex(0);",HtmlUtils.div([ATTR_TITLE,"beginning",ATTR_CLASS,c],HtmlUtils.getIconImage(this.iconBegin)));html+=HtmlUtils.onClick(get+".deltaIndex(-1);",HtmlUtils.div([ATTR_TITLE,"step back",ATTR_CLASS,c],HtmlUtils.getIconImage(this.iconBack)));html+=HtmlUtils.onClick(get+".toggle();",HtmlUtils.div([ATTR_ID,this.getDomId(ID_START),ATTR_TITLE,"play/stop",ATTR_CLASS,c],HtmlUtils.getIconImage(this.iconStart)));html+=HtmlUtils.onClick(get+".deltaIndex(1);",HtmlUtils.div([ATTR_TITLE,"step forward",ATTR_CLASS,c],HtmlUtils.getIconImage(this.iconForward)));html+=HtmlUtils.onClick(get+".setIndex();",HtmlUtils.div([ATTR_TITLE,"end",ATTR_CLASS,c],HtmlUtils.getIconImage(this.iconEnd)));html+=HtmlUtils.onClick(get+".faster();",HtmlUtils.div([ATTR_TITLE,"faster",ATTR_CLASS,c],HtmlUtils.getIconImage(this.iconFaster)));html+=HtmlUtils.onClick(get+".slower();",HtmlUtils.div([ATTR_TITLE,"slower",ATTR_CLASS,c],HtmlUtils.getIconImage(this.iconSlower)));html+=HtmlUtils.div(["style","display:inline-block; min-height:24px; margin-left:10px;",ATTR_ID,this.getDomId(ID_TIME)],"&nbsp;");this.setDisplayTitle("Animation");this.setContents(html);},});}
function RamaddaLabelDisplay(displayManager,id,properties){var ID_TEXT="text";var ID_EDIT="edit";var SUPER;if(properties&&!Utils.isDefined(properties.showTitle)){properties.showTitle=false;}
RamaddaUtil.inherit(this,SUPER=new RamaddaDisplay(displayManager,id,DISPLAY_LABEL,properties));addRamaddaDisplay(this);this.text="";this.editMode=properties.editMode;if(properties.text)this.text=properties.text;else if(properties.label)this.text=properties.label;else if(properties.html)this.text=properties.html;if(properties["class"])this["class"]=properties["class"];else this["class"]="display-text";RamaddaUtil.defineMembers(this,{initDisplay:function(){var theDisplay=this;this.createUI();var textClass=this["class"];if(this.editMode){textClass+=" display-text-edit ";}
var style="color:"+this.getTextColor("contentsColor")+";";var html=HtmlUtils.div([ATTR_CLASS,textClass,ATTR_ID,this.getDomId(ID_TEXT),"style",style],this.text);if(this.editMode){html+=HtmlUtils.textarea(ID_EDIT,this.text,["rows",5,"cols",120,ATTR_SIZE,"120",ATTR_CLASS,"display-text-input",ATTR_ID,this.getDomId(ID_EDIT)]);}
this.setContents(html);if(this.editMode){var editObj=this.jq(ID_EDIT);editObj.blur(function(){theDisplay.text=editObj.val();editObj.hide();theDisplay.initDisplay();});this.jq(ID_TEXT).click(function(){var src=theDisplay.jq(ID_TEXT);var edit=theDisplay.jq(ID_EDIT);edit.show();edit.css('z-index','9999');edit.position({of:src,my:"left top",at:"left top",collision:"none none"});theDisplay.jq(ID_TEXT).html("");});}},getWikiAttributes:function(attrs){SUPER.getWikiAttributes(attrs);attrs.push("text");attrs.push(this.text);},});}
function RamaddaLegendDisplay(displayManager,id,properties){let SUPER=new RamaddaDisplay(displayManager,id,DISPLAY_LEGEND,properties);RamaddaUtil.inherit(this,SUPER);addRamaddaDisplay(this);$.extend(this,{getWikiEditorTags:function(){return Utils.mergeLists(SUPER.getWikiEditorTags(),["label:Legend Display",'labels=""','colors=""','inBox=true','labelColor=#fff','labelColors=color1,color2,...','orientation=vertical']);},updateUI:function(){let labels=this.getProperty("labels","").split(",");let colors=this.getColorList();let html="";let colorWidth=this.getProperty("colorWidth","20px");let labelColor=this.getProperty("labelColor","#000");let labelColors=this.getProperty("labelColors")?this.getProperty("labelColors").split(","):null;let inBox=this.getProperty("inBox",false);let orientation=this.getProperty("orientation","horizontal");let delim=orientation=="horizontal"?" ":"<br>";for(let i=0;i<labels.length;i++){let label=labels[i];let color=colors[i]||"#fff";if(i>0)html+=delim;if(!inBox){html+=HtmlUtils.div(["class","display-legend-item"],HtmlUtils.div(["class","display-legend-color","style","background:"+color+";width:"+colorWidth+";"+
"height:15px;"])+
HtmlUtils.div(["class","display-legend-label"],label));}else{let lc=labelColors?labelColors[i]:labelColor||labelColor;html+=HtmlUtils.div(["class","display-legend-color","style","margin-left:8px;background:"+color+";"],HtmlUtils.div(["class","display-legend-label","style","margin-left:8px;margin-right:8x;color:"+lc+";"],label));}}
if(orientation!="vertical"){html=HtmlUtils.center(html);}
this.writeHtml(ID_DISPLAY_CONTENTS,html);},})}
var DISPLAY_NOTEBOOK="notebook";addGlobalDisplayType({type:DISPLAY_NOTEBOOK,label:"Notebook",requiresData:false,category:"Misc"});var pluginDefintions={'jsx':{"languageId":"jsx","displayName":"React JSX","url":"https://raw.githubusercontent.com/hamilton/iodide-jsx/master/docs/evaluate-jsx.js","module":"jsx","evaluator":"evaluateJSX","pluginType":"language"},"lisp":{"languageId":"lisp","displayName":"Microtalk Lisp","url":"https://ds604.neocities.org/js/microtalk.js","module":"MICROTALK","evaluator":"evaluate","pluginType":"language","outputHandler":"processLispOutput",},"sql":{"languageId":"sql","displayName":"SqlLite","url":"${htdocs}/lib/notebook/sqllite.js","module":"SqlLite","evaluator":"evaluate","pluginType":"language"},"plantuml":{"languageId":"plantuml","displayName":"PlantUml","codeMirrorMode":"","keybinding":"x","url":"https://raw.githubusercontent.com/six42/iodide-plantuml-plugin/master/src/iodide-plantuml-plugin.js","depends":[{"type":"js","url":"https://raw.githubusercontent.com/johan/js-deflate/master/rawdeflate.js"}],"module":"plantuml","evaluator":"plantuml_img","pluginType":"language"},"ml":{"languageId":"ml","displayName":"ocaml","codeMirrorMode":"mllike","keybinding":"o","url":"https://louisabraham.github.io/domical/eval.js","module":"evaluator","evaluator":"execute","pluginType":"language","depends":[{"type":"css","url":"https://louisabraham.github.io/domical/style.css"}]}};function RamaddaNotebookDisplay(displayManager,id,properties){var ID_NOTEBOOK="notebook";var ID_IMPORTS="imports";var ID_CELLS="cells";var ID_CELLS_BOTTOM="cellsbottom";var ID_INPUTS="inputs";var ID_OUTPUTS="outputs";var ID_CONSOLE="console";var ID_CONSOLE_TOOLBAR="consoletoolbar";var ID_CONSOLE_CONTAINER="consolecontainer";var ID_CONSOLE_OUTPUT="consoleout";var ID_CELL="cell";var ID_MENU="menu";this.properties=properties||{};let SUPER=new RamaddaDisplay(displayManager,id,DISPLAY_NOTEBOOK,properties);RamaddaUtil.inherit(this,SUPER);addRamaddaDisplay(this);RamaddaUtil.defineMembers(this,{runOnLoad:this.getProperty("runOnLoad",true),displayMode:this.getProperty("displayMode",false),showConsole:this.getProperty("showConsole",true),consoleHidden:this.getProperty("consoleHidden",false),layout:this.getProperty("layout","horizontal"),columns:this.getProperty("columns",1),});RamaddaUtil.defineMembers(this,{cells:[],cellCount:0,fetchedNotebook:false,currentEntries:{},globals:{},baseEntries:{},outputRenderers:[],initDisplay:async function(){this.createUI();var imports=HtmlUtils.div(["id",this.getDomId(ID_IMPORTS)]);var contents=imports+HtmlUtils.div([ATTR_CLASS,"display-notebook-cells",ATTR_ID,this.getDomId(ID_CELLS)],"&nbsp;&nbsp;Loading...")+
HtmlUtils.div([ATTR_ID,this.getDomId(ID_CELLS_BOTTOM)]);var popup=HtmlUtils.div(["class","ramadda-popup",ATTR_ID,this.getDomId(ID_MENU)]);contents=HtmlUtils.div([ATTR_ID,this.getDomId(ID_NOTEBOOK)],popup+contents);this.setContents(contents);this.makeCellLayout();this.jq(ID_NOTEBOOK).hover(()=>{},()=>{this.jq(ID_MENU).hide()});if(!this.fetchedNotebook){this.initOutputRenderers();if(!this.fetchingNotebook){this.fetchingNotebook=true;await Utils.importCSS(ramaddaBaseHtdocs+"/lib/fontawesome/css/all.min.css");await Utils.importJS(ramaddaBaseHtdocs+"/lib/ace/src-min/ace.js");await Utils.importJS(ramaddaBaseUrl+"/lib/showdown.min.js");var imports="<link rel='preload' href='https://cdn.jsdelivr.net/npm/katex@0.10.1/dist/fonts/KaTeX_Main-Regular.woff2' as='font' type='font/woff2' crossorigin='anonymous'>\n<link rel='preload' href='https://cdn.jsdelivr.net/npm/katex@0.10.1/dist/fonts/KaTeX_Math-Italic.woff2' as='font' type='font/woff2' crossorigin='anonymous'>\n<link rel='preload' href='https://cdn.jsdelivr.net/npm/katex@0.10.1/dist/fonts/KaTeX_Size2-Regular.woff2' as='font' type='font/woff2' crossorigin='anonymous'>\n<link rel='preload' href='https://cdn.jsdelivr.net/npm/katex@0.10.1/dist/fonts/KaTeX_Size4-Regular.woff2' as='font' type='font/woff2' crossorigin='anonymous'/>\n<link rel='stylesheet' href='https://fonts.googleapis.com/css?family=Lato:300,400,700,700i'>\n<link rel='stylesheet' href='https://cdn.jsdelivr.net/npm/katex@0.10.1/dist/katex.min.css' crossorigin='anonymous'>\n<link rel='stylesheet' href='static/index.css'><script defer src='https://cdn.jsdelivr.net/npm/katex@0.10.1/dist/katex.min.js' crossorigin='anonymous'></script>";$(imports).appendTo("head");setTimeout(()=>this.fetchNotebook(1),10);}}else{this.layoutCells();}},fetchNotebook:async function(cnt){if(!window["ace"]){if(cnt>50){alert("Could not load ace.js");return;}
setTimeout(()=>this.fetchNotebook(cnt+1),cnt*10);return;}
var dttm=new Date().getTime();ace.config.set('basePath',ramaddaBaseUrl+"/htdocs_v"+dttm+"/lib/ace/src-min");let _this=this;this.fetchedNotebook=true;await this.getEntry(this.getProperty("entryId",""),entry=>{this.baseEntry=entry;});await this.baseEntry.getRoot(entry=>{this.rootEntry=entry;});var id=this.getProperty("entryId","");var url=ramaddaBaseUrl+"/getnotebook?entryid="+id;url+="&notebookId="+this.getProperty("notebookId","default_notebook");var jqxhr=$.getJSON(url,function(data){_this.loadJson(data);}).fail(function(){var props={showInput:true,}
this.addCell("init cell",props,false).run();this.cells[0].focus();});},formatObject:function(value){return Utils.formatJson(value);},initOutputRenderers:function(){let notebook=this;this.outputRenderers=[];this.addOutputRenderer({shouldRender:(value)=>{return Array.isArray(value);},render:(value)=>{return Utils.formatJson(value);},});this.addOutputRenderer({shouldRender:(value)=>{return Array.isArray(value)&&value.length>0&&Array.isArray(value[0]);},render:(value)=>{var table="<table>";for(var rowIdx=0;rowIdx<value.length;rowIdx++){var row=value[rowIdx];table+="<tr>";for(var colIdx=0;colIdx<row.length;colIdx++){table+="<td>&nbsp;"+row[colIdx]+"</td>";}
table+="</tr>";}
table+="</table>";return table;}});this.addOutputRenderer({shouldRender:(value)=>{return typeof value==="object"&&value.getTime;},render:(value)=>{return notebook.formatDate(value)},});this.addOutputRenderer({shouldRender:(value)=>{var t=typeof value;return t==="string"||t==="number"||t==="boolean";},render:(value)=>{if(typeof value==="string"){if(value.split("\n").length>1){return HtmlUtils.div(["style"," white-space: pre;"],value);}}
return value},});this.addOutputRenderer({shouldRender:(value)=>{return typeof value==="object"&&"lat"in value&&"lon"in value;},render:(value)=>{var url='http://staticmap.openstreetmap.de/staticmap.php?center='+value.lat+','+value.lon+'&zoom=17&size=400x150&maptype=mapnik';return"<img src='"+url+"'/>"},});},addOutputRenderer:function(renderer){if(this.outputRenderers.indexOf(renderer)<0){this.outputRenderers.push(renderer);}},formatOutput:function(value){if(!value)return null;for(var i=this.outputRenderers.length-1;i>=0;i--){var renderer=this.outputRenderers[i];if(renderer.shouldRender&&renderer.shouldRender(value)){return renderer.render(value);}}
var v=null;if(value.iodideRender){v=value.iodideRender();}else if(value.notebookRender){v=value.notebookRender();}
if(v){if(typeof v=="string"){return v;}}
return null;},getBaseEntry:function(){return this.baseEntry;},getRootEntry:function(){return this.rootEntry;},getPopup:function(){return this.jq(ID_MENU);},loadJson:async function(data){if(data.error){this.setContents(_this.getMessage("Failed to load notebook: "+data.error));return;}
if(!Utils.isDefined(this.properties.runOnLoad)&&Utils.isDefined(data.runOnLoad)){this.runOnLoad=data.runOnLoad;}
if(!Utils.isDefined(this.properties.displayMode)&&Utils.isDefined(data.displayMode)){this.displayMode=data.displayMode;}
if(!Utils.isDefined(this.properties.showConsole)&&Utils.isDefined(data.showConsole)){this.showConsole=data.showConsole;}
if(Utils.isDefined(data.consoleHidden)){this.consoleHidden=data.consoleHidden;}
if(!Utils.isDefined(this.properties.columns)&&Utils.isDefined(data.columns)){this.columns=data.columns;}
if(!Utils.isDefined(this.properties.layout)&&Utils.isDefined(data.layout)){this.layout=data.layout;}
if(Utils.isDefined(data.currentEntries)){for(a in data.currentEntries){var obj={};if(this.currentEntries[a])continue;obj.name=a;obj.entryId=data.currentEntries[a].entryId;try{await this.getEntry(obj.entryId,e=>obj.entry=e);this.currentEntries[a]=obj;}catch(e){}}}
if(Utils.isDefined(data.cells)){this.cells=[];data.cells.map(cell=>this.addCell(cell.outputHtml,cell,true));this.layoutCells();}
if(this.cells.length==0){var props={showInput:true,}
this.addCell("%%wiki\n",props,false);this.layoutCells();this.cells[0].focus();}
if(this.runOnLoad){this.runAll();}},addEntry:async function(name,entryId){var entry;await this.getEntry(entryId,e=>entry=e);this.currentEntries[name]={entryId:entryId,entry:entry};},getCurrentEntries:function(){return this.currentEntries;},clearEntries:function(){this.currentEntries={};for(a in this.baseEntries)
this.currentEntries[a]=this.baseEntries[a];},saveNotebook:function(output){var json=this.getJson(output);json=JSON.stringify(json,null,2);var args={entryid:this.getProperty("entryId",""),notebookId:this.getProperty("notebookId","default_notebook"),notebook:json};var url=ramaddaBaseUrl+"/savenotebook";$.post(url,args,(result)=>{if(result.error){alert("Error saving notebook: "+result.error);return;}
if(result.result!="ok"){alert("Error saving notebook: "+result.result);return;}
if(!this.getShowConsole()){alert("Notebook saved");}else{this.log("Notebook saved","info","nb");}});},showInput:function(){if(this.displayMode&&!this.user){return false;}
if(this.getProperty("showInput",true)==false)
return false;return true;},getJson:function(output){var obj={cells:[],currentEntries:{},runOnLoad:this.runOnLoad,displayMode:this.displayMode,showConsole:this.showConsole,consoleHidden:this.consoleHidden,layout:this.layout,columns:this.columns,};for(var name in this.currentEntries){var e=this.currentEntries[name];obj.currentEntries[name]={entryId:e.entryId};}
this.cells.map(cell=>obj.cells.push(cell.getJson(output)));return obj;},initConsole:function(){if(!this.showInput()){return;}
let _this=this;this.console=this.jq(ID_CONSOLE_OUTPUT);if(this.consoleHidden)
this.console.hide();this.jq(ID_CONSOLE).find(".ramadda-image-link").click(function(e){var what=$(this).attr("what");if(what=="clear"){_this.console.html("");}
e.stopPropagation();});this.consoleToolbar=this.jq(ID_CONSOLE_TOOLBAR);this.consoleToolbar.click(()=>{if(this.console.is(":visible")){this.console.hide(400);this.consoleHidden=true;}else{this.consoleHidden=false;this.console.show(400);}});},getShowConsole:function(){return this.showInput()&&this.showConsole;},makeConsole:function(){this.console=null;if(!this.getShowConsole()){return"";}
var contents=this.jq(ID_CONSOLE_OUTPUT).html();var consoleToolbar=HtmlUtils.div(["id",this.getDomId(ID_CONSOLE_TOOLBAR),"class","display-notebook-console-toolbar","title","click to hide/show console"],HtmlUtils.leftRight("",HtmlUtils.span(["class","ramadda-image-link","title","Clear","what","clear"],HtmlUtils.image(Utils.getIcon("clear.png")))));return HtmlUtils.div(["id",this.getDomId(ID_CONSOLE),"class","display-notebook-console"],consoleToolbar+
HtmlUtils.div(["class","display-notebook-console-output","id",this.getDomId(ID_CONSOLE_OUTPUT)],contents||""));},makeCellLayout:function(){var html="";var consoleContainer=HtmlUtils.div(["id",this.getDomId(ID_CONSOLE_CONTAINER)]);this.jq(ID_CELLS_BOTTOM).html("");if(this.showInput()&&this.layout=="horizontal"){var left=HtmlUtils.div(["id",this.getDomId(ID_INPUTS),"style","width:100%;"]);var right=HtmlUtils.div(["id",this.getDomId(ID_OUTPUTS),"style","width:100%;"]);var center=HtmlUtils.div([],"");left+=consoleContainer;html="<table style='table-layout:fixed;' border=0 width=100%><tr valign=top><td width=50%>"+left+"</td><td style='border-left:1px #ccc solid;' width=1>"+center+"</td><td width=49%>"+right+"</td></tr></table>";}else{this.jq(ID_CELLS_BOTTOM).html(consoleContainer);}
this.jq(ID_CELLS).html(html);},plugins:{},addPlugin:async function(plugin,chunk){var error;if(plugin.depends){for(var i=0;i<plugin.depends.length;i++){var obj=plugin.depends[i];var type=obj.type;var url=obj.url;if(type=="js"){await Utils.importJS(url,()=>{},(jqxhr,settings,exception)=>{error="Error fetching plugin url:"+url;});}else if(type=="css"){await Utils.importCSS(url,()=>{},(jqxhr,settings,exception)=>{error="Error fetching plugin url:"+url;});}
if(error){this.log(error,"error","nb",chunk?chunk.div:null);return;}}}
var url=Utils.replaceRoot(plugin.url);await Utils.importJS(url,()=>{},(jqxhr,settings,exception)=>{error="Error fetching plugin url:"+url;});if(!error){var module=plugin.module;var tries=200;while(window[module]==null&&tries-->0){await new Promise(resolve=>setTimeout(resolve,100));}
if(!window[module]){error="Could not load plugin module: "+module;}else{if(window[module].isPluginReady){var tries=200;while(!window[module].isPluginReady()&&tries-->0){await new Promise(resolve=>setTimeout(resolve,100));}
if(!window[module].isPluginReady())
error="Could not load plugin module: "+module;}}}
if(error){this.log(error,"error","nb",chunk?chunk.div:null);return;}
this.plugins[plugin.languageId]=plugin;},hasPlugin:async function(id,callback){if(!this.plugins[id]){if(window.pluginDefintions[id]){await this.addPlugin(window.pluginDefintions[id],null);}}
Utils.call(callback,this.plugins[id]!=null);},processChunkWithPlugin:async function(id,chunk,callback){var module=this.plugins[id].module;var func=this.plugins[id].evaluator;var result=window[module][func](chunk.getContent(),chunk);return Utils.call(callback,result);},processPluginOutput:function(id,chunk,result){if(!result)return;var module=this.plugins[id].module;var func=window[this.plugins[id].outputHandler];if(func){chunk.div.append(func(result));}else{if(typeof result=="object"){}else{chunk.div.set(result);}}},log:function(msg,type,from,div){var icon="";var clazz="display-notebook-console-item";if(typeof msg=="object"){msg=Utils.formatJson(msg);}
if(type=="error"){clazz+=" display-notebook-console-item-error";icon=HtmlUtils.image(Utils.getIcon("cross-octagon.png"));if(div){div.append(HtmlUtils.div(["class","display-notebook-chunk-error"],msg));}}else if(type=="output"){clazz+=" display-notebook-console-item-output";icon=HtmlUtils.image(Utils.getIcon("arrow-000-small.png"));}else if(type=="info"){clazz+=" display-notebook-console-item-info";icon=HtmlUtils.image(Utils.getIcon("information.png"));}
if(!this.console)return;if(!from)from="";else from=HtmlUtils.div(["class","display-notebook-console-from"],from);var block=HtmlUtils.div(["style","margin-left:5px;"],msg);var html="<table width=100%><tr valign=top><td width=10>"+icon+"</td><td>"+
block+
"</td><td width=10>"+
from+
"</td></tr></table>";var item=HtmlUtils.div(["class",clazz],html);this.console.append(item);var height=this.console.prop('scrollHeight');if(height>200)
this.console.scrollTop(height-200);},clearConsole:function(){this.console.html("");},layoutCells:function(){for(var i=0;i<this.cells.length;i++){var cell=this.cells[i];cell.prepareToLayout();}
this.makeCellLayout();if(this.showInput()&&this.layout=="horizontal"){var left="";var right="";var id;for(var i=0;i<this.cells.length;i++){var cell=this.cells[i];id=cell.id;cell.index=i+1;left+=HtmlUtils.div([ATTR_CLASS,"display-notebook-cell",ATTR_ID,cell.id+"_cellinput"],"");left+="\n";right+=HtmlUtils.div([ATTR_CLASS,"display-notebook-cell",ATTR_ID,cell.id+"_celloutput"],"");}
this.jq(ID_INPUTS).html(left);this.jq(ID_OUTPUTS).html(right);}else{var html="<div class=row style='padding:0px;margin:0px;'>";var clazz=HtmlUtils.getBootstrapClass(this.columns);var colCnt=0;for(var i=0;i<this.cells.length;i++){var cell=this.cells[i];cell.index=i+1;html+=HtmlUtils.openTag("div",["class",clazz]);html+=HtmlUtils.openTag("div",["style","max-width:100%;overflow-x:auto;padding:0px;margin:px;"]);html+=HtmlUtils.div([ATTR_CLASS,"display-notebook-cell",ATTR_ID,cell.id+"_cellinput"],"");html+=HtmlUtils.div([ATTR_CLASS,"display-notebook-cell",ATTR_ID,cell.id+"_celloutput"],"");html+=HtmlUtils.closeTag("div");html+=HtmlUtils.closeTag("div");html+="\n";colCnt++;if(colCnt>=this.columns){colCnt=0;html+=HtmlUtils.closeTag("div");html+="<div class=row style='padding:0px;margin:0px;'>";}};html+=HtmlUtils.closeTag("div");this.jq(ID_CELLS).append(html);}
for(var i=0;i<this.cells.length;i++){var cell=this.cells[i];cell.createCell();};this.jq(ID_CONSOLE_CONTAINER).html(this.makeConsole());this.initConsole();},addCell:function(content,props,layoutLater){cell=this.createCell(content,props);this.cells.push(cell);if(!layoutLater){if(this.showInput()&&this.layout=="horizontal"){this.jq(ID_INPUTS).append(HtmlUtils.div([ATTR_CLASS,"display-notebook-cell",ATTR_ID,cell.id+"_cellinput"],""));this.jq(ID_OUTPUTS).append(HtmlUtils.div([ATTR_CLASS,"display-notebook-cell",ATTR_ID,cell.id+"_celloutput"],""));}else{this.jq(ID_CELLS).append(HtmlUtils.div([ATTR_CLASS,"display-notebook-cell",ATTR_ID,cell.id+"_cellinput"],""));this.jq(ID_CELLS).append(HtmlUtils.div([ATTR_CLASS,"display-notebook-cell",ATTR_ID,cell.id+"_celloutput"],""));}
cell.createCell();}
return cell;},createCell:function(content,props){if(!props)props={showInput:true};var cellId=this.getId()+"_"+this.cellCount;props.id=cellId;this.cellCount++;this.jq(ID_CELLS).append(HtmlUtils.div([ATTR_CLASS,"display-notebook-cell",ATTR_ID,cellId],""));var cell=new RamaddaNotebookCell(this,cellId,content,props);return cell;},clearOutput:function(){this.cells.map(cell=>cell.clearOutput());},getIndex:function(cell){var idx=0;for(var i=0;i<this.cells.length;i++){if(cell.id==this.cells[i].id){idx=i;break;}}
return idx;},moveCellUp:function(cell){var cells=[];var newCell=null;var idx=this.getIndex(cell);if(idx==0)return;this.cells.splice(idx,1);this.cells.splice(idx-1,0,cell);this.layoutCells();cell.focus();},moveCellDown:function(cell){var cells=[];var newCell=null;var idx=this.getIndex(cell);if(idx==this.cells.length-1)return;this.cells.splice(idx,1);this.cells.splice(idx+1,0,cell);this.layoutCells();cell.focus();},newCellAbove:function(cell){var cells=[];var newCell=null;for(var i=0;i<this.cells.length;i++){if(cell.id==this.cells[i].id){newCell=this.createCell("%%wiki\n",{showInput:true,showHeader:false});cells.push(newCell);}
cells.push(this.cells[i]);}
this.cells=cells;this.layoutCells();newCell.focus();},newCellBelow:function(cell){var cells=[];var newCell=null;for(var i=0;i<this.cells.length;i++){cells.push(this.cells[i]);if(cell.id==this.cells[i].id){newCell=this.createCell("%%wiki\n",{showInput:true,showHeader:false});cells.push(newCell);}}
this.cells=cells;this.layoutCells();newCell.focus();},deleteCell:function(cell){cell.jq(ID_CELL).remove();var cells=[];this.cells.map(c=>{if(cell.id!=c.id){cells.push(c);}});this.cells=cells;if(this.cells.length==0){this.addCell("",null);}},cellValues:{},setCellValue:function(name,value){this.cellValues[name]=value;},getCellValues:function(){return this.cellValues;},convertInput:function(input){for(name in this.cellValues){var re=new RegExp("\\$\\{"+name+"\\}","g");input=input.replace(re,this.cellValues[name]);}
return input;},inGlobalChanged:false,globalChanged:async function(name,value){var globalChangeCalled=this.inGlobalChanged;var top=!this.inGlobalChanged;if(this.inRunAll){top=false;}
this.inGlobalChanged=true;if(top){this.cells.map(cell=>cell.prepareToRun());}
for(var i=0;i<this.cells.length;i++){await this.cells[i].globalChanged(name,value);}
if(!globalChangeCalled){this.inGlobalChanged=false;}},addGlobal:async function(name,value,dontPropagate){name=name.trim().replace(/[ -]/g,"_");var oldValue=this.getGlobalValue(name);if(Utils.isDefined(window[name]))window[name]=value;this.globals[name]=value;if(!dontPropagate){var newValue=this.getGlobalValue(name);if(newValue!=oldValue){}}},getGlobalValue:function(name){if(!this.globals[name])return null;if(typeof this.globals[name]=="function")return this.globals[name]();return this.globals[name];},inRunAll:false,runAll:async function(){this.inRunAll=true;var ok=true;this.cellValues={};for(var i=0;i<this.cells.length;i++){var cell=this.cells[i];cell.prepareToRun();}
for(var i=0;i<this.cells.length;i++){var cell=this.cells[i];if(!cell.runFirst)continue;await this.runCell(cell).then(result=>ok=result);}
if(!ok)return;for(var i=0;i<this.cells.length;i++){var cell=this.cells[i];if(cell.runFirst)continue;await this.runCell(cell,true).then(result=>ok=result);}
this.inRunAll=false;},runCell:async function(cell,doingAll){if(cell.hasRun)return true;await cell.run(result=>ok=result,{doingAll:doingAll});if(!ok)return false;var raw=cell.getRawOutput();if(raw){raw=raw.trim();if(Utils.stringDefined(cell.cellName)){this.cellValues[cell.cellName]=raw;}}
return true;},toggleAll:function(on){this.cells.map(cell=>{cell.showInput=on;cell.applyStyle();});},});}
var iodide={addOutputRenderer:function(renderer){notebook.addOutputRenderer(renderer);},addOutputHandler:function(renderer){notebook.addOutputHandler(renderer);},output:{text:function(t){notebook.write(t);},element:function(tag){var id=HtmlUtils.getUniqueId();notebook.write(HtmlUtils.tag(tag,["id",id]));return document.getElementById(id);}},};var notebook;function NotebookState(cell,div){this.id=HtmlUtils.getUniqueId();this.cell=cell;this.notebook=cell.notebook;$.extend(this,{entries:{},div:div,stopFlag:false,result:null,log:function(msg,type,from){this.getNotebook().log(msg,type,from,this.div);},clearConsole:function(){this.getNotebook().clearConsole();},getStop:function(){return this.stopFlag;},getCell:function(){return this.cell;},addGlobal:async function(name,value){await this.getNotebook().addGlobal(name,value);},globalChanged:async function(name,value){await this.getNotebook().globalChanged(name,value);},setValue:function(name,value){this.notebook.setCellValue(name,value);},makeData:async function(entry){if(!entry)
await this.getCurrentEntry(e=>entry=e);if((typeof entry)=="string"){await this.notebook.getEntry(entry,e=>entry=e);}
var jsonUrl=this.notebook.getPointUrl(entry);if(jsonUrl==null){this.writeError("Not a point type:"+entry.getName());return null;}
var pointDataProps={entry:entry,entryId:entry.getId()};return new PointData(entry.getName(),null,null,jsonUrl,pointDataProps);},log:function(msg,type){this.getNotebook().log(msg,type,"js");},getNotebook:function(){return this.notebook;},save:function(output){this.notebook.saveNotebook(output);return"notebook saved";},clearEntries:function(){this.clearEntries();},ls:async function(entry){var div=new Div();if(!entry)
await this.getCurrentEntry(e=>entry=e);this.call.getEntryHeading(entry,div);this.write(div.toString());},lsEntries:function(){var h="";var entries=this.currentEntries;for(var name in entries){var e=entries[name];h+=name+"="+e.entry.getName()+"<br>";}
this.write(h);},stop:function(){this.stopFlag=true;},setGlobal:async function(name,value){await this.cell.notebook.addGlobal(name,value);},setEntry:function(name,entryId){this.cell.notebook.addEntry(name,entryId);},getEntry:async function(entryId,callback){await this.cell.notebook.getEntry(e=>entry=e);return Utils.call(callback,entry);},wiki:async function(s,entry,callback){if(!callback){var wdiv=new Div();this.div.append(wdiv.toString());callback=h=>wdiv.append(h);}
if(entry==null)
await this.cell.getCurrentEntry(e=>entry=e);if((typeof entry)!="string")entry=entry.getId();await GuiUtils.loadHtml(ramaddaBaseUrl+"/wikify?doImports=false&entryid="+entry+"&text="+encodeURIComponent(s),callback);},addOutputRenderer:function(renderer){this.getNotebook().addOutputRenderer(renderer);},addOutputHandler:function(renderer){this.getNotebook().addOutputRenderer(renderer);},output:{text:function(t){notebook.write(t);},element:function(tag){var id=HtmlUtils.getUniqueId();notebook.write(HtmlUtils.tag(tag,["id",id]));return document.getElementById(id);}},clearOutput:function(){this.cell.clearOutput();},clearAllOutput:function(){this.getNotebook().clearOutput();},write:function(value,clear){if(!value)return;var s=this.getNotebook().formatOutput(value);if(s==null&&(typeof value)=="object"){s=this.notebook.formatObject(value);}
if(clear)
this.div.set(s);else
this.div.append(s);},linechart:async function(entry,props){if(!entry)
await this.cell.getCurrentEntry(e=>entry=e);this.cell.createDisplay(this,entry,DISPLAY_LINECHART,props);},});}
var notebookStates={};function RamaddaNotebookCell(notebook,id,content,props){this.notebook=notebook;var ID_CELL="cell";var ID_HEADER="header";var ID_CELLNAME="cellname";var ID_INPUT="input";var ID_INPUT_TOOLBAR="inputtoolbar";var ID_OUTPUT="output";var ID_MESSAGE="message";var ID_BUTTON_MENU="menubutton";var ID_BUTTON_RUN="runbutton";var ID_BUTTON_TOGGLE="togglebutton";var ID_MENU="menu";var ID_CELLNAME_INPUT="cellnameinput";var ID_SHOWHEADER_INPUT="showheader";var ID_SHOWEDIT="showedit";var ID_RUN_ON_LOAD="runonload";var ID_DISPLAY_MODE="displaymode";var ID_LAYOUT_TYPE="layouttype";var ID_SHOWCONSOLE="showconsole";var ID_LAYOUT_COLUMNS="layoutcolumns";var ID_RUNFIRST="runfirst";var ID_SHOW_OUTPUT="showoutput";var ID_RUN_ICON="runningicon";let SUPER=new DisplayThing(id,{});RamaddaUtil.inherit(this,SUPER);RamaddaUtil.defineMembers(this,{id:id,inputRows:1,index:0,content:content,outputHtml:"",showInput:false,showHeader:false,cellName:"",runFirst:false,showOutput:true,});if(props){$.extend(this,props);}
RamaddaUtil.defineMembers(this,{getJson:function(output){var obj={id:this.id,inputRows:this.inputRows,content:this.getInputText(),showInput:this.showInput,showHeader:this.showHeader,runFirst:this.runFirst,showOutput:this.showOutput,cellName:this.cellName,};if(this.currentEntry)
obj.currentEntryId=this.currentEntry.getId();if(output)
obj.outputHtml=this.outputHtml;return obj;},createCell:function(){if(this.content==null){this.content="%% wiki";}
this.editId=addHandler(this);addHandler(this,this.editId+"_entryid");addHandler(this,this.editId+"_wikilink");var _this=this;var buttons=this.makeButton(ID_BUTTON_MENU,icon_menu,"Show menu","showmenu")+
this.makeButton(ID_BUTTON_RUN,Utils.getIcon("run.png"),"Run this cell","run")+
this.makeButton(ID_BUTTON_RUN,Utils.getIcon("runall.png"),"Run all","runall");var runIcon=HtmlUtils.image(icon_blank,["align","right","id",this.getDomId(ID_RUN_ICON),"style","padding-bottom:2px;padding-top:2px;padding-right:5px;"]);buttons=buttons+"&nbsp;"+HtmlUtils.span(["id",this.getDomId(ID_CELLNAME)],this.cellName);buttons+=runIcon;var header=HtmlUtils.div([ATTR_CLASS,"display-notebook-header",ATTR_ID,this.getDomId(ID_HEADER),"tabindex","0","title","Click to toggle input\nShift-click to clear output"],"&nbsp;"+buttons);var content="";var lines=this.content.split("\n");var inMeta=false;for(var i=0;i<lines.length;i++){var line=lines[i];var _line=line.trim();if(_line.startsWith("%%")){if(_line.match(/^%% *meta/)){inMeta=true;}else{inMeta=false;}}
if(!inMeta){content+=line+"\n";}}
content=content.replace(/</g,"&lt;").replace(/>/g,"&gt;");var input=HtmlUtils.div([ATTR_CLASS,"display-notebook-input ace_editor",ATTR_ID,this.getDomId(ID_INPUT),"title","shift-return: run chunk\nctrl-return: run to end"],content);var inputToolbar=HtmlUtils.div(["id",this.getDomId(ID_INPUT_TOOLBAR)],"");input=HtmlUtils.div(["class","display-notebook-input-container"],inputToolbar+input);var output=HtmlUtils.div([ATTR_CLASS,"display-notebook-output",ATTR_ID,this.getDomId(ID_OUTPUT)],this.outputHtml);output=HtmlUtils.div(["class","display-notebook-output-container"],output);var menu=HtmlUtils.div(["id",this.getDomId(ID_MENU),"class","ramadda-popup"],"");var html=header+input;html=HtmlUtils.div(["id",this.getDomId(ID_CELL)],html);$("#"+this.id+"_cellinput").html(html);$("#"+this.id+"_celloutput").html(output);var url=ramaddaBaseUrl+"/wikitoolbar?entryid="+this.entryId+"&handler="+this.editId;url+="&extrahelp="+ramaddaBaseUrl+"/userguide/notebook.html|Notebook Help";GuiUtils.loadHtml(url,h=>{this.inputToolbar=h;this.jq(ID_INPUT_TOOLBAR).html(h);$("#"+this.editId+"_prefix").html(HtmlUtils.span(["id",this.getDomId("toolbar_notebook"),"style","border-right:1px #ccc solid;","class","ramadda-menubar-button"],"Notebook"));this.jq("toolbar_notebook").click(()=>this.showNotebookMenu());});this.header=this.jq(ID_HEADER);this.header.click((e)=>{if(e.shiftKey)
this.processCommand("clear");else{this.hidePopup();this.processCommand("toggle");}});this.editor=HtmlUtils.initAceEditor("",this.getDomId(ID_INPUT),false,{maxLines:30,minLines:5});this.editor.getSession().on('change',()=>{this.inputChanged();});this.menuButton=this.jq(ID_BUTTON_MENU);this.toggleButton=this.jq(ID_BUTTON_TOGGLE);this.cell=this.jq(ID_CELL);this.input=this.jq(ID_INPUT);this.output=this.jq(ID_OUTPUT);this.inputContainer=this.cell.find(".display-notebook-input-container");this.inputMenu=this.cell.find(".display-notebook-input-container");this.applyStyle();this.header.find(".display-notebook-menu-button").click(function(e){_this.processCommand($(this).attr("what"));e.stopPropagation();});this.calculateInputHeight();this.input.focus(()=>this.hidePopup());this.input.click(()=>this.hidePopup());this.output.click(()=>this.hidePopup());this.input.on('input selectionchange propertychange',()=>this.calculateInputHeight());var moveFunc=(e)=>{var key=e.key;if(key=='v'&&e.ctrlKey){this.notebook.moveCellDown(_this);return;}
if(key==6&&e.ctrlKey){this.notebook.moveCellUp(_this);return;}};this.input.keydown(moveFunc);this.header.keydown(moveFunc);this.input.keydown(function(e){var key=e.key;if(key=='s'&&e.ctrlKey){_this.notebook.saveNotebook(false);return;}
if(key=='Enter'){if(e.shiftKey||e.ctrlKey){if(e.preventDefault){e.preventDefault();}
if(e.shiftKey&&e.ctrlKey){_this.run(null);}else{_this.run(null,{justCurrent:true,toEnd:e.ctrlKey});if(!e.ctrlKey){_this.stepToNextChunk();}}}}});},selectClick(type,id,entryId,value){if(type=="entryid"){this.insertText(entryId);}else{this.insertText("[["+entryId+"|"+value+"]]");}
this.input.focus();},insertTags:function(tagOpen,tagClose,sampleText){var id=this.getDomId(ID_INPUT);var textComp=GuiUtils.getDomObject(id);insertTagsInner(id,textComp.obj,tagOpen,tagClose,sampleText);this.calculateInputHeight();},insertText:function(value){var id=this.getDomId(ID_INPUT);var textComp=GuiUtils.getDomObject(id);insertAtCursor(id,textComp.obj,value);this.calculateInputHeight();},showNotebookMenu:function(){var link=this.jq("toolbar_notebook");this.makeMenu(link,"left bottom");},makeButton:function(id,icon,title,command){if(!command)command="noop";return HtmlUtils.div(["what",command,"title",title,"class","display-notebook-menu-button","id",this.getDomId(id)],HtmlUtils.image(icon,[]));},makeMenu:function(src,at){if(!src){src=this.input;}
if(!src.is(":visible")){src=this.header;}
if(!src.is(":visible")){src=this.output;}
if(!at)at="left top";let _this=this;var space="&nbsp;&nbsp;";var line="<div style='border-top:1px #ccc solid;margin-top:4px;margin-bottom:4px;'></div>"
var menu="";menu+=HtmlUtils.input(ID_CELLNAME_INPUT,_this.cellName,["placeholder","Cell name","style","width:100%;","id",_this.getDomId(ID_CELLNAME_INPUT)]);menu+="<br>";menu+="<table  width=100%> ";menu+="<tr><td align=right><b>New cell:</b>&nbsp;</td><td>";menu+=HtmlUtils.div(["class","ramadda-link","what","newabove"],"Above")+space;menu+=HtmlUtils.div(["class","ramadda-link","what","newbelow"],"Below");menu+="</td></tr>"
menu+="<tr><td align=right><b>Move:</b>&nbsp;</td><td>";menu+=HtmlUtils.div(["title","ctrl-^","class","ramadda-link","what","moveup"],"Up")+space;menu+=HtmlUtils.div(["title","ctrl-v","class","ramadda-link","what","movedown"],"Down");menu+="</td></tr>"
menu+="</table>";menu+=line;menu+=HtmlUtils.div(["title","ctrl-return","class","ramadda-link","what","hideall"],"Hide all inputs");menu+="<br>"
menu+=HtmlUtils.div(["class","ramadda-link","what","clearall"],"Clear all outputs");menu+="<br>";var cols=this.notebook.columns;var colId=_this.getDomId(ID_LAYOUT_COLUMNS);menu+="<b>Layout:</b> ";menu+=HtmlUtils.checkbox(_this.getDomId(ID_LAYOUT_TYPE),[],_this.notebook.layout=="horizontal")+" Horizontal"+"<br>";menu+=line;menu+=HtmlUtils.checkbox(_this.getDomId(ID_SHOW_OUTPUT),[],_this.showOutput)+" Output enabled"+"<br>";menu+=HtmlUtils.checkbox(_this.getDomId(ID_SHOWCONSOLE),[],_this.notebook.showConsole)+" Show console"+"<br>";menu+=HtmlUtils.checkbox(_this.getDomId(ID_RUNFIRST),[],_this.runFirst)+" Run first"+"<br>";menu+=HtmlUtils.checkbox(_this.getDomId(ID_RUN_ON_LOAD),[],_this.notebook.runOnLoad)+" Run on load"+"<br>";menu+=HtmlUtils.div(["title","Don't show the left side and input for anonymous users"],HtmlUtils.checkbox(_this.getDomId(ID_DISPLAY_MODE),[],_this.notebook.displayMode)+" Display mode"+"<br>");menu+=line;menu+=HtmlUtils.div(["class","ramadda-link","what","savewithout"],"Save notebook")+"<br>";menu+=line;menu+=HtmlUtils.div(["class","ramadda-link","what","delete"],"Delete cell")+"<br>";menu+=HtmlUtils.div(["class","ramadda-link","what","help"],"Help")+"<br>";menu=HtmlUtils.div(["class","display-notebook-menu"],menu);var popup=this.getPopup();this.dialogShown=true;popup.html(HtmlUtils.div(["class","ramadda-popup-inner"],menu));popup.show();popup.position({of:src,my:"left top",at:at,collision:"fit fit"});_this.jq(ID_SHOWHEADER_INPUT).focus();_this.jq(ID_SHOWCONSOLE).change(function(e){_this.notebook.showConsole=_this.jq(ID_SHOWCONSOLE).is(':checked');_this.hidePopup();_this.notebook.layoutCells();});_this.jq(ID_SHOWHEADER_INPUT).change(function(e){_this.showHeader=_this.jq(ID_SHOWHEADER_INPUT).is(':checked');_this.applyStyle();});_this.jq(ID_RUNFIRST).change(function(e){_this.runFirst=_this.jq(ID_RUNFIRST).is(':checked');});_this.jq(ID_SHOW_OUTPUT).change(function(e){_this.showOutput=_this.jq(ID_SHOW_OUTPUT).is(':checked');_this.applyStyle();});_this.jq(ID_RUN_ON_LOAD).change(function(e){_this.notebook.runOnLoad=_this.jq(ID_RUN_ON_LOAD).is(':checked');});_this.jq(ID_DISPLAY_MODE).change(function(e){_this.notebook.displayMode=_this.jq(ID_DISPLAY_MODE).is(':checked');});_this.jq(ID_SHOWEDIT).change(function(e){_this.showInput=_this.jq(ID_SHOWEDIT).is(':checked');_this.applyStyle();});_this.jq(ID_LAYOUT_TYPE).change(function(e){if(_this.jq(ID_LAYOUT_TYPE).is(':checked')){_this.notebook.layout="horizontal";}else{_this.notebook.layout="vertical";}
_this.hidePopup();_this.notebook.layoutCells();});_this.jq(ID_LAYOUT_COLUMNS).keypress(function(e){var keyCode=e.keyCode||e.which;if(keyCode!=13){return;}
var cols=parseInt(_this.jq(ID_LAYOUT_COLUMNS).val());if(isNaN(cols)){_this.jq(ID_LAYOUT_COLUMNS).val("bad:"+_this.jq(ID_LAYOUT_COLUMNS).val());return;}
_this.hidePopup();});_this.jq(ID_CELLNAME_INPUT).keypress(function(e){var keyCode=e.keyCode||e.which;if(keyCode==13){_this.hidePopup();return;}});popup.find(".ramadda-link").click(function(){var what=$(this).attr("what");_this.processCommand(what);});},hidePopup:function(){var popup=this.getPopup();if(popup&&this.dialogShown){var cols=parseInt(this.jq(ID_LAYOUT_COLUMNS).val());this.cellName=this.jq(ID_CELLNAME_INPUT).val();this.jq(ID_CELLNAME).html(this.cellName);popup.hide();this.applyStyle();if(!isNaN(cols)&&this.notebook.columns!=cols){this.notebook.columns=cols;this.notebook.layoutCells();}}
this.dialogShown=false;},processCommand:function(command){if(command=="showmenu"){this.makeMenu();return;}else if(command=="toggle"){this.showInput=!this.showInput;this.applyStyle(true);}else if(command=="showthis"){this.showInput=true;this.applyStyle();}else if(command=="hidethis"){this.showInput=false;this.applyStyle();}else if(command=="showall"){this.notebook.toggleAll(true);}else if(command=="hideall"){this.notebook.toggleAll(false);}else if(command=="run"){this.notebook.runCell(this);}else if(command=="runall"){this.notebook.runAll();}else if(command=="clear"){this.clearOutput();}else if(command=="clearall"){this.notebook.clearOutput();}else if(command=="moveup"){this.notebook.moveCellUp(this);}else if(command=="movedown"){this.notebook.moveCellDown(this);}else if(command=="newabove"){this.notebook.newCellAbove(this);}else if(command=="newbelow"){this.notebook.newCellBelow(this);}else if(command=="savewith"){this.notebook.saveNotebook(true);}else if(command=="savewithout"){this.notebook.saveNotebook(false);}else if(command=="help"){var win=window.open(ramaddaBaseUrl+"/userguide/notebook.html",'_blank');win.focus();}else if(command=="delete"){this.askDelete();return;}else{console.log("unknown command:"+command);}
this.hidePopup();},shouldShowInput:function(){return this.showInput&&this.notebook.showInput();},applyStyle:function(fromUser){if(this.shouldShowInput()){this.jq(ID_INPUT_TOOLBAR).css("display","block");this.inputContainer.show(400,()=>this.editor.resize());this.showHeader=true;}else{this.jq(ID_INPUT_TOOLBAR).css("display","none");this.inputContainer.hide(fromUser?200:0);this.showHeader=false;}
this.showHeader=this.notebook.showInput();if(this.showHeader){this.header.css("display","block");}else{this.header.css("display","none");}
if(this.showOutput){this.output.css("display","block");}else{this.output.css("display","none");}},getPopup:function(){return this.notebook.getPopup();},askDelete:function(){let _this=this;var menu="";menu+="Are you sure you want to delete this cell?<br>";menu+=HtmlUtils.span(["class","ramadda-link","what","yes"],"Yes");menu+=HtmlUtils.span(["style","margin-left:50px;","class","ramadda-link","what","cancel"],"No");var popup=this.getPopup();popup.html(HtmlUtils.div(["class","ramadda-popup-inner"],menu));popup.show();var src=this.input;if(!src.is(":visible")){src=this.output;}
if(!src.is(":visible")){src=this.header;}
popup.position({of:src,my:"left top",at:"left top",collision:"fit fit"});popup.find(".ramadda-link").click(function(){var what=$(this).attr("what");_this.hidePopup();if(what=="yes"){_this.notebook.deleteCell(_this);}});},inputChanged:function(){var value=this.getInputText();var lines=value.split("\n");var cursor=this.editor.getCursorPosition();for(var i=cursor.row;i>=0;i--){var line=lines[i].trim();if(line.startsWith("%%")){var type=line.substring(2).trim();if(type.startsWith("md")||type.startsWith("html")||type.startsWith("css")||type.startsWith("raw")){var doRows={};doRows[i]=true;this.runInner(value,doRows);}
break;}}},stepToNextChunk:function(){var value=this.getInputText();var lines=value.split("\n");var cursor=this.editor.getCursorPosition();for(var i=cursor.row+1;i<lines.length;i++){if(lines[i].trim().startsWith("%%")){var ll=lines[i].length;this.editor.selection.moveTo(i,ll);this.editor.scrollToLine(i,true,true,function(){});break;}}},run:async function(callback,args){if(!args)args={};var justCurrent=args.justCurrent;var toEnd=args.toEnd;var doingAll=args.doingAll;if(this.running)return Utils.call(callback,true);this.running=true;var doRows=null;try{var ok=true;var value=this.getInputText();if(justCurrent){doRows={};var cursor=this.editor.getCursorPosition();var row=cursor.row;var lines=value.split("\n");var percentCnt=0;if(toEnd){justCurrent=false;while(row>=0){if(lines[row].trim().startsWith("%%")){break;}
row--;}
if(row<0)row=0;while(row<lines.length){doRows[row]=true;row++;}}else{row++;while(row<lines.length){if(lines[row].trim().startsWith("%%")){row--;break;}
row++;}
if(row>=lines.length)row=lines.length-1;while(row>=0){var line=lines[row].trim();doRows[row]=true;if(line.startsWith("%%"))break;row--;}}}
this.jq(ID_RUN_ICON).attr("src",icon_progress);await this.runInner(value,doRows,doingAll).then(r=>ok=r);this.jq(ID_RUN_ICON).attr("src",icon_blank);if(!ok){this.running=false;return Utils.call(callback,false);}
this.outputUpdated();}catch(e){this.jq(ID_RUN_ICON).attr("src",icon_blank);this.running=false;this.writeOutput("An error occurred:"+e.toString()+" "+(typeof e));console.log("error:"+e.toString());if(e.stack)
console.log(e.stack);return Utils.call(callback,false);}
this.running=false;return Utils.call(callback,true);},prepareToLayout:function(){this.content=this.getInputText();},getInputText:function(){if(!this.editor)return this.content;return this.editor.getValue();},globalChanged:async function(name,value){for(var i=0;i<this.chunks.length;i++){var chunk=this.chunks[i];if(chunk.hasRun)continue;if(chunk.depends.includes(name)){var ok=true;await this.runChunk(chunk,r=>ok=r);if(!ok)break;}}},prepareToRun:function(){this.hasRun=false;if(this.chunks){this.chunks.map(chunk=>chunk.hasRun=false);}},runInner:async function(value,doRows,doingAll){value=value.trim();value=value.replace(/{cellname}/g,this.cellName);value=this.notebook.convertInput(value);if(!this.chunks)this.chunks=[];var chunks=this.chunks;var type="wiki";var rest="";var commands=value.split("\n");var prevChunk=null;var chunkCnt=0;var _cell=this;var getChunk=(cell,type,content,doChunk,rest)=>{var props=Utils.parseAttributes(rest);props.type=type;props.doChunk=doChunk;props.content=content;var chunk=(chunkCnt<chunks.length?chunks[chunkCnt]:null);chunkCnt++;if(chunk){if(chunk.div.jq().length==0){chunk=null;}else{}}else{}
if(!chunk){chunk=new NotebookChunk(cell,props);chunks.push(chunk);if(!chunk.skipOutput){if(prevChunk)prevChunk.div.jq().after(chunk.div.toString());else cell.output.html(chunk.div.toString());}}else{chunk.initChunk(props);}
prevChunk=chunk;chunk.div.jq().show();return chunk;};var content="";var doChunk=true;for(var rowIdx=0;rowIdx<commands.length;rowIdx++){var command=commands[rowIdx];var _command=command.trim();if(_command.startsWith("//"))continue;if(_command.startsWith("%%")){var newRest=_command.substring(2).trim();var newType;var index=newRest.indexOf(" ");if(index<0){newType=newRest;newRest="";}else{newType=newRest.substring(0,index).trim();newRest=newRest.substring(index);}
if(content!=""){getChunk(this,type,content,doChunk,rest);}
doChunk=doRows?doRows[rowIdx]:true;content="";if(content!="")content+="\n";if(newType!="")
type=newType;rest=newRest;continue;}
content=content+command+"\n";}
if(content!=""){getChunk(this,type,content,doChunk,rest);}
this.chunkMap={};for(var i=0;i<this.chunks.length;i++){var chunk=this.chunks[i];if(chunk.name){this.chunkMap[chunk.name]=chunk;}}
for(var i=chunkCnt;i<this.chunks.length;i++){this.chunks[i].div.jq().hide();}
this.rawOutput="";var ok=true;await this.runChunks(this.chunks,doingAll,true,r=>ok=r);if(!ok)return false;await this.runChunks(this.chunks,doingAll,false,r=>ok=r);if(!ok)return false;Utils.initContent("#"+this.getDomId(ID_OUTPUT));return true;},runChunks:async function(chunks,doingAll,justFirst,callback){for(var i=0;i<chunks.length;i++){var chunk=chunks[i];var ok=true;if(justFirst===true&&!chunk.props["runfirst"]){continue;}
if(justFirst===false&&chunk.props["runfirst"]===true){continue;}
if(doingAll&&chunk.props["skiprunall"]===true){continue;}
if(!chunk.doChunk){continue;}
await this.runChunk(chunk,(r=>ok=r));if(!ok)return Utils.call(callback,false);}
return Utils.call(callback,true);},runChunk:async function(chunk,callback){if(chunk.hasRun){return Utils.call(callback,true);}
chunk.ok=true;chunk.div.set("");chunk.hasRun=true;for(var i=0;i<chunk.depends.length;i++){var name=chunk.depends[i];if(this.chunkMap[name]&&!this.chunkMap[name].hasRun){var ok=true;var otherChunk=this.chunkMap[name];await this.runChunk(otherChunk,false,null,(r=>ok=r));if(!ok||!otherChunk.ok){return Utils.call(callback,false);}}}
await this.processChunk(chunk);if(!chunk.ok){Utils.call(callback,false);return;}
if(chunk.name&&(typeof chunk.name=="string")){var name=chunk.name.trim();if(chunk.output){if(name!=""){await this.notebook.addGlobal(name,chunk.output);}}else{await this.notebook.addGlobal(name,null);}}
return Utils.call(callback,true);},writeOutput:function(h){if(!this.output){err=new Error();console.log("no output:"+err.stack);return;}
this.output.html(h);this.outputUpdated();},outputUpdated:function(){this.outputHtml=this.jq(ID_OUTPUT).html();},getRawOutput:function(){return this.rawOutput;},focus:function(){this.input.focus();},clearOutput:function(){if(this.chunks)
this.chunks.map(chunk=>chunk.div.set(""));this.outputHtml="";},processHtml:async function(chunk){var content=chunk.getContent();if(content.match("%\n*$")){content=content.trim();content=content.substring(0,content.length-1);}
this.rawOutput+=content+"\n";chunk.output=content;chunk.div.set(content);},processCss:async function(chunk){var css=HtmlUtils.tag("style",["type","text/css"],chunk.getContent());this.rawOutput+=css+"\n";chunk.output=css;chunk.div.set(css);},handleError:function(chunk,error,from){chunk.ok=false;console.log("An error occurred:"+error);this.notebook.log(error,"error",from,chunk.div);},getFetchUrl:async function(url,type,callback){url=Utils.replaceRoot(url);if(url.match(/^[a-z0-9]+-[a-z0-9].*/)){return Utils.call(callback,ramaddaBaseUrl+"/entry/get?entryid="+url);}else{if(!url.startsWith("http")){if((url.startsWith("/")&&!url.startsWith(ramaddaBaseUrl))||url.startsWith("..")||!url.startsWith("/")){var entry;await this.getEntryFromPath(url,e=>entry=e);if(!entry){return Utils.call(callback,null);}
return Utils.call(callback,ramaddaBaseUrl+"/entry/get?entryid="+entry.getId());}}
return Utils.call(callback,url);}},processFetch:async function(chunk){var lines=chunk.getContent().split("\n");for(var i=0;i<lines.length;i++){var line=lines[i].trim();if(line=="")continue;var origLine=line;var error=null;var msgExtra="";var idx=line.indexOf(":");if(idx<0){this.handleError(chunk,"Bad fetch line:"+line,"io");return;}
var tag=line.substring(0,idx);line=line.substring(idx+1).trim();var idx=line.indexOf(" //");if(idx>=0){line=line.substring(0,idx).trim();}
var url=null;var variable=null;if(["text","json","blob"].includes(tag)){var args=line.match(/^([a-zA-Z0-9_]+) *= *(.*)$/);if(args){variable=args[1];line=args[2].trim();msgExtra=" (var "+variable+")";}}
await this.getFetchUrl(line,tag,u=>url=u);if(!url){this.handleError(chunk,"Unable to get entry url:"+line,"io");return;}
if(tag=="js"){if(url.match("jquery-.*\\.js"))return;await Utils.importJS(url,()=>{},(jqxhr,settings,exception)=>{error="Error fetching "+origLine+" "+(exception?exception.toString():"");},false);}else if(tag=="css"){await Utils.importCSS(url,null,(jqxhr,settings,exception)=>error="Error fetching "+origLine+" "+exception,true);}else if(tag=="html"){await Utils.doFetch(url,h=>chunk.div.append(h),(jqxhr,settings,exception)=>error="Error fetching "+origLine+" "+exception);}else if(tag=="text"||tag=="json"||tag=="blob"){var isJson=tag=="json";var isBlob=tag=="blob";var results=null;await Utils.doFetch(url,h=>results=h,(jqxhr,settings,err)=>error="Error fetching "+origLine+" error:"+(err?err.toString():""),tag=="blob"?"blob":"text");if(results){if(isJson){if(typeof results=="string")
results=JSON.parse(results);}else if(isBlob){results=new Blob([results],{});}
if(variable){await this.notebook.addGlobal(variable,results);}else{if(isJson){chunk.div.append(Utils.formatJson(results));}else{chunk.div.append(HtmlUtils.pre(["style","max-width:100%;overflow-x:auto;"],results));}}}}else{error="Unknown fetch:"+origLine;}
if(error){this.handleError(chunk,error,"io");return;}else{this.notebook.log("Loaded: "+url+msgExtra,"output","io");}}},processMd:async function(chunk){var content=chunk.getContent();this.rawOutput+=content+"\n";if(content.match("%\n*$")){content=content.trim();content=content.substring(0,content.length-1);}
var o="";var tex=null;var lines=content.split("\n");var texs=[];for(var i=0;i<lines.length;i++){var line=lines[i];var _line=line.trim();if(_line.startsWith("$$")){if(tex!=null){try{var html=katex.renderToString(tex,{throwOnError:true});o+="tex:"+texs.length+":\n";texs.push(html);}catch(e){o+="Error parsing tex:"+e+"<pre>"+tex+"</pre>";}
tex=null;}else{tex="";}}else if(tex!=null){tex+=line+"\n";}else{o+=line+"\n";}}
var converter=new showdown.Converter();var html=converter.makeHtml(o);for(var i=0;i<texs.length;i++){html=html.replace("tex:"+i+":",texs[i]);}
var md=HtmlUtils.div(["class","display-notebook-md"],html);chunk.output=html;chunk.div.set(md);},processPy:async function(chunk){if(!this.notebook.loadedPyodide){chunk.div.set("Loading Python...");await Utils.importJS(ramaddaBaseHtdocs+"/lib/pyodide/pyodide.js");await languagePluginLoader.then(()=>{pyodide.runPython('import sys\nsys.version;');},(e)=>console.log("error:"+e));await pyodide.loadPackage(['numpy','cycler','pytz','matplotlib'])
chunk.div.set("");this.notebook.loadedPyodide=true;}
pyodide.runPython(chunk.getContent());},processPlugin:async function(chunk){var plugin=JSON.parse(chunk.getContent());await this.notebook.addPlugin(plugin,chunk);},processWiki:async function(chunk){this.rawOutput+=chunk.getContent()+"\n";var id=this.notebook.getProperty("entryId","");await this.getCurrentEntry(e=>entry=e);if(entry)id=entry.getId();let _this=this;let divId=HtmlUtils.getUniqueId();var wikiCallback=function(html){var h=HtmlUtils.div(["id",divId,"style"],html);chunk.div.set(h);chunk.output=h;}
var wiki="{{group showMenu=false}}\n"+chunk.getContent();await GuiUtils.loadHtml(ramaddaBaseUrl+"/wikify?doImports=false&entryid="+id+"&text="+encodeURIComponent(chunk.getContent()),wikiCallback);},processSh:async function(chunk){var r="";var lines=chunk.getContent().split("\n");var commands=[];for(var i=0;i<lines.length;i++){var fullLine=lines[i].trim();if(fullLine=="")continue;var cmds=fullLine.split(";");for(var cmdIdx=0;cmdIdx<cmds.length;cmdIdx++){var line=cmds[cmdIdx].trim();if(line==""||line.startsWith("#")||line.startsWith("//"))continue;var toks=line.split(" ");var command=toks[0].trim();var proc=null;var extra=null;if(this["processCommand_"+command]){proc=this["processCommand_"+command];}else{proc=this.processCommand_help;extra="Unknown command: <i>"+command+"</i>";}
var div=new Div("");commands.push({proc:proc,line:line,toks:toks,extra:extra,div:div});r+=div.set("");}}
let _this=this;chunk.div.set(r);var i=0;for(i=0;i<commands.length;i++){var cmd=commands[i];if(cmd.extra){cmd.div.append(extra);}
await cmd.proc.call(_this,cmd.line,cmd.toks,cmd.div,cmd.extra);}},processJs:async function(chunk,state){var lines;var topLines=0;await this.getCurrentEntry(e=>{current=e});if(!notebookStates[state.id]){throw new Error("Null NB:"+state.id);}
try{var notebookEntries=this.notebook.getCurrentEntries();for(name in notebookEntries){state.entries[name]=notebookEntries[name].entry;}
var jsSet="";state.entries["current"]=current;state.entries["parent"]=this.parentEntry;state.entries["base"]=this.notebook.getBaseEntry();state.entries["root"]=this.notebook.getRootEntry();var stateJS="notebookStates['"+state.id+"']";topLines++;jsSet+="var notebook= "+stateJS+";\n";topLines++;for(name in state.entries){var e=state.entries[name];topLines++;jsSet+="var "+name+"= notebook.entries['"+name+"'];\n"}
for(name in this.notebook.cellValues){var clean=name.replace(/ /g,"_").replace(/[^a-zA-Z0-9_]+/g,"_");topLines++;jsSet+="var "+clean+"= notebook.getNotebook().cellValues['"+name+"'];\n";}
for(name in this.notebook.globals){name=name.trim();if(name=="")continue;topLines++;jsSet+="var "+name+"= notebook.getNotebook().getGlobalValue('"+name+"');\n";}
var js=chunk.getContent().trim();lines=js.split("\n");js=jsSet+"\n"+js;var result=eval.call(null,js);if(state.getStop()){chunk.ok=false;}
var html="";if(result!=null){chunk.output=result;var rendered=this.notebook.formatOutput(result);if(rendered!=null){html=rendered;this.rawOutput+=html+"\n";}else{var type=typeof result;if(type!="object"&&type!="function"){html=result;this.rawOutput+=html+"\n";}}}
chunk.div.append(html);}catch(e){chunk.ok=false;var line=lines[e.lineNumber-topLines-1];console.log("Error:"+e.stack);this.notebook.log("Error: "+e.message+"<br>&gt;"+(line?line:""),"error","js",chunk.div);}},processChunk:async function(chunk){var state=new NotebookState(this,chunk.div);window.notebook=state;notebookStates[state.id]=state;if(chunk.type=="html"){await this.processHtml(chunk,state);}else if(chunk.type=="plugin"){await this.processPlugin(chunk,state);}else if(chunk.type=="wiki"){await this.processWiki(chunk,state);}else if(chunk.type=="css"){await this.processCss(chunk,state);}else if(chunk.type=="fetch"){await this.processFetch(chunk,state);}else if(chunk.type=="raw"){var content=chunk.getContent();chunk.output=content;this.rawOutput+=content;}else if(chunk.type=="js"){await this.processJs(chunk,state);}else if(chunk.type=="sh"){await this.processSh(chunk,state);}else if(chunk.type=="meta"){}else if(chunk.type=="md"){await this.processMd(chunk,state);}else if(chunk.type=="py"){await this.processPy(chunk,state);}else{var hasPlugin;await this.notebook.hasPlugin(chunk.type,p=>hasPlugin=p);if(hasPlugin){chunk.div.set("");var result;await this.notebook.processChunkWithPlugin(chunk.type,chunk,r=>result=r);if(result){this.notebook.processPluginOutput(chunk.type,chunk,result);}
return;}
this.notebook.log("Unknown type:"+chunk.type,"error",null,chunk.div);chunk.ok=false;}
delete notebookStates[state.id];if(state.getStop()){chunk.ok=false;}},calculateInputHeight:function(){this.content=this.getInputText();if(!this.content)return;var lines=this.content.split("\n");if(lines.length!=this.inputRows){this.inputRows=lines.length;this.input.attr("rows",Math.max(1,this.inputRows));}},writeStatusMessage:function(v){var msg=this.jq(ID_MESSAGE);if(!v){msg.hide();msg.html("");}else{msg.show();msg.position({of:this.getOutput(),my:"left top",at:"left+4 top+4",collision:"none none"});msg.html(v);}},handleControlKey:function(event){var k=event.which;},getOutput:function(){return this.jq(ID_OUTPUT);},getInput:function(){return this.jq(ID_INPUT);},writeResult:function(html){this.writeStatusMessage(null);html=HtmlUtils.div([ATTR_CLASS,"display-notebook-result"],html);var output=this.jq(ID_OUTPUT);output.append(html);output.animate({scrollTop:output.prop("scrollHeight")},1000);this.currentOutput=output.html();this.currentInput=this.getInputText();},writeError:function(msg){this.writeStatusMessage(msg);},header:function(msg){return HtmlUtils.div([ATTR_CLASS,"display-notebook-header"],msg);},processCommand_help:function(line,toks,div,callback,prefix){if(div==null)div=new Div();var help="";if(prefix!=null)help+=prefix;help+="<pre>pwd, ls, cd</pre>";return div.append(help);},entries:{},selectEntry:function(entryId){var cnt=1;var entries=this.notebook.getCurrentEntries();while(entries["entry"+cnt]){cnt++;}
var id=prompt("Set an ID","entry"+cnt);if(id==null||id.trim()=="")return;this.notebook.addEntry(id,entryId);},setId:function(entryId){var cursor=this.editor.getCursorPosition();this.editor.insert(entryId);},cdEntry:function(entryId){var div=new Div("");this.currentEntry=this.entries[entryId];notebookState.entries["current"]=this.currentEntry;this.output.html(div.toString());this.processCommand_pwd("pwd",[],div);this.outputUpdated();},addToToolbar:function(id,entry,toolbarItems){var call="getHandler('"+id+"').setId('"+entry.getId()+"')";var icon=HtmlUtils.image(ramaddaBaseUrl+"/icons/setid.png",["border",0,ATTR_TITLE,"Set ID in Input"]);toolbarItems.unshift(HtmlUtils.tag(TAG_A,["onclick",call],icon));var call="getHandler('"+id+"').selectEntry('"+entry.getId()+"')";var icon=HtmlUtils.image(ramaddaBaseUrl+"/icons/circle-check.png",["border",0,ATTR_TITLE,"Select Entry"]);toolbarItems.unshift(HtmlUtils.tag(TAG_A,["onclick",call],icon));},getEntryPrefix:function(id,entry){this.entries[entry.getId()]=entry;var call="getHandler('"+id+"').cdEntry('"+entry.getId()+"')";return HtmlUtils.div(["style","padding-right:4px;","title","cd to entry","onclick",call,"class","ramadda-link"],HtmlUtils.image(ramaddaBaseUrl+"/icons/go.png"));},displayEntries:function(entries,div){if(div==null)div=new Div();this.currentEntries=entries;if(entries==null||entries.length==0){return div.msg("No children");}
var handlerId=addHandler(this);var html=this.notebook.getEntriesTree(entries,{handlerId:handlerId,showIndex:false,suffix:"_shell_"+(this.uniqueCnt++)});div.set(HtmlUtils.div(["style","max-height:200px;overflow-y:auto;"],html));this.outputUpdated();},getEntryFromArgs:function(args,dflt){var currentEntries=this.currentEntries;if(currentEntries==null){return dflt;}
for(var i=0;i<args.length;i++){var arg=args[i];if(arg.match("^\d+$")){var index=parseInt(arg);break;}
if(arg=="-entry"){i++;var index=parseInt(args[i])-1;if(index<0||index>=currentEntries){this.writeError("Bad entry index:"+index+" should be between 1 and "+currentEntries.length);return;}
return currentEntries[index];}}
return dflt;},setCurrentEntry:async function(entry){this.currentEntry=entry;this.parentEntry=null;if(this.currentEntry)
await this.currentEntry.getParentEntry(entry=>{this.parentEntry=entry;});},getCurrentEntry:async function(callback){if(this.currentEntry==null){await this.setCurrentEntry(this.notebook.getBaseEntry());}
if(this.currentEntry==null){if(Utils.isDefined(dflt))return dflt;this.rootEntry=new Entry({id:ramaddaBaseEntry,name:"Root",type:"group"});this.currentEntry=this.rootEntry;}
return Utils.call(callback,this.currentEntry);},createDisplay:async function(state,entry,displayType,displayProps){if(!entry)await this.getCurrentEntry(e=>entry=e);if((typeof entry)=="string"){await this.notebook.getEntry(entry,e=>entry=e);}
if(!state.displayManager){var divId=HtmlUtils.getUniqueId();state.div.append(HtmlUtils.div(["id",divId],""));state.displayManager=new DisplayManager(divId,{"showMap":false,"showMenu":false,"showTitle":false,"layoutType":"table","layoutColumns":1,"defaultMapLayer":"osm","entryId":""});}
var divId=HtmlUtils.getUniqueId();state.div.append(HtmlUtils.div(["id",divId],"DIV"));var props={layoutHere:true,divid:divId,showMenu:true,sourceEntry:entry,entryId:entry.getId(),showTitle:true,showDetails:true,title:entry.getName(),};if(displayProps){$.extend(props,displayProps);}
if(!props.data&&displayType!=DISPLAY_ENTRYLIST){var jsonUrl=this.notebook.getPointUrl(entry);if(jsonUrl==null){this.writeError("Not a point type:"+entry.getName());return;}
if(jsonUrl==null){jsonUrl=this.getPointUrl(entry);}
var pointDataProps={entry:entry,entryId:entry.getId()};props.data=new PointData(entry.getName(),null,null,jsonUrl,pointDataProps);}
state.displayManager.createDisplay(displayType,props);},createPointDisplay:async function(toks,displayType){await this.getCurrentEntry(e=>current=e);var entry=this.getEntryFromArgs(toks,currentEntry);var jsonUrl=this.notebook.getPointUrl(entry);if(jsonUrl==null){this.writeError("Not a point type:"+entry.getName());return;}
this.notebook.createDisplay(entry.getId(),displayType,jsonUrl);},processCommand_table:function(line,toks){this.createPointDisplay(toks,DISPLAY_TABLE);},processCommand_linechart:function(line,toks){this.createPointDisplay(toks,DISPLAY_LINECHART);},processCommand_barchart:function(line,toks){this.createPointDisplay(toks,DISPLAY_BARCHART);},processCommand_bartable:function(line,toks){this.createPointDisplay(toks,DISPLAY_BARTABLE);},processCommand_hello:function(line,toks){this.writeResult("Hello, how are you?");},processCommand_scatterplot:function(line,toks){this.createPointDisplay(toks,DISPLAY_SCATTERPLOT)},processCommand_blog:function(line,toks){this.getLayoutManager().publish('blogentry');},getEntryHeading:function(entry,div){var entries=[entry];var handlerId=addHandler(this);var html=this.notebook.getEntriesTree(entries,{handlerId:handlerId,showIndex:false,suffix:"_shell_"+(this.uniqueCnt++)});div.set(HtmlUtils.div(["style","max-height:200px;overflow-y:auto;"],html));return div;},processCommand_pwd:async function(line,toks,div){if(div==null)div=new Div();await this.getCurrentEntry(e=>entry=e);return this.getEntryHeading(entry,div);},processCommand_set:async function(line,toks,div){if(div==null)div=new Div();if(toks.length<2){div.append("Error: usage: set &lt;name&gt; &lt;value&gt;");return;}
var name=toks[1];if(toks.length==2){var v=this.notebook.getGlobalValue(name);if(v){div.append(v);}else{div.append("Unknown: "+name);}}else{var v=Utils.join(toks," ",2);v=v.replace(/\"/g,"");await this.notebook.addGlobal(name,v);}},processCommand_clearEntries:function(line,toks,div){this.notebook.clearEntries();div.set("Entries cleared");},processCommand_printEntries:async function(line,toks,div){var h="";await this.getCurrentEntry(e=>current=e);h+="current"+"="+current.getName()+"<br>";var entries=this.notebook.getCurrentEntries();for(var name in entries){var e=entries[name];h+=name+"="+e.entry.getName()+"<br>";}
if(h=="")h="No entries";div.set(h);},processCommand_echo:async function(line,toks,div){line=line.replace(/^echo */,"");div.set(line);},processCommand_print:async function(line,toks,div){line=line.replace(/^print */,"");div.set(line);},processCommand_info:async function(line,toks,div){await this.getCurrentEntry(e=>entry=e);div.append("current:"+entry.getName()+" id:"+entry.getId()+"<br>");},processCommand_cd:async function(line,toks,div){if(div==null)div=new Div();if(toks.length<=1){await this.setCurrentEntry(this.notebook.getBaseEntry());return;}
var arg=Utils.join(toks," ",1).trim();var entry;await this.getEntryFromPath(arg,e=>entry=e);if(!entry){div.msg("Could not get entry:"+arg);return;}
await this.setCurrentEntry(entry);},getEntryFromPath:async function(arg,callback){var entry;await this.getCurrentEntry(e=>entry=e);if(arg.startsWith("/")){await entry.getRoot(e=>{entry=e});}
var dirs=arg.split("/");for(var i=0;i<dirs.length;i++){var dir=dirs[i];if(dir=="")continue;if(dir==".."){await entry.getParentEntry(e=>{entry=e});if(!entry){break;}}else{await entry.getChildrenEntries(c=>children=c);var child=null;var startsWith=false;var endsWith=false;if(dir.endsWith("*")){dir=dir.substring(0,dir.length-1);startsWith=true;}
if(dir.startsWith("*")){dir=dir.substring(1);endsWith=true;}
for(var childIdx=0;childIdx<children.length;childIdx++){var name=children[childIdx].getName();if(startsWith&&endsWith){if(name.includes(dir)){child=children[childIdx];break;}}else if(startsWith){if(name.startsWith(dir)){child=children[childIdx];break;}}else if(endsWith){if(name.endsWith(dir)){child=children[childIdx];break;}}
if(children[childIdx].getName()==dir){child=children[childIdx];break;}}
if(!child){break;}
entry=child;}}
return Utils.call(callback,entry);},processCommand_ls:async function(line,toks,div){if(div==null)div=new Div();div.set("Listing entries...");await this.getCurrentEntry(e=>entry=e);await entry.getChildrenEntries(children=>{this.displayEntries(children,div)},"");},entryListChanged:function(entryList){var entries=entryList.getEntries();if(entries.length==0){this.writeStatusMessage("Sorry, nothing found");}else{this.displayEntries(entries);}},processCommand_search:async function(line,toks,div){var text="";for(var i=1;i<toks.length;i++)text+=toks[i]+" ";text=text.trim();var settings=new EntrySearchSettings({text:text,});var jsonUrl=this.notebook.getRamadda().getSearchUrl(settings,OUTPUT_JSON);let _this=this;var myCallback={entryListChanged:function(list){var entries=list.getEntries();div.set("");if(entries.length==0){div.append("Nothing found");}else{_this.displayEntries(entries,div)}}};var entryList=new EntryList(this.notebook.getRamadda(),jsonUrl,myCallback,false);div.set("Searching...");await entryList.doSearch();},processCommand_clear:function(line,toks,div){this.clearOutput();},processCommand_save:function(line,toks,div){this.notebook.saveNotebook();},});}
function processLispOutput(r){if(r&&r.val)return r.val;return Utils.formatJson(r);}
function NotebookChunk(cell,props){for(name in props)
props[name.toLowerCase()]=props[name];this.div=new Div(null,"display-notebook-chunk");this.cell=cell;$.extend(this,{getContent:function(){var content=this.content;for(name in this.cell.notebook.globals){var value=this.cell.notebook.getGlobalValue(name);if(typeof value=="object"){value=Utils.formatJson(value);}
content=content.replace("${"+name.trim()+"}",value);}
return content;},initChunk:function(props){this.skipOutput=false;if(props["skipoutput"]===true){this.skipOutput=true;this.div.set("");this.div=new Div();}
var depends=[];if(props["depends"]&&typeof props["depends"]=="string")depends=props["depends"].split(",");var content=props.content||"";var regexp=RegExp(/\${([^ }]+)}/g);while((result=regexp.exec(content))!==null){var param=result[1];if(!depends.includes(param))depends.push(param);}
$.extend(this,{name:props["name"],depends:depends,output:null,runFirst:props["runFirst"],hasRun:false,content:content,type:props.type,props:props,doChunk:!!props.doChunk,ok:true});}});this.initChunk(props);}
var CATEGORY_CHARTS="Charts";var CATEGORY_OTHER="Other Charts";var DISPLAY_LINECHART="linechart";var DISPLAY_AREACHART="areachart";var DISPLAY_BARCHART="barchart";var DISPLAY_BARTABLE="bartable";var DISPLAY_BARSTACK="barstack";var DISPLAY_PIECHART="piechart";var DISPLAY_TIMERANGECHART="timerangechart";var DISPLAY_SANKEY="sankey";var DISPLAY_CALENDAR="calendar";var DISPLAY_SCATTERPLOT="scatterplot";var DISPLAY_HISTOGRAM="histogram";var DISPLAY_BUBBLE="bubble";var DISPLAY_GAUGE="gauge";var DISPLAY_TABLE="table";var DISPLAY_WORDTREE="wordtree";var DISPLAY_TREEMAP="treemap";var ID_CHART="chart";var ID_CHARTS="charts";var ID_CHARTS_INNER="chartsinner";var googleChartsLoaded=false;function googleChartsHaveLoaded(){googleChartsLoaded=true;}
if(window["google"]){google.charts.setOnLoadCallback(googleChartsHaveLoaded);}
function haveGoogleChartsLoaded(){if(!googleChartsLoaded){if(Utils.isDefined(google.visualization)){if(Utils.isDefined(google.visualization.Gauge)){googleChartsLoaded=true;}}}
return googleChartsLoaded;}
function waitOnGoogleCharts(object,callback){if(haveGoogleChartsLoaded()){return true;}
if(!object.googleChartCallbackPending){object.googleChartCallbackPending=true;var func=function(){object.googleChartCallbackPending=false;callback();}
setTimeout(func,100);}
return false;}
addGlobalDisplayType({type:DISPLAY_LINECHART,label:"Line Chart",requiresData:true,forUser:true,category:CATEGORY_CHARTS});addGlobalDisplayType({type:DISPLAY_BARCHART,label:"Bar Chart",requiresData:true,forUser:true,category:CATEGORY_CHARTS});addGlobalDisplayType({type:DISPLAY_BARSTACK,label:"Stacked Bar Chart",requiresData:true,forUser:true,category:CATEGORY_CHARTS});addGlobalDisplayType({type:DISPLAY_AREACHART,label:"Area Chart",requiresData:true,forUser:true,category:CATEGORY_CHARTS});addGlobalDisplayType({type:DISPLAY_BARTABLE,label:"Bar Table",requiresData:true,forUser:true,category:CATEGORY_CHARTS});addGlobalDisplayType({type:DISPLAY_SCATTERPLOT,label:"Scatter Plot",requiresData:true,forUser:true,category:CATEGORY_CHARTS});addGlobalDisplayType({type:DISPLAY_HISTOGRAM,label:"Histogram",requiresData:true,forUser:true,category:CATEGORY_CHARTS});addGlobalDisplayType({type:DISPLAY_BUBBLE,label:"Bubble Chart",requiresData:true,forUser:true,category:CATEGORY_CHARTS});addGlobalDisplayType({type:DISPLAY_PIECHART,label:"Pie Chart",requiresData:true,forUser:true,category:CATEGORY_CHARTS});addGlobalDisplayType({type:DISPLAY_GAUGE,label:"Gauge",requiresData:true,forUser:true,category:CATEGORY_MISC});addGlobalDisplayType({type:DISPLAY_TIMERANGECHART,label:"Timerange",requiresData:true,forUser:true,category:CATEGORY_MISC});addGlobalDisplayType({type:DISPLAY_SANKEY,label:"Sankey Chart",requiresData:true,forUser:true,category:CATEGORY_MISC});addGlobalDisplayType({type:DISPLAY_CALENDAR,label:"Calendar Chart",requiresData:true,forUser:true,category:CATEGORY_MISC});addGlobalDisplayType({type:DISPLAY_TABLE,label:"Table",requiresData:true,forUser:true,category:CATEGORY_MISC});addGlobalDisplayType({type:DISPLAY_WORDTREE,label:"Word Tree",requiresData:true,forUser:true,category:"Text"});addGlobalDisplayType({type:DISPLAY_TREEMAP,label:"Tree Map",requiresData:true,forUser:true,category:CATEGORY_MISC});var PROP_CHART_MIN="chartMin";var PROP_CHART_MAX="chartMax";var DFLT_WIDTH="600px";var DFLT_HEIGHT="200px";function RamaddaGoogleChart(displayManager,id,chartType,properties){var ID_TRENDS_CBX="trends_cbx";var ID_PERCENT_CBX="percent_cbx";var ID_COLORS="colors";var _this=this;$.extend(this,{indexField:-1,curveType:'none',fontSize:0,showPercent:false,percentFields:null,});let SUPER=new RamaddaFieldsDisplay(displayManager,id,chartType,properties);RamaddaUtil.inherit(this,SUPER);RamaddaUtil.defineMembers(this,{clearCachedData:function(){SUPER.clearCachedData();this.computedData=null;},getContentsClass:function(){return"display-contents-inner display-"+this.type;},updateUI:function(args){if(!args)args={};let debug=false;SUPER.updateUI.call(this,args);if(debug)
console.log(this.type+" updateUI")
if(!this.getDisplayReady()){if(debug)
console.log("\tdisplay not ready");return;}
if(debug)
console.log("\tcalling displayData");this.displayData(args.reload);},getWikiAttributes:function(attrs){this.defineWikiAttributes(["vAxisMinValue","vAxisMaxValue"]);SUPER.getWikiAttributes.call(this,attrs);if(this.colorList.join(",")!="blue,red,green"){attrs.push("colors");attrs.push(this.getColorList().join(", "));}},initDialog:function(){SUPER.initDialog.call(this);var _this=this;var updateFunc=function(e){if(e&&e.which!=13&&e.which!=0){return;}
_this.vAxisMinValue=Utils.toFloat(_this.jq("vaxismin").val());_this.vAxisMaxValue=Utils.toFloat(_this.jq("vaxismax").val());_this.minDate=_this.jq("mindate").val();_this.maxDate=_this.jq("maxdate").val();_this.displayData();};["vaxismin","vaxismax","mindate","maxdate"].map(f=>{this.jq(f).blur(updateFunc);this.jq(f).keypress(updateFunc);});this.jq(ID_COLORS).keypress(function(e){if(e.which!=13){return;}
var v=_this.jq(ID_COLORS).val();_this.colorList=v.split(",");_this.displayData();var pointData=_this.dataCollection.getList();_this.getDisplayManager().handleEventPointDataLoaded(_this,_this.lastPointData);});this.jq(ID_TRENDS_CBX).click(function(){_this.showTrendLines=_this.jq(ID_TRENDS_CBX).is(':checked');_this.displayData();});this.jq(ID_PERCENT_CBX).click(function(){_this.showPercent=_this.jq(ID_PERCENT_CBX).is(':checked');_this.displayData();});},setColor:function(){var v=prompt("Enter comma separated list of colors to use",this.colorList.join(","));if(v!=null){this.colorList=v.split(",");this.displayData();var pointData=this.dataCollection.getList();this.getDisplayManager().handleEventPointDataLoaded(this,this.lastPointData);}},getVAxisMinValue:function(){return parseFloat(this.getProperty("vAxisMinValue",NaN));},getVAxisMaxValue:function(){return parseFloat(this.getProperty("vAxisMaxValue",NaN));},getHAxisMinValue:function(){return parseFloat(this.getProperty("hAxisMinValue",NaN));},getHAxisMaxValue:function(){return parseFloat(this.getProperty("hAxisMaxValue",NaN));},getMenuItems:function(menuItems){SUPER.getMenuItems.call(this,menuItems);var get=this.getGet();var min="0";if(!isNaN(this.getVAxisMinValue())){min=""+this.getVAxisMinValue();}
var max="";if(!isNaN(this.getVAxisMaxValue())){max=""+this.getVAxisMaxValue();}
var tmp=HU.formTable();tmp+=HU.formEntry("Axis Range:",HU.input("",min,["size","7",ATTR_ID,this.getDomId("vaxismin")])+" - "+
HU.input("",max,["size","7",ATTR_ID,this.getDomId("vaxismax")]));tmp+=HU.formEntry("Date Range:",HU.input("",this.minDate,["size","10",ATTR_ID,this.getDomId("mindate")])+" - "+
HU.input("",this.maxDate,["size","10",ATTR_ID,this.getDomId("maxdate")]));tmp+=HU.formEntry("Colors:",HU.input("",this.getColorList().join(","),["size","35",ATTR_ID,this.getDomId(ID_COLORS)]));tmp+="</table>";menuItems.push(tmp);},getChartType:function(){return this.getType();},askMinZAxis:function(){this.setMinZAxis(prompt("Minimum axis value","0"));},setMinZAxis:function(v){if(v!=null){this.vAxisMinValue=parseFloat(v);this.displayData();}},askMaxZAxis:function(){this.setMaxZAxis(prompt("Maximum axis value","100"));},setMaxZAxis:function(v){if(v!=null){this.vAxisMaxValue=parseFloat(v);this.displayData();}},askMinDate:function(){var ex=this.minDate;if(ex==null||ex==""){ex="1800-01-01";}
var v=prompt("Minimum date",ex);if(v==null)return;this.setMinDate(v);},setMinDate:function(v){this.minDate=v;this.displayData();},askMaxDate:function(){var ex=this.maxDate;if(ex==null||ex==""){ex="2100-01-01";}
var v=prompt("Maximum date",ex);if(v==null)return;this.setMaxDate(v);},setMaxDate:function(v){this.maxDate=v;this.displayData();},trendLineEnabled:function(){return false;},getDialogContents:function(tabTitles,tabContents){var height="600";var html=HU.div([ATTR_ID,this.getDomId(ID_FIELDS),STYLE,HU.css('overflow-y','auto','max-height',height+"px")]," FIELDS ");if(this.trendLineEnabled()){html+=HU.div([ATTR_CLASS,"display-dialog-subheader"],"Other");html+=HU.checkbox(this.getDomId(ID_TRENDS_CBX),[],this.getProperty("showTrendLines",false))+"  "+"Show trend line";html+=" ";html+=HU.checkbox(this.getDomId(ID_PERCENT_CBX),[],this.showPercent)+"  "+"Show percent of displayed total"+"<br>";html+="<br>";}
tabTitles.push("Fields");tabContents.push(html);SUPER.RamaddaDisplay.getDialogContents.call(this,tabTitles,tabContents);},okToHandleEventRecordSelection:function(){return true;},handleEventRecordHighlight:function(source,args){this.handleEventRecordSelection(source,args);},handleEventRecordSelection:function(source,args){if(source==this){return;}
if(!this.okToHandleEventRecordSelection()){return;}
var index=this.findMatchingIndex(args.record);if(index<0||!Utils.isDefined(index)){return;}
this.setChartSelection(index);},getFieldsToSelect:function(pointData){return pointData.getRecordFields();},canDoGroupBy:function(){return false;},clearCache:function(){this.computedData=null;},googleChartCallbackPending:false,includeIndexInData:function(){return false;},getGroupBy:function(){return this.getProperty("groupByField");},getIncludeIndexIfDate:function(){return false;},makeIndexValue:function(indexField,value,offset){if(indexField.isString()){value={v:offset,f:value};}
return value;},displayData:function(reload){let debug=false;if(debug)
console.log(this.type+" displayData "+this.getId()+" "+this.type);let isExpanded=this.jq(ID_CHART).attr("isexpanded");let originalHeight=this.jq(ID_CHART).attr("original-height");if(isExpanded==="true"){this.setProperty("expandedHeight",this.jq(ID_CHART).css("height"));this.setProperty("isExpanded",true);this.setProperty("originalHeight",originalHeight);}else{this.setProperty("expandedHeight",null);this.setProperty("isExpanded",false);this.setProperty("originalHeight",null);}
if(!this.getDisplayReady()){if(debug)
console.log("\tdisplay not ready");return;}
if(this.inError){if(debug)
console.log("\tin error");return;}
if(!haveGoogleChartsLoaded()){if(debug)
console.log("\tgoogle charts have not loaded callback pending:"+this.googleChartCallbackPending);if(!this.googleChartCallbackPending){this.googleChartCallbackPending=true;this.setContents(this.getLoadingMessage());setTimeout(()=>{this.googleChartCallbackPending=false;this.displayData();},10000);}
return;}
if(this.inError){return;}
if(!this.hasData()){this.clearChart();this.setContents(this.getLoadingMessage());return;}
this.setContents(HU.div([ATTR_CLASS,"display-output-message"],"Building display..."));this.allFields=this.dataCollection.getList()[0].getRecordFields();var pointData=this.dataCollection.getList()[0];if(debug)
console.log("\tpointData #records:"+pointData.getRecords().length);var selectedFields=this.getSelectedFields();if(debug)
console.log("\tselectedFields:"+selectedFields);if(selectedFields.length==0&&this.lastSelectedFields!=null){selectedFields=this.lastSelectedFields;if(debug)
console.log("\tusing last selectedFields:"+selectedFields);}
if(selectedFields==null||selectedFields.length==0){if(this.getChartType()==DISPLAY_TABLE||this.getChartType()==DISPLAY_TREEMAP){selectedFields=this.dataCollection.getList()[0].getNonGeoFields();if(debug)
console.log("\tfields from data collection:"+selectedFields);}else{selectedFields=this.getSelectedFields();if(debug)
console.log("\tgetSelectedFields again:"+selectedFields);selectedFields=this.getSelectedFields();if(selectedFields.length==0){this.allFields.every(f=>{if(f.isNumeric()&&!f.isFieldGeo()){selectedFields=[f];return false;}
return true;});}}}
if(selectedFields.length==0){this.setContents("No fields selected");return;}
var tmpFields=[];for(var i=0;i<selectedFields.length;i++){if(!this.shouldSkipField(selectedFields[i])){tmpFields.push(selectedFields[i]);}}
selectedFields=tmpFields;if(debug)
console.log("\tsetting lastSelectedFields:"+selectedFields);this.lastSelectedFields=selectedFields;var props={includeIndex:this.includeIndexInData()};props.groupByIndex=-1;var groupBy=this.getGroupBy();if(groupBy){for(var i=0;i<this.allFields.length;i++){var field=this.allFields[i];if(field.getId()==groupBy){props.groupByIndex=field.getIndex();props.groupByField=field;break;}}}
var fieldsToSelect=selectedFields;if(this.raw){fieldsToSelect=this.dataCollection.getList()[0].getRecordFields();props.raw=true;}
props.includeIndexIfDate=this.getIncludeIndexIfDate();var dataHasIndex=props.includeIndex;let dataList=this.getStandardData(fieldsToSelect,props);if(debug)
console.log(this.type+" fields:"+fieldsToSelect.length+" dataList:"+dataList.length);this.computedData=dataList;if(dataList.length==0&&!this.userHasSelectedAField){var pointData=this.dataCollection.getList()[0];var chartableFields=this.getFieldsToSelect(pointData);for(var i=0;i<chartableFields.length;i++){var field=chartableFields[i];dataList=this.getStandardData([field],props);if(dataList.length>0){this.setSelectedFields([field]);break;}}}
if(dataList.length==0){this.setContents(HU.div([ATTR_CLASS,"display-output-message"],"No data available"));return;}
if(this.showPercent){var newList=[];var isNumber=[];var isOk=[];var headerRow=null;var fields=null;if(this.percentFields!=null){fields=this.percentFields.split(",");}
for(var i=0;i<dataList.length;i++){var row=this.getDataValues(dataList[i]);if(i==0){headerRow=row;continue;}
if(i==1){var seenIndex=false;for(var j=0;j<row.length;j++){var valueIsNumber=(typeof row[j]=="number");var valueIsDate=(typeof row[j]=="object");if(valueIsNumber){if(dataHasIndex&&!seenIndex){valueIsNumber=false;seenIndex=true;}}
if(valueIsDate){seenIndex=true;}
if(valueIsNumber&&fields!=null){valueIsNumber=fields.indexOf(fieldsToSelect[j].getId())>=0||fields.indexOf("#"+(j+1))>=0;}
isNumber.push(valueIsNumber);}
var newHeader=[];for(var j=0;j<headerRow.length;j++){var v=headerRow[j];if(!isNumber[j]){newHeader.push(v);}else{newHeader.push("% "+v);}}
newList.push(newHeader);}
var total=0;var cnt=0;for(var j=0;j<row.length;j++){if(isNumber[j]){total+=parseFloat(row[j]);cnt++;}}
var newRow=[];for(var j=0;j<row.length;j++){if(isNumber[j]){if(total!=0){var v=parseFloat(((row[j]/total)*100).toFixed(1));newRow.push(v);}else{newRow.push(NaN);}}else{newRow.push(row[j]);}}
newList.push(newRow);}
dataList=newList;}
try{this.makeGoogleChart(dataList,props,selectedFields);}catch(e){console.log("Error making chart:\n"+e+"\n"+e.stack);return;}
var container=this.jq(ID_CHART);if(this.jq(ID_CHART).is(':visible')){this.lastWidth=container.width();}else{this.lastWidth=-1;}
if(reload){var pointData=this.getData();if(pointData){let dataList=pointData.getRecords();if(dataList.length>0){let record=dataList[0];this.getDisplayManager().notifyEvent("handleEventRecordSelection",this,{record:record});}}}},printDataList:function(dataList){console.log("data list:"+dataList.length);for(var i=0;i<dataList.length;i++){var row=dataList[i];var s="";for(var j=0;j<row.length;j++){if(j>0)s+=", ";s+=row[j];}
console.log("row: "+i+"  "+s);}},mapCharts:function(func){if(this.charts!=null){this.charts.map(chart=>{func(chart);});}},clearChart:function(){this.mapCharts(chart=>{if(chart.clearChart){chart.clearChart();}});},setChartSelection:function(index){this.mapCharts(chart=>{if(chart.setSelection){chart.setSelection([{row:index,column:null}]);}});},tableHeaderMouseover:function(i,tooltip){},getAddToolTip:function(){return true;},getAddStyle:function(){return true;},getAnnotationTemplate:function(){return this.getProperty("annotationTemplate");},getFormatNumbers:function(){return false;},getDataTableValueGetter:function(){return(v)=>{return v;}},makeDataTable:function(dataList,props,selectedFields){let debug=displayDebug.makeDataTable;let debugRows=3;if(debug)console.log(this.type+" makeDataTable #records"+dataList.length);let maxWidth=this.getProperty("maxFieldLength",this.getProperty("maxFieldWidth",-1));let addTooltip=this.getAddToolTip();let addStyle=this.getAddStyle();let annotationTemplate=this.getAnnotationTemplate();let formatNumbers=this.getFormatNumbers();let valueGetter=this.getDataTableValueGetter();if(dataList.length==1){return google.visualization.arrayToDataTable(this.makeDataArray(dataList));}
var groupField=this.getFieldById(null,this.getProperty("groupBy"));if(groupField){dataList=this.filterData();var groupedData=[];var groupValues=[];var seen={};var cnt=0;var dateToValue={};var dates=[];dataList.map(record=>{if(cnt++==0)return;var values=this.getDataValues(record);var value=values[groupField.getIndex()];if(!seen[value]){seen[value]=true;groupValues.push(value);}
var newValues=dateToValue[record.getDate()];if(!newValues){dates.push(record.getDate());newValues={};dateToValue[record.getDate()]=newValues;}
newValues[value]=values[selectedFields[0].getIndex()];});var data=[];var dataTable=new google.visualization.DataTable();dataTable.addColumn("date","Date");groupValues.map(group=>{dataTable.addColumn("number",group);});dates.map(date=>{var tuple=[date];data.push(tuple);var valueMap=dateToValue[date];groupValues.map(group=>{var value=valueMap[group];tuple.push(value);});});dataTable.addRows(data);return dataTable;}
var justData=[];var tooltipFields=this.getFieldsByIds(null,this.getProperty("tooltipFields",""));var dataTable=new google.visualization.DataTable();var header=this.getDataValues(dataList[0]);var sample=this.getDataValues(dataList[1]);var fixedValueS=this.getProperty("fixedValue");var fixedValueN;if(fixedValueS)fixedValueN=parseFloat(fixedValueS);let fIdx=0;let forceStrings=this.getProperty("forceStrings",false);let maxHeaderLength=this.getProperty("maxHeaderLength",-1);let maxHeaderWidth=this.getProperty("maxHeaderWidth",-1);let headerStyle=this.getProperty("headerStyle");for(var j=0;j<header.length;j++){let field=null;if(j>0||!props.includeIndex){field=selectedFields[fIdx++];}else{}
var value=sample[j];let headerLabel=header[j];if(maxHeaderLength>0&&headerLabel.length>maxHeaderLength){let orig=headerLabel;headerLabel=headerLabel.substring(0,maxHeaderLength-1)+"...";headerLabel=HU.span([TITLE,orig],headerLabel);}
if(maxHeaderWidth>0||headerStyle){let orig=headerLabel;let style="";if(maxHeaderWidth>0)
headerLabel=headerLabel.replace(/ /g,"&nbsp;");if(maxHeaderWidth>0)
style+="max-width:"+maxHeaderWidth+"px;overflow-x:auto;";if(headerStyle)
style+=headerStyle;headerLabel=HU.div([TITLE,orig,STYLE,style],headerLabel);}
if(j==0&&props.includeIndex){if((typeof value)=="object"){if(typeof value.v=="number"){if(forceStrings)
dataTable.addColumn('string',headerLabel);else{dataTable.addColumn('number',headerLabel);}}else{dataTable.addColumn('date',headerLabel);}}else{dataTable.addColumn((typeof value),headerLabel);}}else{if(j>0&&fixedValueS){dataTable.addColumn('number',this.getProperty("fixedValueLabel","Count"));}else{if(field.isString()){dataTable.addColumn('string',headerLabel);}else if(field.isFieldDate()){dataTable.addColumn('date',headerLabel);}else{dataTable.addColumn('number',headerLabel);}}
if(annotationTemplate){dataTable.addColumn({type:'string',role:'annotation','p':{'html':true}});}
if(addStyle){if(debug)
console.log("add style column");dataTable.addColumn({type:'string',role:'style'});}
if(addTooltip){if(debug)
console.log("add tooltip column");dataTable.addColumn({type:'string',role:'tooltip','p':{'html':true}});}
if(j>0&&fixedValueS){break;}}}
if(debug){for(var i=0;i<dataTable.getNumberOfColumns();i++)
console.log("col:"+i+" "+dataTable.getColumnLabel(i)+" "+dataTable.getColumnType(i));}
var annotationLabelField=this.getFieldById(null,this.getProperty("annotationLabelField"));var annotationFields=this.getFieldsByIds(null,this.getProperty("annotationFields"));var annotations=this.getProperty("annotations");if(annotations)annotationFields=[];if(annotationFields.length>0){dataTable.addColumn({type:'string',role:'annotation','p':{'html':true}});dataTable.addColumn({type:'string',role:'annotationText','p':{'html':true}});}
var indexToAnnotation=null;if(annotations){indexToAnnotation={};var annotationsList=[];var annotationsMap={};let legend="";var labelCnt=0;var toks=annotations.split(";");for(var i=0;i<toks.length;i++){var toks2=toks[i].split(",");if(toks2.length<2)continue;var index=toks2[0].trim();var label=toks2[1].trim();if(label==""){labelCnt++;label=""+labelCnt;}
var desc=toks2.length<2?"":toks2[2];var url=toks2.length<3?null:toks2[3];let isDate=false;let dateLabel="";if(index.match(/^[0-9]+$/)){index=parseFloat(index);}else{index=Utils.parseDate(index,false);isDate=true;dateLabel=Utils.formatDateYYYYMMDD(index)+": ";}
var annotation={label:label,description:desc};annotationsList.push(annotation);annotation.index=isDate?index.getTime():index;var legendLabel=desc;if(url!=null){legendLabel=HU.href(url,legendLabel,["target","_annotation"]);}
legend+=HU.b(label)+":"+legendLabel+" ";}
if(this.getProperty("showAnnotationsLegend")){this.jq(ID_LEGEND).html("<table width=100%><tr valign=top><td width=10%></td><td width=90%>"+
HU.div([CLASS,"display-chart-legend"],legend)
+"</td></tr></table>");}
for(var aidx=0;aidx<annotationsList.length;aidx++){var annotation=annotationsList[aidx];var minIndex=null;var minDistance=null;for(var rowIdx=1;rowIdx<dataList.length;rowIdx++){var row=this.getDataValues(dataList[rowIdx]);var index=row[0];if(index.v)index=index.v;if(index.getTime)index=index.getTime();var distance=Math.abs(annotation.index-index);if(minIndex==null){minIndex=rowIdx;minDistance=distance;}else{if(distance<minDistance){minIndex=rowIdx;minDistance=distance;}}}
if(minIndex!=null){indexToAnnotation[minIndex]=annotation;}}}
if(indexToAnnotation){dataTable.addColumn({type:'string',role:'annotation','p':{'html':true}});dataTable.addColumn({type:'string',role:'annotationText','p':{'html':true}});}
var annotationCnt=0;var records=[];for(var i=1;i<dataList.length;i++){records.push(dataList[i].record);}
var colors=this.getColorTable(true);var colorBy=this.getColorByInfo(records);var didColorBy=false;var tuples=[];for(var rowIdx=1;rowIdx<dataList.length;rowIdx++){var record=dataList[rowIdx];var row=this.getDataValues(record);var theRecord=record.record;var color="";if(colorBy.index>=0){var value=theRecord.getData()[colorBy.index];hasColorByValue=true;colorByValue=value;didColorBy=true;color=colorBy.getColorFromRecord(theRecord);}
row=row.slice(0);var label="";if(theRecord){for(var j=0;j<tooltipFields.length;j++){label+="<b>"+tooltipFields[j].getLabel()+"</b>: "+
theRecord.getValue(tooltipFields[j].getIndex())+"<br>";}}
let tooltip="";tooltip+=label;for(let j=0;j<row.length;j++){if(j>0)
tooltip+="<br>";label=header[j].replace(/ /g,"&nbsp;");value=row[j];if(!value)value="NA";if(value&&(typeof value)=="object"){if(value.f){value=value.f;}}
if(Utils.isNumber(value)){value=this.formatNumber(value);}
value=""+value;value=value.replace(/ /g,SPACE);tooltip+=HU.b(label)+":"+SPACE+value;}
var tt=this.getProperty("tooltip");if(tt){tt=this.getRecordHtml(theRecord,null,tt);tt=tt.replace("${default}",tooltip);tooltip=tt;}
tooltip=HU.div([STYLE,HU.css('padding','8px')],tooltip);let newRow=[];if(debug&&rowIdx<debugRows)
console.log("row:");for(var j=0;j<row.length;j++){var value=row[j];if(forceStrings){if(value.f)value=(value.f).toString().replace(/\n/g," ");}
if(j>0&&fixedValueS){newRow.push(valueGetter(fixedValueN,theRecord));if(debug&&rowIdx<debugRows)
console.log("\t fixed:"+fixedValueN);}else{let type=(typeof value);if(type=="number"){if(formatNumbers){value={v:value,f:String(this.formatNumber(value))};}}else if(type=="boolean"){value=String(value);}
if(debug&&rowIdx<debugRows)
console.log("\t value:"+value+" "+(typeof value));if(maxWidth>0&&type=="string"&&value.length>maxWidth)
value=value.substring(0,maxWidth)+"...";newRow.push(valueGetter(value,theRecord));}
if(j==0&&props.includeIndex){}else{if(annotationTemplate){let v=annotationTemplate.replace("${value}",value.f||value);if(debug&&rowIdx<debugRows)
console.log("\t annotation"+v);newRow.push(v);}
if(addStyle){newRow.push(color);if(debug&&rowIdx<debugRows)
console.log("\t color:"+color);}
if(addTooltip){newRow.push(tooltip);if(debug&&rowIdx<debugRows)
console.log("\t tooltip:");}}
if(j>0&&fixedValueS){break;}}
if(annotationFields.length>0){if(theRecord){var desc="";annotationFields.map(f=>{var d=""+theRecord.getValue(f.getIndex());if(d!="")
desc+=(d+"<br>");});desc=desc.trim();desc=desc.replace(/ /g,"&nbsp;");annotationCnt++;var label=null;if(desc.trim().length>0){label=""+(annotationLabelField?theRecord.getValue(annotationLabelField.getIndex()):(annotationCnt))
if(label.trim().length==0)label=""+annotationCnt;}
if(debug&&rowIdx<debugRows){console.log("\t label:"+label);console.log("\t desc:"+desc);}
newRow.push(label);newRow.push(desc);}else{if(i<2)
console.log("No records for annotation");}}
if(indexToAnnotation){var annotation=indexToAnnotation[rowIdx];if(annotation){if(debug&&rowIdx<debugRows){console.log("\t annotation:"+annotation.label);console.log("\t desc:"+annotation.description);}
newRow.push(annotation.label);newRow.push(annotation.description);}else{if(debug&&rowIdx<debugRows){console.log("\t annotation:"+"null");console.log("\t desc:"+"null");}
newRow.push(null);newRow.push(null);}}
justData.push(newRow);}
dataTable.addRows(justData);if(didColorBy){colorBy.displayColorTable();}
return dataTable;},makeChartOptions:function(dataList,props,selectedFields){var chartOptions={tooltip:{isHtml:true},};$.extend(chartOptions,{lineWidth:this.getProperty("lineWidth",1),colors:this.getColorList(),curveType:this.curveType,pointShape:this.getProperty("pointShape"),pointSize:this.getProperty("pointSize"),vAxis:{}});chartOptions.backgroundColor={};chartOptions.chartArea={};chartOptions.chartArea.backgroundColor={};chartOptions.legend={textStyle:{}};chartOptions.hAxis={gridlines:{},minorGridlines:{},textStyle:{},};chartOptions.vAxis={gridlines:{},minorGridlines:{},textStyle:{}};chartOptions.hAxis.minValue=this.getProperty("hAxisMinValue");chartOptions.hAxis.maxValue=this.getProperty("hAxisMaxValue");chartOptions.vAxis.minValue=this.getProperty("vAxisMinValue");chartOptions.vAxis.maxValue=this.getProperty("vAxisMaxValue");chartOptions.vAxis.logScale=this.getProperty("vAxisLogScale",this.getProperty("logScale"));chartOptions.hAxis.logScale=this.getProperty("hAxisLogScale");chartOptions.hAxis.titleTextStyle={};chartOptions.vAxis.titleTextStyle={};if(this.getProperty("hAxisDateFormat")){chartOptions.hAxis.format=this.getProperty("hAxisDateFormat");}
var lineColor=this.getProperty("lineColor");var backgroundColor=this.getProperty("chartBackground");this.setPropertyOn(chartOptions.backgroundColor,"chart.fill","fill",backgroundColor);this.setPropertyOn(chartOptions.backgroundColor,"chart.stroke","stroke",this.getProperty("chartArea.fill",""));this.setPropertyOn(chartOptions.backgroundColor,"chart.strokeWidth","strokeWidth",null);this.setPropertyOn(chartOptions.chartArea.backgroundColor,"chartArea.fill","fill",backgroundColor);this.setPropertyOn(chartOptions.chartArea.backgroundColor,"chartArea.stroke","stroke",null);this.setPropertyOn(chartOptions.chartArea.backgroundColor,"chartArea.strokeWidth","strokeWidth",null);let minorGridLinesColor=this.getProperty("minorGridLines.color",this.getProperty("gridlines.color",lineColor||"transparent"));this.setPropertyOn(chartOptions.hAxis.gridlines,"hAxis.gridlines.color","color",this.getProperty("gridlines.color",lineColor));this.setPropertyOn(chartOptions.hAxis.minorGridlines,"hAxis.minorGridlines.color","color",minorGridLinesColor);this.setPropertyOn(chartOptions.hAxis,"hAxis.baselineColor","baselineColor",this.getProperty("baselineColor",lineColor));this.setPropertyOn(chartOptions.vAxis.gridlines,"vAxis.gridlines.color","color",this.getProperty("gridlines.color",lineColor));this.setPropertyOn(chartOptions.vAxis.minorGridlines,"vAxis.minorGridlines.color","color",minorGridLinesColor);this.setPropertyOn(chartOptions.vAxis,"vAxis.baselineColor","baselineColor",this.getProperty("baselineColor",lineColor));var textColor=this.getProperty("textColor","#000");var textBold=this.getProperty("textBold","false");this.setPropertyOn(chartOptions.hAxis.textStyle,"hAxis.text.color","color",this.getProperty("axis.text.color",textColor));this.setPropertyOn(chartOptions.vAxis.textStyle,"vAxis.text.color","color",this.getProperty("axis.text.color",textColor));this.setPropertyOn(chartOptions.hAxis.textStyle,"hAxis.text.bold","bold",textBold);this.setPropertyOn(chartOptions.vAxis.textStyle,"vAxis.text.bold","bold",textBold);chartOptions.vAxis.title=this.getProperty("vAxis.text",this.getProperty("vAxisText"));chartOptions.hAxis.title=this.getProperty("hAxis.text",this.getProperty("hAxisText"));chartOptions.hAxis.slantedText=this.getProperty("hAxis.slantedText",this.getProperty("slantedText",false));this.setPropertyOn(chartOptions.hAxis.titleTextStyle,"hAxis.text.color","color",textColor);this.setPropertyOn(chartOptions.vAxis.titleTextStyle,"vAxis.text.color","color",textColor);this.setPropertyOn(chartOptions.legend.textStyle,"legend.text.color","color",textColor);if(this.getProperty("hAxis.ticks")||this.getProperty("hAxis.ticks")==""){chartOptions.hAxis.ticks=this.getProperty("hAxis.ticks").split(",").filter(v=>v!="");}
if(this.getProperty("vAxis.ticks")||this.getProperty("vAxis.ticks")==""){chartOptions.vAxis.ticks=this.getProperty("vAxis.ticks").split(",").filter(v=>v!="");}
if(this.fontSize>0){chartOptions.fontSize=this.fontSize;}
var defaultRange=this.getDisplayManager().getRange(selectedFields[0]);var range=[NaN,NaN];if(!isNaN(this.getVAxisMinValue())){range[0]=this.getVAxisMinValue();}else if(defaultRange!=null){range[0]=defaultRange[0];}
if(!isNaN(this.getVAxisMaxValue())){range[1]=this.getVAxisMaxValue();}else if(defaultRange!=null){range[1]=defaultRange[1];}
if(!isNaN(range[0])){chartOptions.vAxis.minValue=range[0];}
if(!isNaN(range[1])){chartOptions.vAxis.maxValue=range[1];}
this.chartDimensions={width:"90%",left:"10%",right:10,}
useMultipleAxes=this.getProperty("useMultipleAxes",true);if((selectedFields.length>1&&useMultipleAxes)||this.getProperty("padRight",false)===true){this.chartDimensions.width="80%";}
if(this.getProperty("showTrendLines",false)){chartOptions.trendlines={0:{type:'linear',color:'green',}};}
let expandedHeight=this.getProperty("expandedHeight");if(expandedHeight){chartOptions.height=expandedHeight;}
if(this.getPropertyShow){this.getPropertyShow=false;Utils.makeDownloadFile("props.txt",this.getPropertyOutput);}
this.setContents(HU.div([ID,this.getDomId(ID_CHARTS)]));return chartOptions;},getChartHeight:function(){return this.getProperty("height");},getChartWidth:function(){return this.getProperty("width");},getChartDiv:function(chartId){var divAttrs=[ATTR_ID,chartId];var style="";var width=this.getChartWidth();if(false&&width){if(width.endsWith("%")){style+=HU.css("width",width);}else{if(width>0)
style+=HU.css("width",width+"px");else if(width<0)
style+=HU.css("width",(-width)+"%");else
style+=HU.css("width",width);}}else{}
let expandedHeight=this.getProperty("expandedHeight");var height=this.getChartHeight();if(expandedHeight){style+=HU.css("height",expandedHeight);}else{if(height){if(height>0)
style+=HU.css("height",height+"px");else if(height<0)
style+=HU.css("height",(-height)+"%");else
style+=HU.css("height",height);}else{style+=HU.css("height","100%");}}
divAttrs.push(STYLE);divAttrs.push(style);divAttrs.push(CLASS);divAttrs.push("ramadda-expandable-target");let isExpanded=this.getProperty("isExpanded");let originalHeight=this.getProperty("originalHeight");if(isExpanded){divAttrs.push("isexpanded","true")
divAttrs.push("original-height",originalHeight)}
if(this.getProperty("expandableHeight")){divAttrs.push("expandable-height");divAttrs.push(this.getProperty("expandableHeight"));}
return HU.div(divAttrs,"");},doMakeGoogleChart:function(dataList,props,chartDiv,selectedFields,chartOptions){throw new Error("doMakeGoogleChart undefined");},makeGoogleChart:function(dataList,props,selectedFields){try{this.doMakeGoogleChartInner(dataList,props,selectedFields);}catch(err){this.setErrorMessage(err);console.log("Error:"+err);console.log(err.stack);}},doMakeGoogleChartInner:function(dataList,props,selectedFields){if(typeof google=='undefined'){this.setContents("No google");return;}
this.chartOptions=this.makeChartOptions(dataList,props,selectedFields);this.chartOptions.bar={groupWidth:"95%"}
if(!Utils.isDefined(this.chartOptions.height)){this.chartOptions.height="100%";}
this.charts=[];this.chartCount=-1;let records=this.getPointData().getRecords();if(this.getProperty("hAxisFixedRange")){let x=this.getColumnValues(records,selectedFields[0]);this.chartOptions.hAxis.minValue=x.min;this.chartOptions.hAxis.maxValue=x.max;}
if(this.getProperty("vAxisFixedRange")){let y=this.getColumnValues(records,selectedFields[1]||selectedFields[0]);this.chartOptions.vAxis.minValue=y.min;this.chartOptions.vAxis.maxValue=y.max;}
if(this.getProperty("doMultiCharts",this.getProperty("multipleCharts",false))){let multiField=this.getFieldById(null,this.getProperty("multiField"));let labelPosition=this.getProperty("multiChartsLabelPosition","bottom");let map={};let groups=[];let tmp=[];dataList.map((v,idx)=>{if(idx>0)tmp.push(v)});if(!multiField){tmp.sort(function(a,b){var v1=a.record?a.record.getDate():a.date;var v2=b.record?b.record.getDate():b.date;return v1.getTime()-v2.getTime();});}
dataList=Utils.mergeLists([dataList[0]],tmp);dataList.map((v,idx)=>{if(idx==0)return;var record=v.record;var groupValue=record?multiField?record.getValue(multiField.getIndex()):record.getDate():v.date;let list=null;list=map[groupValue];if(!list){list=[];map[groupValue]=list;groups.push(groupValue);}
list.push(v);})
this.jq(ID_CHARTS).html(HU.div([ID,this.getDomId(ID_CHARTS_INNER),STYLE,HU.css('text-align','center')]));let multiStyle="width:200px;"+this.getProperty("multiStyle","");let multiLabelTemplate=this.getProperty("multiLabelTemplate","${value}");if(multiField)groups.sort();groups.forEach((groupValue,idx)=>{this.chartCount=idx;let tmpDataList=[];let list=map[groupValue];tmpDataList.push(dataList[0]);tmpDataList=Utils.mergeLists(tmpDataList,list);var innerId=this.getDomId(ID_CHART)+"_"+this.chartCount;var label=groupValue;if(groupValue.getTime)label=this.formatDate(groupValue);label=multiLabelTemplate.replace("${value}",label);var header=HU.div([CLASS,"display-multi-header"],label);var top=labelPosition=="top"?header:"";var bottom=labelPosition=="bottom"?header:"";var div=HU.div([CLASS,"display-multi-div",STYLE,HU.css('display','inline-block')+multiStyle],top+this.getChartDiv(innerId)+bottom);this.jq(ID_CHARTS_INNER).append(div);let chart=this.makeGoogleChartInner(tmpDataList,innerId,props,selectedFields);if(chart)this.charts.push(chart);});}else{this.jq(ID_CHARTS).append(this.getChartDiv(this.getDomId(ID_CHART)));let chart=this.makeGoogleChartInner(dataList,this.getDomId(ID_CHART),props,selectedFields);if(chart)this.charts.push(chart);}},makeGoogleChartInner:function(dataList,chartId,props,selectedFields){let chartDiv=document.getElementById(chartId);var dataTable=this.makeDataTable(dataList,props,selectedFields,this.chartOptions);let chart=this.doMakeGoogleChart(dataList,props,chartDiv,selectedFields,this.chartOptions);if(chart==null)return null;if(!dataTable){this.setContents(this.getMessage("No data available"));return null;}
if(this.getProperty("animation",false,true)){this.chartOptions.animation={startup:true,duration:parseFloat(this.getProperty("animationDuration",1000,true)),easing:this.getProperty("animationEasing","linear",true)};HU.callWhenScrolled(this.getDomId(ID_CHART),()=>{if(!this.animationCalled){this.animationCalled=true;this.mapCharts(chart=>{chart.draw(dataTable,this.chartOptions);});}});}else{chart.draw(dataTable,this.chartOptions);}
this.addEvents(chart);return chart;},addEvents:function(chart){let theDisplay=this;google.visualization.events.addListener(chart,'onmouseover',function(event){mapVar=theDisplay.getProperty("mapVar",null);if(!Utils.stringDefined(mapVar)){return;}
row=event.row;pointData=theDisplay.dataCollection.getList()[0];var fields=pointData.getRecordFields();var records=pointData.getRecords();var record=records[row];map=ramaddaMapMap[mapVar];if(map){if(theDisplay.mouseOverPoint)
map.removePoint(theDisplay.mouseOverPoint);}else{}
if(record&&map){latField=null;lonField=null;for(i=0;i<fields.length;i++){if(fields[i].isFieldLatitude())latField=fields[i];else if(fields[i].isFieldLongitude())lonField=fields[i];}
if(latField&&lonField){lat=record.getValue(latField.getIndex());lon=record.getValue(lonField.getIndex());theDisplay.mouseOverPoint=map.addPoint(chartId,new OpenLayers.LonLat(lon,lat));}}});google.visualization.events.addListener(chart,'select',function(event){theDisplay.mapCharts(chart=>{if(chart.getSelection){var selected=chart.getSelection();if(selected&&selected.length>0){var index=selected[0].row;var record=theDisplay.indexToRecord[index];if(record){theDisplay.getDisplayManager().notifyEvent("handleEventRecordSelection",theDisplay,{record:record});}}}});});}});}
function RamaddaAxisChart(displayManager,id,chartType,properties){let SUPER=new RamaddaGoogleChart(displayManager,id,chartType,properties);RamaddaUtil.inherit(this,SUPER);$.extend(this,{getWikiEditorTags:function(){var t=SUPER.getWikiEditorTags();var myTags=["label:Chart Attributes",'indexField=field',"vAxisMinValue=\"\"","vAxisMaxValue=\"\"",'vAxisLogScale=true','hAxisLogScale=true','tooltipFields=""','annotations="date,label,desc;date,label,desc; e.g. 2008-09-29,A,Start of housing crash;2008-11-04,B,Obama elected;"','annotationFields=""','annotationLabelField=""','indexField="alternate field to use as index"','forceStrings="if index is a string set to true"','inlinelabel:Multiples','doMultiCharts=true','multiField=field','multiStyle=""','multiLabelTemplate="${value}"','multiChartsLabelPosition=bottom|top|none','inlinelabel:Chart Layout',"chartHeight=\"\"","chartWidth=\"\"","chartLeft=\"0\"","chartRight=\"0\"","chartTop=\"0\"","chartBottom=\"0\"","inlinelabel:Misc Options",'lineColor=""','chartBackground=""','chart.fill=""','chartArea.fill=""','chart.stroke=""','chart.strokeWidth=""','chartArea.fill=""','chartArea.stroke=""','chartArea.strokeWidth=""','gridlines.color="transparent"','minorGridLines.color="transparent"','gridlines.color=""','hAxis.gridlines.color=""','hAxis.minorGridlines.color="transparent"','baselineColor=""','hAxis.baselineColor=""','gridlines.color=""','vAxis.gridlines.color=""','vAxis.minorGridlines.color="transparent"','baselineColor=""','vAxis.baselineColor=""','textColor="#000"','textBold="true"','axis.text.color="#000"','hAxis.text.color="#000"','axis.text.color="#000"','vAxis.text.color="#000"','hAxis.text.bold="false"','vAxis.text.bold="false"','vAxisText=""','vAxis.text=""','slantedText="true"','hAxis.slantedText=""','hAxis.text.color="#000"','vAxis.text.color="#000"','legend.position="top|bottom|none"','legend.text.color="#000"','hAxis.ticks=""','hAxis.ticks=""','vAxis.ticks=""','vAxis.ticks=""','useMultipleAxes="true"','showTrendLines="true"',]
myTags.map(tag=>t.push(tag));return t;},setChartArea:function(chartOptions){if(!chartOptions.chartArea){chartOptions.chartArea={};}
$.extend(chartOptions.chartArea,{left:this.getProperty("chartLeft",this.chartDimensions.left),right:this.getProperty("chartRight",this.chartDimensions.right),top:this.getProperty("chartTop","10"),bottom:this.getProperty("chartBottom"),height:this.getProperty("chartHeight","70%"),width:this.getProperty("chartWidth",this.chartDimensions.width),});},makeChartOptions:function(dataList,props,selectedFields){chartOptions=SUPER.makeChartOptions.call(this,dataList,props,selectedFields);var useMultipleAxes=this.getProperty("useMultipleAxes",true);let expandedHeight=this.getProperty("expandedHeight");chartOptions.height=expandedHeight||this.getProperty("chartHeight",this.getProperty("height","150"));if(!chartOptions.legend)
chartOptions.legend={};this.setPropertyOn(chartOptions.legend,"legend.position","position",this.getProperty("legendPosition",'bottom'));this.setChartArea(chartOptions);if(useMultipleAxes){$.extend(chartOptions,{series:[{targetAxisIndex:0},{targetAxisIndex:1}]});}
if(!chartOptions.hAxis){chartOptions.hAxis={};}
if(!chartOptions.vAxis){chartOptions.vAxis={};}
chartOptions.hAxis.textPosition=this.getProperty("hAxisTextPosition");chartOptions.vAxis.textPosition=this.getProperty("vAxisTextPosition");if(this.getProperty("hAxisTitle")){chartOptions.hAxis.title=this.getProperty("hAxisTitle");}
if(this.getProperty("vAxisTitle")){chartOptions.vAxis.title=this.getProperty("vAxisTitle");}
if(Utils.isDefined(this.chartHeight)){chartOptions.height=this.chartHeight;}
return chartOptions;}});}
function RamaddaSeriesChart(displayManager,id,chartType,properties){let SUPER=new RamaddaAxisChart(displayManager,id,chartType,properties);RamaddaUtil.inherit(this,SUPER);$.extend(this,{includeIndexInData:function(){return this.getProperty("includeIndex",true);},trendLineEnabled:function(){return true;},});}
function LinechartDisplay(displayManager,id,properties){RamaddaUtil.inherit(this,new RamaddaSeriesChart(displayManager,id,DISPLAY_LINECHART,properties));addRamaddaDisplay(this);$.extend(this,{doMakeGoogleChart:function(dataList,props,chartDiv,selectedFields,chartOptions){return new google.visualization.LineChart(chartDiv);},});}
function AreachartDisplay(displayManager,id,properties){let SUPER=new RamaddaSeriesChart(displayManager,id,DISPLAY_AREACHART,properties);RamaddaUtil.inherit(this,SUPER);addRamaddaDisplay(this);$.extend(this,{getWikiEditorTags:function(){return Utils.mergeLists(SUPER.getWikiEditorTags(),["isStacked=true"])},doMakeGoogleChart:function(dataList,props,chartDiv,selectedFields,chartOptions){if(this.isStacked)
chartOptions.isStacked=true;return new google.visualization.AreaChart(chartDiv);}});}
function RamaddaBaseBarchart(displayManager,id,type,properties){let SUPER=new RamaddaSeriesChart(displayManager,id,type,properties);RamaddaUtil.inherit(this,SUPER);$.extend(this,{getWikiEditorTags:function(){return Utils.mergeLists(SUPER.getWikiEditorTags(),[])},canDoGroupBy:function(){return true;},makeChartOptions:function(dataList,props,selectedFields){chartOptions=SUPER.makeChartOptions.call(this,dataList,props,selectedFields);var chartType=this.getChartType();if(chartType==DISPLAY_BARSTACK){chartOptions.series=null;chartOptions.isStacked=true;}
if(this.getProperty("barWidth")){let w=this.getProperty("barWidth");if(w=="flex"){if(dataList.length<100){w="10";}else{w=null;}}
if(w){chartOptions.bar={groupWidth:w}}}
chartOptions.orientation=this.getProperty("orientation","horizontal");return chartOptions;},doMakeGoogleChart:function(dataList,props,chartDiv,selectedFields,chartOptions){return new google.visualization.BarChart(chartDiv);}});}
function BarchartDisplay(displayManager,id,properties){RamaddaUtil.inherit(this,new RamaddaBaseBarchart(displayManager,id,DISPLAY_BARCHART,properties));addRamaddaDisplay(this);}
function BarstackDisplay(displayManager,id,properties){properties=$.extend({"isStacked":true},properties);RamaddaUtil.inherit(this,new RamaddaBaseBarchart(displayManager,id,DISPLAY_BARSTACK,properties));addRamaddaDisplay(this);}
function HistogramDisplay(displayManager,id,properties){let SUPER=new RamaddaGoogleChart(displayManager,id,DISPLAY_HISTOGRAM,properties);RamaddaUtil.inherit(this,SUPER);addRamaddaDisplay(this);RamaddaUtil.inherit(this,{getWikiEditorTags:function(){return Utils.mergeLists(SUPER.getWikiEditorTags(),["label:Histogram Attributes",'legendPosition="none|top|right|left|bottom"','textPosition="out|in|none"','isStacked="false|true|percent|relative"','logScale="true|false"','scaleType="log|mirrorLog"','minValue=""','maxValue=""'])},okToHandleEventRecordSelection:function(){return false;},makeDataTable:function(dataList,props,selectedFields){return google.visualization.arrayToDataTable(this.makeDataArray(dataList));},doMakeGoogleChart:function(dataList,props,chartDiv,selectedFields,chartOptions){if(this.legendPosition){if(!chartOptions.legend)
chartOptions.legend={};chartOptions.legend.position=this.legendPosition;}
var isStacked=this.getProperty("isStacked",null);if(isStacked)
chartOptions.isStacked=isStacked=="true"?true:isStacked=="false"?false:isStacked;chartOptions.vAxis={};chartOptions.vAxis.viewWindow={};if(Utils.isDefined(this.logScale)){chartOptions.vAxis.logScale=(""+this.logScale)==true;}
if(this.textPosition){chartOptions.vAxis.textPosition=this.textPosition;}
if(Utils.isDefined(this.minValue)){chartOptions.vAxis.viewWindow.min=parseFloat(this.minValue);}
if(Utils.isDefined(this.maxValue)){chartOptions.vAxis.viewWindow.max=parseFloat(this.maxValue);}
if(!isNaN(this.getVAxisMaxValue())){chartOptions.vAxis.maxValue=this.getVAxisMaxValue();}
if(!isNaN(this.getVAxisMinValue())){chartOptions.vAxis.minValue=parseFloat(this.getVAxisMinValue());}
if(!isNaN(this.getHAxisMaxValue())){chartOptions.hAxis.maxValue=this.getHAxisMaxValue();}
if(!isNaN(this.getHAxisMinValue())){chartOptions.hAxis.minValue=parseFloat(this.getHAxisMinValue());}
return new google.visualization.Histogram(chartDiv);},});}
function RamaddaTextChart(displayManager,id,chartType,properties){let SUPER=new RamaddaGoogleChart(displayManager,id,chartType,properties);RamaddaUtil.inherit(this,SUPER);$.extend(this,{getFieldsToSelect:function(pointData){return pointData.getNonGeoFields();},});}
function PiechartDisplay(displayManager,id,properties){let ID_PIE_LEGEND="pielegend";let SUPER=new RamaddaTextChart(displayManager,id,DISPLAY_PIECHART,properties);RamaddaUtil.inherit(this,SUPER);addRamaddaDisplay(this);$.extend(this,{uniqueValues:[],uniqueValuesMap:{},canDoGroupBy:function(){return true;},makeGoogleChart:function(dataList,props,selectedFields){this.uniqueValues=[];this.uniqueValuesMap={};SUPER.makeGoogleChart.call(this,dataList,props,selectedFields);if(!this.getProperty("showTopLegend"))return;let legend="";let colors=this.getColorList();let colorCnt=0;this.uniqueValues.map((v,idx)=>{if(colorCnt>=colors.length)colorCnt=0;var color=colors[colorCnt];legend+=HU.div([STYLE,HU.css('display','inline-block','width','8px','height','8px','background',color)])+SPACE+v+SPACE2;colorCnt++;});if(this.jq(ID_PIE_LEGEND).length==0){this.jq(ID_HEADER2).append(HU.div([ID,this.getDomId(ID_PIE_LEGEND)]));}
this.jq(ID_PIE_LEGEND).html(legend);},getWikiEditorTags:function(){return Utils.mergeLists(SUPER.getWikiEditorTags(),["label:Pie Chart Attributes",'groupBy=""','groupByCount=true','groupByCountLabel=""','binCount=true',"pieHole=\"0.5\"","is3D=\"true\"","bins=\"\"","binMin=\"\"","binMax=\"max\"","sliceVisibilityThreshold=\"0.01\"",'pieSliceTextColor=black','pieSliceBorderColor=black']);},setChartSelection:function(index){},getGroupBy:function(){if(!this.groupBy&&this.groupBy!=""){var stringField=this.getFieldOfType(this.allFields,"string");if(stringField){this.groupBy=stringField.getId();}}
return this.groupBy;},getChartDiv:function(chartId){var divAttrs=[ATTR_ID,chartId];divAttrs.push(STYLE);var style="";var width=this.getProperty("chartWidth")||this.getChartWidth();var height=this.getProperty("chartHeight")||this.getChartHeight();if(width){if(width>0)
style+="width:"+width+"px;";else if(width<0)
style+="width:"+(-width)+"%;";else
style+="width:"+width+";";}else{style+="width:"+"100%;";}
if(height){if(height>0)
style+="height:"+height+"px;";else if(height<0)
style+="height:"+(-height)+"%;";else
style+="height:"+height+";";}else{style+="height:"+"100%;";}
style+="padding:5px;"
divAttrs.push(style);return HU.div(divAttrs,"");},doMakeGoogleChart:function(dataList,props,chartDiv,selectedFields,chartOptions){chartOptions.tooltip={textStyle:{color:'#000000',fontSize:12,},showColorCode:true,};this.chartOptions.legend={'position':this.getProperty("legendPosition",'right'),'alignment':'center'};if(this.getProperty("bins",null)){chartOptions.title="Bins: "+this.getDataValues(dataList[0])[1];}else if(this.getProperty("sumFields")){chartOptions.title=this.getProperty("chartTitle","Categories/Values");}else{chartOptions.title=this.getDataValues(dataList[0])[0]+" - "+this.getDataValues(dataList[0])[1];}
if(this.is3D){chartOptions.is3D=true;}
if(this.pieHole){chartOptions.pieHole=this.pieHole;}
if(this.sliceVisibilityThreshold){chartOptions.sliceVisibilityThreshold=this.sliceVisibilityThreshold;}
chartOptions.pieSliceBorderColor=this.getProperty("pieSliceBorderColor","transparent");chartOptions.pieSliceTextStyle={color:this.getProperty("pieSliceTextColor","white")};chartOptions.chartArea={};$.extend(chartOptions.chartArea,{left:this.getProperty("chartLeft",0),right:this.getProperty("chartRight",0),top:this.getProperty("chartTop",0),bottom:this.getProperty("chartBottom",0),width:'100%',height:'100%'});return new google.visualization.PieChart(chartDiv);},getColorList:function(){if(this.getProperty("colors")&&this.getProperty("colors")!="default"){return SUPER.getColorList.call(this);}
if(this.getProperty("colorTable")){let ct=this.getColorTable();return ct.colors;}
return Utils.mergeLists(Utils.getColorTable("schemeset1",true),Utils.getColorTable("schemecategory",true));},makeDataTable:function(dataList,props,selectedFields){var dataTable=new google.visualization.DataTable();var list=[];var header=this.getDataValues(dataList[0]);dataTable.addColumn("string",header[0]);dataTable.addColumn("number",header[1]);if(this.getProperty("bins",null)){var bins=parseInt(this.getProperty("bins",null));var min=Number.MAX_VALUE;var max=Number.MIN_VALUE;var haveMin=false;var haveMax=false;if(this.getProperty("binMin")){min=parseFloat(this.getProperty("binMin"));haveMin=true;}
if(this.getProperty("binMax")){max=parseFloat(this.getProperty("binMax"));haveMax=true;}
var goodValues=[];for(var i=1;i<dataList.length;i++){var tuple=this.getDataValues(dataList[i]);var value=tuple[1];if(!Utils.isRealNumber(value)){continue;}
if(!haveMin)
min=Math.min(value,min);if(!haveMax)
max=Math.max(value,max);goodValues.push(value);}
var binList=[];var step=(max-min)/bins;for(var binIdx=0;binIdx<bins;binIdx++){binList.push({min:min+binIdx*step,max:min+(binIdx+1)*step,values:[]});}
for(var rowIdx=0;rowIdx<goodValues.length;rowIdx++){var value=goodValues[rowIdx];var ok=false;for(var binIdx=0;binIdx<binList.length;binIdx++){if(value<binList[binIdx].min||(value>=binList[binIdx].min&&value<=binList[binIdx].max)){binList[binIdx].values.push(value);ok=true;break;}}
if(!ok){binList[binList.length-1].values.push(value);}}
for(var binIdx=0;binIdx<bins;binIdx++){var bin=binList[binIdx];list.push(["Bin:"+this.formatNumber(bin.min)+"-"+this.formatNumber(bin.max),bin.values.length]);}}else if(this.getProperty("sumFields")){dataTable=new google.visualization.DataTable();dataTable.addColumn("string","Category");dataTable.addColumn("number","Value");var records=this.filterData();let sumFields=this.getFieldsByIds(null,this.getProperty("sumFields"));let sums=[];sumFields.map(f=>{sums.push(0)});if(this.chartCount>=0){records=[records[this.chartCount]];}
records.map(record=>{sumFields.map((f,idx)=>{var v=record.getValue(f.getIndex());if(!isNaN(v))sums[idx]+=v;});});sumFields.map((f,idx)=>{list.push([f.getLabel(),sums[idx]>0?sums[idx]:0]);});}else{for(var i=1;i<dataList.length;i++){var tuple=this.getDataValues(dataList[i]);var s=""+(tuple.length==1?"#"+i:tuple[0]);var v=tuple.length==1?tuple[0]:tuple[1];list.push([s,v]);}}
list.map(tuple=>{var s=tuple[0];if(!this.uniqueValuesMap[s]){this.uniqueValuesMap[s]=true;this.uniqueValues.push(s);}});dataTable.addRows(list);return dataTable;}});}
function SankeyDisplay(displayManager,id,properties){RamaddaUtil.inherit(this,new RamaddaTextChart(displayManager,id,DISPLAY_SANKEY,properties));addRamaddaDisplay(this);$.extend(this,{doMakeGoogleChart:function(dataList,props,chartDiv,selectedFields,chartOptions){chartOptions.height=parseInt(this.getProperty("chartHeight",this.getProperty("height","400")));chartOptions.sankey={node:{colors:this.colors,width:5,},link:{colorMode:'source',colors:this.colors,color:{}}}
return new google.visualization.Sankey(chartDiv);},defaultSelectedToAll:function(){return true;},makeDataTable:function(dataList,props,selectedFields){if(!this.getProperty("doCategories",false)){var values=this.makeDataArray(dataList);return google.visualization.arrayToDataTable(values);}
var strings=[];for(var i=0;i<selectedFields.length;i++){var field=selectedFields[i];if(field.isFieldString()){strings.push(field);}}
var values=[];values.push(["characteristic 1","characteristic 2","value"]);for(var i=1;i<strings.length;i++){var field1=strings[i-1];var field2=strings[i];var cnts={};for(var r=1;r<dataList.length;r++){var row=this.getDataValues(dataList[r]);var value1=row[i-1];var value2=row[i];var key=value1+"-"+value2;if(!cnts[key]){cnts[key]={v1:value1,v2:value2,cnt:0}}
cnts[key].cnt++;}
for(a in cnts){values.push([cnts[a].v1,cnts[a].v2,cnts[a].cnt]);}}
return google.visualization.arrayToDataTable(values);}});}
function WordtreeDisplay(displayManager,id,properties){RamaddaUtil.inherit(this,new RamaddaTextChart(displayManager,id,DISPLAY_WORDTREE,properties));addRamaddaDisplay(this);$.extend(this,{handleEventRecordSelection:function(source,args){},doMakeGoogleChart:function(dataList,props,chartDiv,selectedFields,chartOptions){if(this.getProperty("chartHeight"))
chartOptions.height=parseInt(this.getProperty("chartHeight"));if(this.getProperty("wordColors")){var tmp=this.getProperty("wordColors").split(",");var colors=[];for(var i=0;i<3&&i<tmp.length;i++){colors.push(tmp[i]);}
if(colors.length==3)
chartOptions.colors=colors;}
if(this.getProperty("chartWidth")){chartOptions.width=parseInt(this.getProperty("chartWidth"));}
chartOptions.wordtree={format:'implicit',wordSeparator:"_SEP_",word:this.getProperty("treeRoot","root"),}
if(this.getProperty("maxFontSize")){chartOptions.maxFontSize=parseInt(this.getProperty("maxFontSize"));}
return new google.visualization.WordTree(chartDiv);},makeDataTable:function(dataList,props,selectedFields){var root=this.getProperty("treeRoot","root");var records=this.filterData(null,selectedFields,false,true);var fields=this.getSelectedFields(this.getData().getRecordFields());var valueField=this.getFieldById(null,this.getProperty("colorBy"));var values=[];var typeTuple=["phrases"];values.push(typeTuple);var fixedSize=this.getProperty("fixedSize");if(valueField)
fixedSize=1;if(fixedSize)typeTuple.push("size");if(valueField)
typeTuple.push("value");var fieldInfo={};var header="";for(var i=0;i<fields.length;i++){var field=fields[i];if(header!="")
header+=" -&gt;";header+=field.getLabel();if(!field.isFieldNumeric())continue;var column=this.getColumnValues(records,field);var buckets=[];var argBuckets=this.getProperty("buckets."+field.getId(),this.getProperty("buckets",null));var min,max;if(argBuckets){var argBucketLabels=this.getProperty("bucketLabels."+field.getId(),this.getProperty("bucketLabels",null));var bucketLabels;if(argBucketLabels)
bucketLabels=argBucketLabels.split(",");var bucketList=argBuckets.split(",");var prevValue=0;for(var bucketIdx=0;bucketIdx<bucketList.length;bucketIdx++){var v=parseFloat(bucketList[bucketIdx]);if(bucketIdx==0){min=v;max=v;}
min=Math.min(min,v);max=Math.max(max,v);if(bucketIdx>0){var label;if(bucketLabels&&i<=bucketLabels.length)
label=bucketLabels[bucketIdx-1];else
label=Utils.formatNumber(prevValue,true)+"-"+Utils.formatNumber(v,true);buckets.push({min:prevValue,max:v,label:label});}
prevValue=v;}}else{var numBuckets=parseInt(this.getProperty("numBuckets."+field.getId(),this.getProperty("numBuckets",10)));min=column.min;max=column.max;var step=(column.max-column.min)/numBuckets;for(var bucketIdx=0;bucketIdx<numBuckets;bucketIdx++){var r1=column.min+(bucketIdx*step);var r2=column.min+((bucketIdx+1)*step);var label=Utils.formatNumber(r1,true)+"-"+Utils.formatNumber(r2,true);buckets.push({min:r1,max:r2,label:label});}}
fieldInfo[field.getId()]={min:min,max:max,buckets:buckets};}
var sep="_SEP_";for(var rowIdx=0;rowIdx<records.length;rowIdx++){var row=this.getDataValues(records[rowIdx]);var string=root;for(var fieldIdx=0;fieldIdx<fields.length;fieldIdx++){var field=fields[fieldIdx];string+=sep;var value=row[field.getIndex()];if(field.isFieldNumeric()){var info=fieldInfo[field.getId()];for(var bucketIdx=0;bucketIdx<info.buckets.length;bucketIdx++){var bucket=info.buckets[bucketIdx];if(value>=bucket.min&&value<=bucket.max){value=bucket.label;break;}}}
string+=value;}
var data=[string.trim()];if(fixedSize)data.push(parseInt(fixedSize));if(valueField)
data.push(row[valueField.getIndex()]);values.push(data);}
if(this.getProperty("header")){header=this.getProperty("header","");}else{header="<b>Fields: </b>"+header;if(this.getProperty("headerPrefix"))
header=this.getProperty("headerPrefix")+" "+header;}
this.writeHtml(ID_DISPLAY_TOP,header);return google.visualization.arrayToDataTable(values);},});}
function TableDisplay(displayManager,id,properties){let SUPER=new RamaddaTextChart(displayManager,id,DISPLAY_TABLE,properties);RamaddaUtil.inherit(this,SUPER);addRamaddaDisplay(this);$.extend(this,{getWikiEditorTags:function(){return Utils.mergeLists(SUPER.getWikiEditorTags(),["label:Table Attributes",'tableWidth=100%','frozenColumns=1','showRowNumber=true','maxHeaderLength=60','maxHeaderWidth=60','headerStyle=""']);},canDoGroupBy:function(){return true;},defaultSelectedToAll:function(){return true;},getDataTableValueGetter:function(){let unhighlightColor=this.getProperty("unhighlightColor","#fff");let highlightColor=this.getProperty("highlightColor","#FFFFCC");return(v,record)=>{let f=v;if(v.f){f=v.f;v=v.v;}
if(!this.highlightFilter||!record){f=HU.div([STYLE,HU.css('padding','4px')],f)}else{let c=record.isHighlight(this)?highlightColor:unhighlightColor;f=HU.div([STYLE,HU.css('padding','4px','background',c)],f)}
return{v:v,f:f};}},doMakeGoogleChart:function(dataList,props,chartDiv,selectedFields,chartOptions){let expandedHeight=this.getProperty("expandedHeight");if(!expandedHeight){chartOptions.height=null;if(this.chartHeight){chartOptions.height=this.chartHeight;}
if(chartOptions.height==null){var height=this.getProperty("height",null);if(height){chartOptions.height=height;}}
if(chartOptions.height==null){chartOptions.height="300px";}}
chartOptions.allowHtml=true;if(this.getProperty("tableWidth"))
chartOptions.width=this.getProperty("tableWidth");chartOptions.frozenColumns=this.getProperty("frozenColumns",0);chartOptions.showRowNumber=this.getProperty("showRowNumber",false);if(dataList.length&&this.getDataValues(dataList[0]).length>4){chartOptions.cssClassNames={headerCell:'display-table-header-max'};}else{chartOptions.cssClassNames={headerCell:'display-table-header'};}
return new google.visualization.Table(chartDiv);},getAddToolTip:function(){return false;},getAddStyle:function(){return false;},getFormatNumbers:function(){return true;},formatNumber:function(n){if(isNaN(n))
return this.getProperty("nanValue","--");return SUPER.formatNumber.call(this,n);},xxxxmakeDataTable:function(dataList,props,selectedFields){var rows=this.makeDataArray(dataList);var data=[];for(var rowIdx=0;rowIdx<rows.length;rowIdx++){var row=rows[rowIdx];for(var colIdx=0;colIdx<row.length;colIdx++){var t=(typeof row[colIdx]);if(t=="string"){row[colIdx]=row[colIdx].replace(/\n/g,"<br>");if(row[colIdx].startsWith("http:")||row[colIdx].startsWith("https:")){row[colIdx]="<a href='"+row[colIdx]+"'>"+row[colIdx]+"</a>";}}else if(t=="number"){if(isNaN(row[colIdx]))
row[colIdx]="--";}}
data.push(row);}
return google.visualization.arrayToDataTable(data);}});}
function BubbleDisplay(displayManager,id,properties){let SUPER=new RamaddaTextChart(displayManager,id,DISPLAY_BUBBLE,properties);RamaddaUtil.inherit(this,SUPER);addRamaddaDisplay(this);$.extend(this,{getWikiEditorTags:function(){return Utils.mergeLists(SUPER.getWikiEditorTags(),['label:Bubble Chart Attibutes','legendPosition="none|top|right|left|bottom"','hAxisFormat="none|decimal|scientific|percent|short|long"','vAxisFormat="none|decimal|scientific|percent|short|long"','hAxisTitle=""','vAxisTitle=""'])},getChartDiv:function(chartId){var divAttrs=[ATTR_ID,chartId];divAttrs.push(STYLE);var style="";var width=this.getProperty("chartWidth")||this.getChartWidth();var height=this.getProperty("chartHeight")||this.getChartHeight();if(width){if(width>0)
style+="width:"+width+"px;";else if(width<0)
style+="width:"+(-width)+"%;";else
style+="width:"+width+";";}else{style+="width:"+"100%;";}
if(height){if(height>0)
style+="height:"+height+"px;";else if(height<0)
style+="height:"+(-height)+"%;";else
style+="height:"+height+";";}else{style+="height:"+"100%;";}
style+="padding:5px;"
divAttrs.push(style);return HU.div(divAttrs,"");},makeDataTable:function(dataList,props,selectedFields,chartOptions){let debug=displayDebug.makeDataTable;if(debug){console.log(this.type+" makeDataTable #records:"+dataList.length);var fields=this.getSelectedFields();console.log("\t fields:"+fields);}
var tmp=[];var a=this.makeDataArray(dataList);while(a[0].length<5)
a[0].push("");tmp.push(a[0]);this.didUnhighlight=false;let minColorValue=Number.MAX_SAFE_INTEGER;for(var i=1;i<a.length;i++){var tuple=a[i];while(tuple.length<5){tuple.push(1);}
minColorValue=Math.min(minColorValue,tuple[3]);}
for(var i=1;i<a.length;i++){var tuple=a[i];while(tuple.length<5)
tuple.push(1);if(debug&&i<5)
console.log("\tdata:"+tuple);var ok=true;for(j=1;j<tuple.length&&ok;j++){if(isNaN(tuple[j]))ok=false;}
if(this.highlightFilter){let unhighlightColor=this.getProperty("unhighlightColor","#eee");if(dataList[i].record&&!dataList[i].record.isHighlight(this)){this.didUnhighlight=true;tuple[3]=minColorValue-0.111;}}
if(ok)
tmp.push(tuple);}
return google.visualization.arrayToDataTable(tmp);},doMakeGoogleChart:function(dataList,props,chartDiv,selectedFields,chartOptions){var ct=this.getColorTable(true);if(ct){chartOptions.colors=ct;}else if(!this.colors){chartOptions.colors=this.getColorList();}
if(chartOptions.colors){chartOptions.colors=Utils.getColorTable("rainbow",true);}
$.extend(chartOptions.chartArea,{left:this.getProperty("chartLeft",this.chartDimensions.left),right:this.getProperty("chartRight",this.chartDimensions.right),top:this.getProperty("chartTop","10"),bottom:this.getProperty("chartBottom",40),height:this.getProperty("chartHeight",'200')});chartOptions.height="100px";chartOptions.sizeAxis={}
chartOptions.colorAxis={legend:{position:this.getProperty("legendPosition","in")}}
var colorTable=this.getColorTable(true);if(colorTable){chartOptions.colorAxis.colors=colorTable;if(this.didUnhighlight){chartOptions.colorAxis.colors=[...chartOptions.colorAxis.colors];chartOptions.colorAxis.colors.unshift(this.getProperty("unhighlightColor","#eee"));}}
chartOptions.bubble={textStyle:{auraColor:"none"},stroke:"#666"};header=this.getDataValues(dataList[0]);chartOptions.hAxis=chartOptions.hAxis||{};chartOptions.vAxis=chartOptions.vAxis||{};chartOptions.hAxis.minValue=this.getProperty("hAxisMinValue");chartOptions.hAxis.maxValue=this.getProperty("hAxisMaxValue");chartOptions.vAxis.minValue=this.getProperty("vAxisMinValue");chartOptions.vAxis.maxValue=this.getProperty("vAxisMaxValue");let records=this.getPointData().getRecords();if(this.getProperty("hAxisFixedRange")){let x=this.getColumnValues(records,selectedFields[1]);chartOptions.hAxis.minValue=x.min;chartOptions.hAxis.maxValue=x.max;}
if(this.getProperty("vAxisFixedRange")){let y=this.getColumnValues(records,selectedFields[2]);chartOptions.vAxis.minValue=y.min;chartOptions.vAxis.maxValue=y.max;}
chartOptions.vAxis.viewWindowMode=this.getProperty("viewWindowMode","pretty");chartOptions.hAxis.viewWindowMode=this.getProperty("viewWindowMode","pretty");chartOptions.hAxis.format=this.getProperty("hAxisFormat",null);chartOptions.vAxis.format=this.getProperty("vAxisFormat",null);chartOptions.hAxis.title=this.getProperty("hAxisTitle",header.length>1?header[1]:null);chartOptions.vAxis.title=this.getProperty("vAxisTitle",header.length>2?header[2]:null);return new google.visualization.BubbleChart(chartDiv);}});}
function BartableDisplay(displayManager,id,properties){let SUPER=new RamaddaSeriesChart(displayManager,id,DISPLAY_BARTABLE,properties);RamaddaUtil.inherit(this,SUPER);addRamaddaDisplay(this);$.extend(this,{doMakeGoogleChart:function(dataList,props,chartDiv,selectedFields,chartOptions){var height="";if(Utils.isDefined(this.chartHeight)){height=this.chartHeight;}else{if(dataList.length>1){var numBars=dataList.length;if(this.isStacked){height=numBars*22;}else{height=numBars*22+numBars*14*(this.getDataValues(dataList[0]).length-2);}}}
$.extend(chartOptions,{title:"the title",bars:'horizontal',colors:this.getColorList(),width:(Utils.isDefined(this.chartWidth)?this.chartWidth:"100%"),chartArea:{left:'30%',top:0,width:'70%',height:'80%'},height:height,bars:'horizontal',tooltip:{showColorCode:true,},legend:{position:'none'},});if(Utils.isDefined(this.isStacked)){chartOptions.isStacked=this.isStacked;}
if(this.hAxis)
chartOptions.hAxis={title:this.hAxis};if(this.vAxis)
chartOptions.vAxis={title:this.vAxis};return new google.charts.Bar(chartDiv);},getDefaultSelectedFields:function(fields,dfltList){var f=[];for(i=0;i<fields.length;i++){var field=fields[i];if(!field.isNumeric()){f.push(field);break;}}
for(i=0;i<fields.length;i++){var field=fields[i];if(field.isNumeric()){f.push(field);break;}}
return f;}});}
function TreemapDisplay(displayManager,id,properties){let SUPER=new RamaddaTextChart(displayManager,id,DISPLAY_TREEMAP,properties);RamaddaUtil.inherit(this,SUPER);addRamaddaDisplay(this);$.extend(this,{handleEventRecordSelection:function(source,args){},getFieldsToSelect:function(pointData){return pointData.getRecordFields();},tooltips:{},makeChartOptions:function(dataList,props,selectedFields){let _this=this;var tooltip=function(row,size,value){if(_this.tooltips[row]){return _this.tooltips[row];}
return"<div class='display-treemap-tooltip-outer'><div class='display-treemap-tooltip''><i>left-click: go down<br>right-click: go up</i></div></div>";};var chartOptions=SUPER.makeChartOptions.call(this,dataList,props,selectedFields);$.extend(chartOptions,{highlightOnMouseOver:true,generateTooltip:tooltip,maxDepth:parseInt(this.getProperty("maxDepth",2)),maxPostDepth:parseInt(this.getProperty("maxPostDepth",3)),});return chartOptions;},defaultSelectedToAll:function(){return true;},doMakeGoogleChart:function(dataList,props,chartDiv,selectedFields,chartOptions){var dataTable=this.makeDataTable(dataList,props,selectedFields);if(!dataTable)return null;return new google.visualization.TreeMap(chartDiv);},addTuple:function(data,colorField,seen,value,parent,n1,n2){var ovalue=value;var cnt=0;if(Utils.isDefined(seen[value])&&parent){value=parent+":"+value;}
while(true){if(!Utils.isDefined(seen[value])){seen[value]=true;break;}
value=ovalue+" "+(++cnt);}
var tuple=[value,parent,n1];if(colorField)tuple.push(n2);data.push(tuple);return value;},valueClicked:function(field,value){var allFields=this.getData().getRecordFields();field=this.getFieldById(allFields,field);this.propagateEvent("handleEventFieldValueSelect",{field:field,value:value});},makeDataTable:function(dataList,props,selectedFields){var records=this.filterData(null,null,false,true);if(!records){return null;}
var allFields=this.getData().getRecordFields();var fields=this.getSelectedFields(allFields);if(fields.length==0)
fields=allFields;var strings=this.getFieldsOfType(fields,"string");if(strings.length<2){this.displayError("No string fields specified");return null;}
var addPrefix=this.getProperty("addPrefix",true);var sizeField=this.getFieldById(allFields,this.getProperty("sizeBy"));var colorField=this.getFieldById(allFields,this.getProperty("colorBy"));var values=this.getFieldsOfType(fields,"numeric");if(!sizeField&&values.length>0)
sizeField=values[0];if(!colorField&&values.length>1)
colorField=values[1];var tooltipFields=[];var toks=this.getProperty("tooltipFields","").split(",");for(var i=0;i<toks.length;i++){var tooltipField=this.getFieldById(null,toks[i]);if(tooltipField)
tooltipFields.push(tooltipField);}
if(tooltipFields.length==0)tooltipFields=allFields;this.tooltips={};var columns=[];for(var fieldIndex=0;fieldIndex<strings.length;fieldIndex++){var field=strings[fieldIndex];columns.push(this.getColumnValues(records,field).values);}
var data=[];var leafs=[];var tmptt=[];var seen={};this.addTuple(data,colorField,{},"Node","Parent","Value","Color");var root=strings[0].getLabel();this.addTuple(data,colorField,seen,root,null,0,0);var keys={};var call=this.getGet();for(var rowIdx=0;rowIdx<records.length;rowIdx++){var row=this.getDataValues(records[rowIdx]);var key="";var parentKey="";for(var fieldIndex=0;fieldIndex<strings.length-1;fieldIndex++){var values=columns[fieldIndex];if(key!="")
key+=":";key+=values[rowIdx];if(!Utils.isDefined(keys[key])){var parent=Utils.isDefined(keys[parentKey])?keys[parentKey]:root;var value=values[rowIdx];if(addPrefix&&fieldIndex>0)
value=parent+":"+value;keys[key]=this.addTuple(data,colorField,seen,value,parent,0,0);}
parentKey=key;}
var parent=Utils.isDefined(keys[parentKey])?keys[parentKey]:root;var value=row[strings[strings.length-1].getIndex()];var size=sizeField?row[sizeField.getIndex()]:1;var color=colorField?row[colorField.getIndex()]:0;value=this.addTuple(leafs,colorField,seen,value,parent,size,color);var tt="<div class='display-treemap-tooltip-outer'><div class='display-treemap-tooltip''>";for(var f=0;f<tooltipFields.length;f++){var v=row[tooltipFields[f].getIndex()];var field=tooltipFields[f];v=HU.onClick(call+".valueClicked('"+field.getId()+"','"+v+"')",v,[]);tt+=HU.b(field.getLabel())+": "+v+"<br>";}
tt+="</div></div>";tmptt.push(tt);}
for(var i=0;i<leafs.length;i++){data.push(leafs[i]);this.tooltips[data.length-2]=tmptt[i];}
return google.visualization.arrayToDataTable(data);},});}
function TimerangechartDisplay(displayManager,id,properties){RamaddaUtil.inherit(this,new RamaddaTextChart(displayManager,id,DISPLAY_TIMERANGECHART,properties));addRamaddaDisplay(this);$.extend(this,{doMakeGoogleChart:function(dataList,props,chartDiv,selectedFields,chartOptions){return new google.visualization.Timeline(chartDiv);},makeDataTable:function(dataList,props,selectedFields){var records=this.filterData(null,null,false,true);var strings=[];var stringField=this.getFieldOfType(selectedFields,"string");if(!stringField)
stringField=this.getFieldOfType(null,"string");var showLabel=this.getProperty("showLabel",true);var labelFields=[];var labelFieldsTemplate=this.getProperty("labelFieldsTemplate");var toks=this.getProperty("labelFields","").split(",");for(var i=0;i<toks.length;i++){var field=this.getFieldById(null,toks[i]);if(field)
labelFields.push(field);}
var dateFields=this.getFieldsOfType(selectedFields,"date");if(dateFields.length==0)
dateFields=this.getFieldsOfType(null,"date");var values=[];var dataTable=new google.visualization.DataTable();if(dateFields.length<2){throw new Error("Need to have at least 2 date fields");}
if(stringField){dataTable.addColumn({type:'string',id:stringField.getLabel()});}else{dataTable.addColumn({type:'string',id:"Index"});}
if(labelFields.length>0){dataTable.addColumn({type:'string',id:'Label'});}
dataTable.addColumn({type:'date',id:dateFields[0].getLabel()});dataTable.addColumn({type:'date',id:dateFields[1].getLabel()});for(var r=0;r<records.length;r++){var row=this.getDataValues(records[r]);var tuple=[];values.push(tuple);if(stringField&&showLabel)
tuple.push(row[stringField.getIndex()]);else
tuple.push("#"+(r+1));if(labelFields.length>0){var label="";if(labelFieldsTemplate)
label=labelFieldsTemplate;for(var l=0;l<labelFields.length;l++){var f=labelFields[l];var value=row[f.getIndex()];if(labelFieldsTemplate){label=label.replace("{"+f.getId()+"}",value);}else{label+=value+" ";}}
tuple.push(label);}
tuple.push(row[dateFields[0].getIndex()]);tuple.push(row[dateFields[1].getIndex()]);}
dataTable.addRows(values);return dataTable;}});}
function CalendarDisplay(displayManager,id,properties){RamaddaUtil.inherit(this,new RamaddaGoogleChart(displayManager,id,DISPLAY_CALENDAR,properties));addRamaddaDisplay(this);RamaddaUtil.inherit(this,{doMakeGoogleChart:function(dataList,props,chartDiv,selectedFields,chartOptions){chartOptions.calendar={cellSize:parseInt(this.getProperty("cellSize",15))};if(this.jq(ID_CHART).width()==0){return;}
return new google.visualization.Calendar(chartDiv);},defaultSelectedToAll:function(){return true;},xgetContentsStyle:function(){var height=this.getProperty("height",200);if(height>0){return" height:"+height+"px; "+" max-height:"+height+"px; overflow-y: auto;";}
return"";},canDoMultiFields:function(){return false;},getIncludeIndexIfDate:function(){return true;},makeDataTable:function(dataList,props,selectedFields){var dataTable=new google.visualization.DataTable();var header=this.getDataValues(dataList[0]);if(header.length<2)return null;dataTable.addColumn({type:'date',id:'Date'});dataTable.addColumn({type:'number',id:header[1]});dataTable.addColumn({type:'string',role:'tooltip','p':{'html':true}});var haveMissing=false;var missing=this.getProperty("missingValue",null);if(missing){haveMissing=true;missing=parseFloat(missing);}
var list=[];var cnt=0;var options={weekday:'long',year:'numeric',month:'long',day:'numeric'};for(var i=1;i<dataList.length;i++){var value=this.getDataValues(dataList[i])[1];if(value==NaN)continue;if(haveMissing&&value==missing){continue;}
cnt++;var dttm=this.formatDate(this.getDataValues(dataList[i])[0],{options:options});dttm=dttm.replace(/ /g,SPACE);var tooltip="<center><b>"+dttm+"</b></center>"+
"<b>"+header[1].replace(/ /g,"&nbsp;")+"</b>:&nbsp;"+this.formatNumber(value);tooltip=HU.div([STYLE,HU.css('padding','5px')],tooltip);list.push([this.getDataValues(dataList[i])[0],value,tooltip]);}
dataTable.addRows(list);return dataTable;}});}
function GaugeDisplay(displayManager,id,properties){RamaddaUtil.inherit(this,new RamaddaGoogleChart(displayManager,id,DISPLAY_GAUGE,properties));addRamaddaDisplay(this);RamaddaUtil.inherit(this,{getChartHeight:function(){return this.getProperty("height",this.getChartWidth());},getChartWidth:function(){return this.getProperty("width","150");},doMakeGoogleChart:function(dataList,props,chartDiv,selectedFields,chartOptions){this.dataList=dataList;this.chartOptions=chartOptions;var min=Number.MAX_VALUE;var max=Number.MIN_VALUE;var setMinMax=true;for(var row=1;row<dataList.length;row++){var tuple=this.getDataValues(dataList[row]);for(var col=0;col<tuple.length;col++){if(!Utils.isNumber(tuple[col])){continue;}
var value=tuple[col];min=Math.min(min,value);max=Math.max(max,value);}}
min=Utils.formatNumber(min,true);max=Utils.formatNumber(max,true);if(Utils.isDefined(this.gaugeMin)){setMinMax=true;min=parseFloat(this.gaugeMin);}
if(Utils.isDefined(this.gaugeMax)){setMinMax=true;max=parseFloat(this.gaugeMax);}
if(setMinMax){chartOptions.min=min;chartOptions.max=max;}
return new google.visualization.Gauge(chartDiv);},makeDataTable:function(dataList,props,selectedFields){dataList=this.makeDataArray(dataList);if(!Utils.isDefined(this.index))this.index=dataList.length-1;var index=this.index+1;var list=[];list.push(["Label","Value"]);var header=this.getDataValues(dataList[0]);if(index>=dataList.length)index=dataList.length-1;var row=this.getDataValues(dataList[index]);for(var i=0;i<row.length;i++){if(!Utils.isNumber(row[i]))continue;var h=header[i];if(h.length>20){var index=h.indexOf("(");if(index>0){h=h.substring(0,index);}}
if(h.length>20){h=h.substring(0,19)+"...";}
if(this.getProperty("gaugeLabel"))
h=this.getProperty("gaugeLabel");else if(this["gaugeLabel"+(i+1)])h=this["gaugeLabel"+(i+1)];var value=row[i];list.push([h,Utils.formatNumber(value,true)]);}
return google.visualization.arrayToDataTable(list);},setChartSelection:function(index){this.index=index;var dataTable=this.makeDataTable(this.dataList);this.mapCharts(chart=>{chart.draw(dataTable,this.chartOptions);});},});}
function ScatterplotDisplay(displayManager,id,properties){let SUPER=new RamaddaGoogleChart(displayManager,id,DISPLAY_SCATTERPLOT,properties);RamaddaUtil.inherit(this,SUPER);addRamaddaDisplay(this);$.extend(this,{trendLineEnabled:function(){return true;},makeChartOptions:function(dataList,props,selectedFields){var chartOptions=SUPER.makeChartOptions.call(this,dataList,props,selectedFields);chartOptions.curveType=null;chartOptions.lineWidth=0;$.extend(chartOptions,{title:'',tooltip:{isHtml:true},legend:'none',});if(!chartOptions.chartArea)chartOptions.chartArea={};$.extend(chartOptions.chartArea,{left:"10%",top:10,height:"80%",width:"90%"});if(this.getShowTitle()){chartOptions.title=this.getTitle(true);}
if(!chartOptions.hAxis)chartOptions.hAxis={};if(!chartOptions.vAxis)chartOptions.vAxis={};if(this.getProperty("hAxisLogScale",false))
chartOptions.hAxis.logScale=true;if(this.getProperty("vAxisLogScale",false))
chartOptions.vAxis.logScale=true;chartOptions.vAxis.viewWindowMode=this.getProperty("viewWindowMode","pretty");chartOptions.hAxis.viewWindowMode=this.getProperty("viewWindowMode","pretty");if(dataList.length>0&&this.getDataValues(dataList[0]).length>1){if(!chartOptions.vAxis)chartOptions.vAxis={};if(!chartOptions.hAxis)chartOptions.hAxis={};if(this.getProperty("hAxisTitle")){chartOptions.hAxis.title=this.getProperty("hAxisTitle");}
if(this.getProperty("vAxisTitle")){chartOptions.vAxis.title=this.getProperty("vAxisTitle");}
if(!chartOptions.hAxis.title){$.extend(chartOptions.hAxis,{title:this.getDataValues(dataList[0])[0]});}
if(!chartOptions.vAxis.title){$.extend(chartOptions.vAxis,{title:this.getDataValues(dataList[0])[1]});}
if(!isNaN(this.getVAxisMinValue())){chartOptions.vAxis.minValue=this.getVAxisMinValue();}
if(!isNaN(this.getVAxisMaxValue())){chartOptions.vAxis.maxValue=this.getVAxisMaxValue();}}
return chartOptions;},doMakeGoogleChart:function(dataList,props,chartDiv,selectedFields,chartOptions){if(!chartDiv)return
var height=this.getProperty("height",400);if(Utils.isDefined(this.getProperty("chartHeight"))){height=this.getProperty("chartHeight");}
var width="100%";if(Utils.isDefined(this.getProperty("chartWidth"))){width=this.getProperty("chartWidth");}
if((typeof height)=="number")height=height+"px";if((typeof width)=="number")width=width+"px";$("#"+chartDiv.id).css("width",width);$("#"+chartDiv.id).css("height",height);return new google.visualization.ScatterChart(chartDiv);},getDefaultSelectedFields:function(fields,dfltList){var f=[];for(i=0;i<fields.length;i++){var field=fields[i];if(field.isNumeric()){f.push(field);if(f.length>=2)
break;}}
return f;}});}
var DISPLAY_D3_GLIDER_CROSS_SECTION="GliderCrossSection";var DISPLAY_D3_PROFILE="profile";var DISPLAY_D3_LINECHART="D3LineChart";var DISPLAY_SKEWT="skewt";var DISPLAY_VENN="venn";var DISPLAY_CHERNOFF="chernoff";var DISPLAY_D3BUBBLE="d3bubble";addGlobalDisplayType({type:DISPLAY_D3_LINECHART,forUser:false,label:"D3 LineChart",requiresData:true,category:"Charts"});addGlobalDisplayType({type:DISPLAY_D3_PROFILE,forUser:false,label:"Profile",requiresData:true,category:"Charts"});addGlobalDisplayType({type:DISPLAY_D3_GLIDER_CROSS_SECTION,forUser:false,label:"Glider cross section",requiresData:true,category:"Charts"});addGlobalDisplayType({type:DISPLAY_VENN,forUser:true,label:"Venn Diagram",requiresData:true,category:"Misc"});addGlobalDisplayType({type:DISPLAY_CHERNOFF,forUser:true,label:"Chernoff Faces",requiresData:true,category:"Misc"});addGlobalDisplayType({type:DISPLAY_D3BUBBLE,forUser:true,label:"D3 Bubble Chart",requiresData:true,category:"Misc"});addGlobalDisplayType({type:DISPLAY_SKEWT,forUser:false,label:"SkewT",requiresData:true,category:"Charts"});var FIELD_TIME="time";var FIELD_DEPTH="depth";var FIELD_VALUE="value";var FIELD_SELECTEDFIELD="selectedfield";var TYPE_LATITUDE="latitude";var TYPE_LONGITUDE="longitude";var TYPE_TIME="time";var TYPE_VALUE="value";var TYPE_ELEVATION="elevation";var FUNC_MOVINGAVERAGE="movingAverage";var D3Util={foo:"bar",getAxis:function(axisType,range){var axis;if(axisType==FIELD_TIME){axis=d3.time.scale().range(range);}else{axis=d3.scale.linear().range(range);}
return axis;},getDataValue:function(axis,record,index){var data;if(axis.fieldIdx>=0){data=record.getData()[axis.fieldIdx];}else{switch(axis.type){case TYPE_TIME:data=new Date(record.getDate());break;case TYPE_ELEVATION:data=record.getElevation();break;case TYPE_LATITUDE:data=record.getLatitude();case TYPE_LONGITUDE:data=record.getLongitude();default:data=record.getData()[index];}}
if(axis.reverse==true){return-1*data;}else{return data;}},getColorFromColorBar:function(value,range){var colors=["#00008B","#0000CD","#0000FF","#00FFFF","#7CFC00","#FFFF00","#FFA500","#FF4500","#FF0000","#8B0000"];var colorScale=d3.scale.linear().domain([0,colors.length-1]).range(range);var colorScaler=d3.scale.linear().range(colors).domain(d3.range(0,colors.length).map(colorScale));color=colorScaler(value);return color;},addColorBar:function(svg,colors,colorSpacing,displayWidth){var colorBar=svg.append("g").attr({"id":"colorBarG","transform":"translate("+(displayWidth-40)+",0)"});colorBar.append("g").append("defs").append("linearGradient").attr({id:"colorBarGradient",x1:"0%",y1:"100%",x2:"0%",y2:"0%"}).selectAll("stop").data(colors).enter().append("stop").attr({"offset":function(d,i){return colorSpacing*(i)+"%"},"stop-color":function(d,i){return colors[i]},"stop-opacity":1});return colorBar;}}
function RamaddaSkewtDisplay(displayManager,id,properties){let SUPER=new RamaddaDisplay(displayManager,id,DISPLAY_SKEWT,properties);var ID_SKEWT="skewt";var ID_DATE_LABEL="skewtdate";RamaddaUtil.inherit(this,SUPER);addRamaddaDisplay(this);RamaddaUtil.defineMembers(this,{needsData:function(){return true;},getWikiEditorTags:function(){return Utils.mergeLists(SUPER.getWikiEditorTags(),['label:Skewt Attributes','skewtWidth="500"','skewtHeight="550"','hodographWidth=150','showHodograph=false','windStride=1','showText=false',])},initDisplay:function(){SUPER.initDisplay.call(this);},handleEventMapClick:function(source,args){if(!this.dataCollection){return;}
var pointData=this.dataCollection.getList();for(var i=0;i<pointData.length;i++){pointData[i].handleEventMapClick(this,source,args.lon,args.lat);}},handleEventPointDataLoaded:function(source,pointData){this.updateUI();},updateUI:async function(){if(!this.loadedResources){var time=new Date();await Utils.importCSS(ramaddaBaseUrl+"/htdocs_v_"+time.getTime()+"/lib/skewt/sounding.css");await Utils.importJS(ramaddaBaseUrl+"/htdocs_v_"+time.getTime()+"/lib/skewt/d3skewt.js");this.loadedResources=true;}
if(!window["D3Skewt"]){setTimeout(()=>this.updateUI(),100);return;}
SUPER.updateUI.call(this);let records=this.filterData();if(!records||records.length==0){this.setContents(this.getLoadingMessage());return;}
let skewtId=this.getDomId(ID_SKEWT);let html=HtmlUtils.div(["id",skewtId],"");this.setContents(html);var date=records[0].getDate();if(this.jq(ID_DATE_LABEL).length==0){this.jq(ID_TOP_LEFT).append(HtmlUtils.div(["id",this.getDomId(ID_DATE_LABEL)]));}
if(date!=null){this.jq(ID_DATE_LABEL).html("Date: "+this.formatDate(date));}else{this.jq(ID_DATE_LABEL).html("");}
var options={};if(this.propertyDefined("showHodograph"))
options.showHodograph=this.getProperty("showHodograph",true);if(this.propertyDefined("showText"))
options.showText=this.getProperty("showText",true);if(this.propertyDefined("skewtWidth"))
options.skewtWidth=parseInt(this.getProperty("skewtWidth"));if(this.propertyDefined("skewtHeight"))
options.skewtHeight=parseInt(this.getProperty("skewtHeight"));if(this.propertyDefined("hodographWidth")){options.hodographWidth=parseInt(this.getProperty("hodographWidth"));}
if(this.propertyDefined("windStride")){options.windStride=parseInt(this.getProperty("windStride"));}
options.showText=this.getProperty("showText",true);var fields=this.getData().getRecordFields();var names=[{id:"pressure",aliases:["vertCoord"]},{id:"height",aliases:["Geopotential_height_isobaric"]},{id:"temperature",aliases:["Temperature_isobaric"]},{id:"dewpoint",aliases:[]},{id:"rh",aliases:["Relative_humidity_isobaric","relative_humidity"]},{id:"wind_direction",aliases:[]},{id:"wind_speed",aliases:[]},{id:"uwind",aliases:["u-component_of_wind_isobaric","u"]},{id:"vwind",aliases:["v-component_of_wind_isobaric","v"]},];var data={};var dataFields={};for(var i=0;i<names.length;i++){var obj=names[i];var id=obj.id;var field=this.getFieldById(fields,id);if(field==null){for(var j=0;j<obj.aliases.length;j++){field=this.getFieldById(fields,obj.aliases[j]);if(field)break;}}
if(field){data[id]=this.getColumnValues(records,field).values;dataFields[id]=field;}}
if(!data.pressure){this.displayError("No pressure defined in data");return;}
if(!data.temperature){this.displayError("No temperature defined in data");return;}
if(!data.height){var pressures=[1013.25,954.61,898.76,845.59,795.01,746.91,701.21,657.80,616.6,577.52,540.48,505.39,472.17,440.75,411.05,382.99,356.51,331.54,303.00,285.85,264.99,226.99,193.99,165.79,141.70,121.11,103.52,88.497,75.652,64.674,55.293,25.492,11.970,5.746,2.871,1.491,0.798,0.220,0.052,0.010,];var alts=[0,500,1000,1500,2000,2500,3000,3500,4000,4500,5000,5500,6000,6500,7000,7500,8000,8500,9000,9500,10000,11000,12000,13000,14000,15000,16000,17000,18000,19000,20000,25000,30000,35000,40000,45000,50000,60000,70000,80000,];data.height=[];for(var i=0;i<data.pressure.length;i++){var pressure=data.pressure[i];var alt=alts[alts.length-1];for(var j=0;j<pressures.length;j++){if(pressure>=pressures[j]){if(j==0)alt=0;else{var p1=pressures[j-1];var p2=pressures[j];var a1=alts[j-1];var a2=alts[j];var percent=1-(pressure-p2)/(p1-p2);alt=(a2-a1)*percent+a1;}
break;}}
data.height.push(alt);}}
if(!data.dewpoint){if(!data.rh){this.displayError("No dewpoint or rh");return;}
data.dewpoint=[];for(var i=0;i<data.rh.length;i++){var rh=data.rh[i];var t=data.temperature[i];var dp=t-(100-rh)/5;data.dewpoint.push(dp);}}
if(!data.wind_speed){if(!data.uwind||!data.vwind){this.displayError("No wind speed defined in data");return;}
data.wind_speed=[];data.wind_direction=[];for(var i=0;i<data.uwind.length;i++){var u=data.uwind[i];var v=data.vwind[i];var ws=Math.sqrt(u*u+v*v);var wdir=180+(180/Math.PI)*Math.atan2(v,u);data.wind_speed.push(ws);data.wind_direction.push(wdir);}}
var alldata=data;data={};for(a in alldata)data[a]=[];alldata[names[0].id].map((v,idx)=>{var ok=true;for(id in alldata){if(isNaN(alldata[id][idx])){ok=false;break;}}
if(ok){for(id in alldata){data[id].push(alldata[id][idx]);}}});if(data.height.length>1){if(data.height[0]>data.height[1]){for(name in data)
data[name]=Utils.reverseArray(data[name]);}}
if(data.temperature.length==0){this.displayError("No data is available");return;}
options.myid=this.getId();try{this.skewt=new D3Skewt(skewtId,options,data);}catch(e){this.displayError("An error occurred: "+e);console.log("error:"+e.stack);return;}
await this.getDisplayEntry((e)=>{var q=e.getAttribute("variables");if(!q)return;q=q.value;q=q.replace(/\r\n/g,"\n");q=q.replace(/^ *\n/,"");q=q.replace(/^ *([^:]+):([^\n].*)$/gm,"<div title='$1' class=display-skewt-index-label>$1</div>: <div title='$2'  class=display-skewt-index>$2</div>");q=q.replace(/[[\r\n]/g,"\n");q=HtmlUtils.div(["class","display-skewt-text"],q);$("#"+this.skewt.textBoxId).html(q);});}});}
function RamaddaD3Display(displayManager,id,properties){testProperties=properties;var ID_SVG="svg";var SUPER;RamaddaUtil.inherit(this,SUPER=new RamaddaDisplay(displayManager,id,"d3",properties));addRamaddaDisplay(this);RamaddaUtil.defineMembers(this,{initDisplay:function(){this.createUI();this.setDisplayTitle(properties.graph.title);var width=this.getProperty("innerWidth",600);var height=this.getProperty("innerHeight",300);var margin={top:20,right:50,bottom:30,left:50};var divStyle="height:"+height+"px;"+
"width:"+width+"px;";var html=HtmlUtils.div([ATTR_ID,this.getDomId(ID_SVG),ATTR_STYLE,divStyle],"");this.setContents(html);this.displayHeight=parseInt((d3.select("#"+this.getDomId(ID_SVG)).style("height")).split("px")[0])-margin.top-margin.bottom;this.displayWidth=parseInt((d3.select("#"+this.getDomId(ID_SVG)).style("width")).split("px")[0])-margin.left-margin.right;var myThis=this;var zoom=d3.behavior.zoom().on("zoom",function(){myThis.zoomBehaviour()});this.zoom=zoom;this.svg=d3.select("#"+this.getDomId(ID_SVG)).append("svg").attr("width",this.displayWidth+margin.left+margin.right).attr("height",this.displayHeight+margin.top+margin.bottom).attr(ATTR_CLASS,"D3graph").call(zoom).on("click",function(){myThis.click(d3.event)}).on("dblclick",function(){myThis.dbclick(d3.event)}).append("g").attr("transform","translate("+margin.left+","+margin.top+")");this.x=D3Util.getAxis(properties.graph.axis.x.type,[0,this.displayWidth-100]);this.y=D3Util.getAxis(properties.graph.axis.y.type,[this.displayHeight,0]);this.xAxis=d3.svg.axis().scale(this.x).orient("bottom");this.yAxis=d3.svg.axis().scale(this.y).orient("left");this.svg.append("g").attr(ATTR_CLASS,"x axis").attr("transform","translate(0,"+this.displayHeight+")").call(this.xAxis);this.svg.append("g").attr(ATTR_CLASS,"y axis").call(this.yAxis);var colors=["#00008B","#0000CD","#0000FF","#00FFFF","#7CFC00","#FFFF00","#FFA500","#FF4500","#FF0000","#8B0000"];var colorSpacing=100/(colors.length-1);var colorBar=D3Util.addColorBar(this.svg,colors,colorSpacing,this.displayWidth);this.color=d3.scale.category10();this.updateUI();},needsData:function(){return true;},initDialog:function(){this.addFieldsCheckboxes();},getDialogContents:function(){var height=this.getProperty(PROP_HEIGHT,"400");var html=HtmlUtils.div([ATTR_ID,this.getDomId(ID_FIELDS),ATTR_CLASS,"display-fields",]);html+=SUPER.getDialogContents.apply(this);return html;},fieldSelectionChanged:function(){this.updateUI();},updateUI:function(){var onlyZoom=false;if(!this.hasData()){return;}
test=this;var selectedFields=this.getSelectedFields();if(selectedFields.length==0){return;}
this.addFieldsCheckboxes();pointData=this.getData();if(pointData==null){console.log("no data");return;}
var fields=pointData.getNumericFields();var records=pointData.getRecords();var ranges=RecordUtil.getRanges(fields,records);var elevationRange=RecordUtil.getElevationRange(fields,records);var offset=(elevationRange[1]-elevationRange[0])*0.05;var x=this.x;var y=this.y;var color=this.color;var axis=properties.graph.axis;if(onlyZoom){this.zoom.x(this.x);this.zoom.y(this.y);}else{this.x.domain(d3.extent(records,function(d){return D3Util.getDataValue(axis.x,d,selectedFields[0].getIndex());}));this.y.domain(d3.extent(records,function(d){return D3Util.getDataValue(axis.y,d,selectedFields[0].getIndex());}));this.zoom.x(this.x);this.zoom.y(this.y);}
this.svg.selectAll(".y.axis").call(this.yAxis);this.svg.selectAll(".x.axis").call(this.xAxis);this.svg.selectAll(".line").remove();this.svg.selectAll(".legendElement").remove();var myThis=this;for(var fieldIdx=0;fieldIdx<selectedFields.length;fieldIdx++){var dataIndex=selectedFields[fieldIdx].getIndex();var range=ranges[dataIndex];var line=d3.svg.line().x(function(d){return x(D3Util.getDataValue(axis.x,d,selectedFields[fieldIdx].getIndex()));}).y(function(d){return y(D3Util.getDataValue(axis.y,d,selectedFields[fieldIdx].getIndex()));});displayLine=this.svg.append("path").datum(records).attr(ATTR_CLASS,"line").attr("d",line).on("mousemove",function(){myThis.mouseover(d3.event)}).attr("fill","none").attr("stroke",function(d){return color(fieldIdx);}).attr("stroke-width","0.5px");if(properties.graph.axis.z==FIELD_SELECTEDFIELD){displayLine.attr("stroke","url(#colorBarGradient)");}
if(properties.graph.derived!=null){var funcs=properties.graph.derived.split(",");for(funcIdx=0;funcIdx<funcs.length;funcIdx++){var func=funcs[funcIdx];if(func==FUNC_MOVINGAVERAGE){var movingAverageLine=d3.svg.line().x(function(d){return x(D3Util.getDataValue(axis.x,d,selectedFields[fieldIdx].getIndex()));}).y(function(d,i){if(i==0){return _movingSum=D3Util.getDataValue(axis.y,d,selectedFields[fieldIdx].getIndex());}else{_movingSum+=D3Util.getDataValue(axis.y,d,selectedFields[fieldIdx].getIndex());}
return y(_movingSum/i);}).interpolate("basis");this.svg.append("path").attr(ATTR_CLASS,"line").attr("d",movingAverageLine(records)).attr("fill","none").attr("stroke",function(d){return color(fieldIdx);}).attr("stroke-width","1.5px").attr("viewBox","50 50 100 100 ").style("stroke-dasharray",("3, 3"));}else{console.log("Error: Unknown derived function:"+func);}}}
this.svg.append("svg:rect").attr(ATTR_CLASS,"legendElement").attr("x",this.displayWidth-100).attr("y",(50+50*fieldIdx)).attr("stroke",function(d){return color(fieldIdx);}).attr("height",2).attr("width",40);this.svg.append("svg:text").attr(ATTR_CLASS,"legendElement").attr("x",this.displayWidth-100+40+10).attr("y",(55+55*fieldIdx)).attr("stroke",function(d){return color(fieldIdx);}).attr("style","font-size:50%").text(selectedFields[fieldIdx].getLabel());}},zoomBehaviour:function(){this.updateUI(true);},handleEventRecordSelection:function(source,args){},mouseover:function(){testing=d3.event;console.log("mouseover");},click:function(event){console.log("click:"+event);},dbclick:function(event){this.zoom();this.updateUI();},getSVG:function(){return this.svg;}});}
function RamaddaD3LineChartDisplay(displayManager,id,properties){var dfltProperties={};dfltProperties.graph={title:"Line chart",derived:FUNC_MOVINGAVERAGE,axis:{y:{type:TYPE_VALUE,fieldname:FIELD_SELECTEDFIELD},x:{type:TYPE_TIME,fieldname:FIELD_TIME,}}};properties=$.extend(dfltProperties,properties);return new RamaddaD3Display(displayManager,id,properties);}
function RamaddaProfileDisplay(displayManager,id,properties){var dfltProperties={};dfltProperties.graph={title:"Profile chart",derived:null,axis:{y:{type:TYPE_ELEVATION,fieldname:FIELD_DEPTH,fieldIdx:3,reverse:true},x:{type:TYPE_VALUE,fieldname:FIELD_VALUE,},}};properties=$.extend(dfltProperties,properties);return new RamaddaD3Display(displayManager,id,properties);}
function RamaddaGliderCrossSectionDisplay(displayManager,id,properties){var dfltProperties={};dfltProperties.graph={title:"Glider cross section",derived:null,axis:{y:{type:TYPE_ELEVATION,fieldname:FIELD_DEPTH,reverse:true},x:{type:TYPE_TIME,fieldname:FIELD_TIME,},z:FIELD_SELECTEDFIELD,}};properties=$.extend(dfltProperties,properties);return new RamaddaD3Display(displayManager,id,properties);}
function RamaddaVennDisplay(displayManager,id,properties){var ID_VENN="venn";let SUPER=new RamaddaFieldsDisplay(displayManager,id,DISPLAY_VENN,properties);RamaddaUtil.inherit(this,SUPER);addRamaddaDisplay(this);$.extend(this,{getContentsStyle:function(){return"";},checkLayout:function(){this.updateUIInner();},updateUI:function(){var includes="<script src='"+ramaddaBaseUrl+"/lib/venn.js'></script>";this.writeHtml(ID_DISPLAY_TOP,includes);let _this=this;var func=function(){_this.updateUIInner();};setTimeout(func,10);},updateUIInner:function(){let records=this.filterData();if(!records){return;}
var allFields=this.getData().getRecordFields();var fields=this.getSelectedFields(allFields);if(fields.length==0)
fields=allFields;var strings=this.getFieldsOfType(fields,"string");if(strings.length==0){this.displayError("No string fields specified");return;}
var setInfos={};var setCnt=0;for(var rowIdx=0;rowIdx<records.length;rowIdx++){var row=this.getDataValues(records[rowIdx]);var keys=[];var key="";for(var fieldIdx=0;fieldIdx<strings.length;fieldIdx++){var field=strings[fieldIdx];var value=row[field.getIndex()];var setKey=field.getId()+"--"+value;keys.push(setKey);key+="--"+setKey;if(!Utils.isDefined(setInfos[setKey])){setInfos[setKey]={count:0,setIds:[setCnt],label:value,};setCnt++;}
setInfos[setKey].count++;}
var ids=[];if(!Utils.isDefined(setInfos[key])){for(var i=0;i<keys.length;i++){ids.push(setInfos[keys[i]].setIds[0]);}
setInfos[key]={count:0,setIds:ids,label:null,};}
setInfos[key].count++;}
var sets=[];for(var a in setInfos){var setInfo=setInfos[a];var obj={sets:setInfo.setIds,size:setInfo.count};if(setInfo.label)
obj.label=setInfo.label;sets.push(obj);}
this.writeHtml(ID_DISPLAY_CONTENTS,HtmlUtils.div(["id",this.getDomId(ID_VENN),"style","height:300px;"],""));var chart=venn.VennDiagram().width(600).height(400);var id="#"+this.getDomId(ID_VENN);var strokeColors=this.getColorTable(true,"strokeColors","nice");var fillColors=this.getColorTable(true,"fillColors","nice");var textColors=this.getColorTable(true,"textColors");if(!textColors)
textColors=strokeColors;d3.select(id).datum(sets).call(chart);d3.selectAll(id+" .venn-circle path").style("fill-opacity",parseFloat(this.getProperty("fillOpacity",0.5))).style("stroke-width",parseInt(this.getProperty("strokeWidth",1))).style("stroke-opacity",parseFloat(this.getProperty("strokeOpacity",0.5))).style("stroke",function(d,i){return i<strokeColors.length?strokeColors[i]:strokeColors[i%strokeColors.length];}).style("fill",function(d,i){return i<fillColors.length?fillColors[i]:fillColors[i%fillColors.length];})
d3.selectAll(id+" .venn-circle text").style("fill",function(d,i){return i<textColors.length?textColors[i]:textColors[i%textColors.length];}).style("font-size",this.getProperty("fontSize","16px")).style("font-weight",this.getProperty("fontWeight","100"));}});}
function RamaddaChernoffDisplay(displayManager,id,properties){var ID_VENN="venn";let SUPER=new RamaddaFieldsDisplay(displayManager,id,DISPLAY_VENN,properties);RamaddaUtil.inherit(this,SUPER);addRamaddaDisplay(this);$.extend(this,{getContentsStyle:function(){return"";},checkLayout:function(){this.updateUIInner();},timeout:100,written:false,updateUI:function(){if(!this.written){this.written=true;var includes="<script src='"+ramaddaBaseUrl+"/lib/chernoff.js'></script>";this.writeHtml(ID_DISPLAY_TOP,includes);}
this.updateUIInner();},updateUIInner:function(){let _this=this;if(!Utils.isDefined(d3.chernoff)){this.timeout=this.timeout*2;var func=function(){_this.updateUIInner();};setTimeout(func,this.timeout);return;}
let records=this.filterData();if(!records){return;}
var allFields=this.getData().getRecordFields();var fields=this.getSelectedFields(allFields);var numericFields=this.getFieldsOfType(fields,"numeric");if(numericFields.length==0){this.displayError("No numeric fields specified");return;}
if(fields.length==0)
fields=allFields;var string=this.getFieldOfType(fields,"string");var legend="";var colorField=this.getFieldById(allFields,this.getProperty("colorBy"));var colorscale;if(colorField){var colors=this.getColorTable(true,null,"blue_white_red");var colorValues=this.getColumnValues(records,colorField);colorscale=[];var min=parseFloat(this.getProperty("colorByMin",colorValues.min));var max=parseFloat(this.getProperty("colorByMax",colorValues.max));var range=max-min;for(var i=0;i<colorValues.values.length;i++){var value=colorValues.values[i];var percent=(value-min)/range;var idx=Math.round(percent*(colors.length-1));colorscale.push(colors[idx]);}
this.displayColorTable(colors,ID_DISPLAY_BOTTOM,min,max);legend+="<b>Colored by</b>: "+colorField.getLabel()+"&nbsp;&nbsp;";}
var attrs=[{label:"Face width",name:"face",key:"f",min:0,max:1},{label:"Hair",name:"hair",key:"h",min:-1,max:1},{label:"Mouth",name:"mouth",key:"m",min:-1,max:1},{label:"Nose height",name:"noseHeight",key:"nh",min:0,max:1},{label:"Nose width",name:"noseWidth",key:"nw",min:0,max:1},{label:"Eyes height",name:"eyesHeight",key:"eh",min:0,max:1},{label:"Eyes width",name:"eyesWidth",key:"ew",min:0,max:1},{label:"Brow",name:"brow",key:"b",min:-1,max:1}];var html="";var showHelp=this.getProperty("showHelp",false);if(showHelp){html+="Settings:<br><table class=ramadda-table><thead><tr><th>Attribute&nbsp;</th><th>&nbsp;Default range&nbsp;</th><th>&nbsp;Set field&nbsp;</th><th>&nbsp;Set min&nbsp;</th><th>&nbsp;Set max&nbsp;</th></tr></thead><tbody>";}
for(a in attrs){var attr=attrs[a];if(showHelp){html+="<tr><td>"+attr.label+"</td><td align=center>"+attr.min+" - "+attr.max+"</td><td>"+attr.name+"Field=&lt;field_id&gt;"+"</td><td>"+attr.name+"Min=&lt;min_value&gt;"+"</td><td>"+attr.name+"Max=&lt;max_value&gt;"+"</td></tr>";}
attr.field=this.getFieldById(allFields,this.getProperty(attr.name+"Field"));if(attr.field){legend+="<b>"+attr.label+"</b>: "+attr.field.getLabel()+"&nbsp;&nbsp;";if(Utils.isDefined(this.getProperty(attr.name+"Min"))){attr.min=parseFloat(this.getProperty(attr.name+"Min"));}
if(Utils.isDefined(this.getProperty(attr.name+"Max"))){attr.max=parseFloat(this.getProperty(attr.name+"Max"));}
attr.column=this.getColumnValues(records,attr.field);}}
if(showHelp){html+="</tbody></table>";}
var sortField=this.getFieldById(allFields,this.getProperty("sortBy"));var rows=[];for(var rowIdx=0;rowIdx<records.length;rowIdx++){var blob={values:this.getDataValues(records[rowIdx])};if(colorscale)blob.color=colorscale[rowIdx]
rows.push(blob);}
if(sortField){rows.sort(function(a,b){var v1=a.values[sortField.getIndex()];var v2=b.values[sortField.getIndex()];if(v1<v2)return 1;if(v1>v2)return-1;return 0;});}
var data=[];for(var rowIdx=0;rowIdx<rows.length;rowIdx++){var blob=rows[rowIdx];var row=blob.values;var color=blob.color;var faceData={f:0.5,h:0,m:0,nh:0.5,nw:0.5,eh:0.5,ew:0.5,b:0};data.push({faceData:faceData,color:color});var tt="";for(a in attrs){var attr=attrs[a];var field=attr.field;if(!field){faceData[attr.key]=attr.min+(attr.max-attr.min)/2;}else{var value=row[field.getIndex()];var min=attr.column.min;var max=attr.column.max;tt+=field.getLabel()+": "+value+" range: "+min+" - "+max+" ("+attr.label+")\n";if(max!=min){var percent=(value-min)/(max-min);var adjValue=attr.min+(attr.max-attr.min)*percent;faceData[attr.key]=adjValue;}}}
var label=(string?row[string.getIndex()]:"Row: "+rowIdx);var labelValue=(string?row[string.getIndex()]:"");label=HtmlUtils.div(["class","display-chernoff-label"],label);var div=HtmlUtils.div(["id",this.getDomId("chernoff")+"_"+rowIdx,"class","display-chernoff-face"],"");html+=HtmlUtils.div(["title",tt,"class","display-chernoff-wrapper ramadda-div-link","value",labelValue],div+label);}
legend=HtmlUtils.div(["class","display-chernoff-legend"],legend);var height=this.getProperty("height","400px");if(!height.endsWith("px"))height+="px";this.writeHtml(ID_DISPLAY_CONTENTS,legend+HtmlUtils.div(["style","height:"+height+";","class","display-chernoff-container","id",this.getDomId("chernoff")],html));for(var rowIdx=0;rowIdx<records.length;rowIdx++){var div="#"+this.getDomId("chernoff")+"_"+rowIdx;this.makeFace(div,data[rowIdx].faceData,data[rowIdx].color);}
if(string){$("#"+this.getDomId(ID_DISPLAY_CONTENTS)).find(".ramadda-div-link").click(function(){var value=$(this).attr("value");_this.propagateEvent("handleEventFieldValueSelect",{field:string,value:value});});}},makeFace:function(div,faceData,color){function chernoffFace(){var width=400,height=200;var chernoff=d3.chernoff().face(function(d){return d.f;}).hair(function(d){return d.h;}).mouth(function(d){return d.m;}).nosew(function(d){return d.nw;}).noseh(function(d){return d.nh;}).eyew(function(d){return d.ew;}).eyeh(function(d){return d.eh;}).brow(function(d){return d.b;});function data(){return[faceData];}
function drawFace(selection){var svg=selection.append("svg").attr("width",width).attr("height",height);var face=svg.selectAll("g.chernoff").data(data()).enter().append("g").attr("class","chernoff").call(chernoff);if(color)
face.attr("style","fill:"+color);}
function draw(selection){selection.call(drawFace);}
return draw;}
d3.select(div).call(chernoffFace());}});}
function RamaddaD3bubbleDisplay(displayManager,id,properties){const ID_BUBBLES="bubbles";var SUPER;RamaddaUtil.inherit(this,SUPER=new RamaddaDisplay(displayManager,id,DISPLAY_D3BUBBLE,properties));addRamaddaDisplay(this);if(!window["BubbleChart"]){Utils.importJS(ramaddaBaseUrl+"/lib/d3/d3-legend.min.js");Utils.importJS(ramaddaBaseUrl+"/lib/d3/bubblechart.js");}
RamaddaUtil.defineMembers(this,{needsData:function(){return true;},callbackWaiting:false,getWikiEditorTags:function(){return Utils.mergeLists(SUPER.getWikiEditorTags(),["label:Bubble Chart",'labelField=""','colorBy=""','valueField=""','descriptionField=""','imageField=""','sizeLabel1=""','sizeLabel2=""','showSizeLegend=false'])},updateUI:function(){if(!window["BubbleChart"]){if(!this.callbackWaiting){this.callbackWaiting=true;setTimeout(()=>{this.callbackWaiting=false;this.updateUI()},100);}
return;}
let colorByField=this.getFieldById(null,this.getProperty("colorBy","category"));let valueField=this.getFieldById(null,this.getProperty("valueField"));if(colorByField)
this.setProperty("sortFields",colorByField.getId());var records=this.filterData();if(!records){return;}
let data=[];let html=HtmlUtil.tag("svg",["id",this.getDomId(ID_BUBBLES),"width","100%","height","700","font-family","sans-serif","font-size","10","text-anchor","middle"])
this.jq(ID_DISPLAY_CONTENTS).html(html);let values;let min=0;let max=0;if(valueField){values=this.getColumnValues(records,valueField).values;values.map((v,idx)=>{min=idx==0?v:Math.min(v,min);max=idx==0?v:Math.max(v,max);});}
let labelField=this.getFieldById(null,this.getProperty("labelField","name"));let descField=this.getFieldById(null,this.getProperty("descriptionField"));let imageField=this.getFieldById(null,this.getProperty("imageField"));let template=this.getProperty("template","${default}");if(!labelField){this.setContents(this.getMessage("No label field found"));return}
records.map(r=>{let desc=descField?r.getValue(descField.getIndex()):this.getRecordHtml(r,null,template);let label=r.getValue(labelField.getIndex());let obj={name:label,icon:label,desc:desc,cat:"",value:10,}
if(colorByField)
obj.cat=r.getValue(colorByField.getIndex());if(valueField)
obj.value=r.getValue(valueField.getIndex());if(imageField)
obj.icon=r.getValue(imageField.getIndex());data.push(obj);});if(data.length==0){this.setContents(this.getMessage("No data"));return;}
let colors=this.getColorTable(true);new BubbleChart("#"+this.getDomId(ID_BUBBLES),data,{label1:this.getProperty("sizeLabel1"),label2:this.getProperty("sizeLabel2"),colors:colors,showSizeLegend:this.getProperty("showSizeLegend",valueField!=null)});}})}
var DISPLAY_WORDCLOUD="wordcloud";var DISPLAY_TEXTSTATS="textstats";var DISPLAY_FREQUENCY="frequency";var DISPLAY_TEXTANALYSIS="textanalysis";var DISPLAY_TEXTRAW="textraw";var DISPLAY_TEXT="text";var DISPLAY_CARDS="cards";var DISPLAY_BLOCKS="blocks";var DISPLAY_TEMPLATE="template";var DISPLAY_SLIDES="slides";var DISPLAY_IMAGES="images";var DISPLAY_TOPFIELDS="topfields";addGlobalDisplayType({type:DISPLAY_TEXT,label:"Text Readout",requiresData:true,forUser:true,category:CATEGORY_MISC});addGlobalDisplayType({type:DISPLAY_CARDS,label:"Cards",requiresData:true,forUser:true,category:CATEGORY_MISC});addGlobalDisplayType({type:DISPLAY_IMAGES,label:"Images",requiresData:true,forUser:true,category:CATEGORY_MISC});addGlobalDisplayType({type:DISPLAY_TEMPLATE,label:"Template",requiresData:true,forUser:true,category:"Text"});addGlobalDisplayType({type:DISPLAY_SLIDES,label:"Slides",requiresData:true,forUser:true,category:"Text"});addGlobalDisplayType({type:DISPLAY_TOPFIELDS,label:"Top Fields",requiresData:true,forUser:true,category:CATEGORY_MISC});addGlobalDisplayType({type:DISPLAY_WORDCLOUD,forUser:true,label:"Word Cloud",requiresData:true,category:"Text"});addGlobalDisplayType({type:DISPLAY_TEXTSTATS,forUser:true,label:"Text Stats",requiresData:true,category:"Text"});addGlobalDisplayType({type:DISPLAY_FREQUENCY,forUser:true,label:"Frequency",requiresData:true,category:"Text"});addGlobalDisplayType({type:DISPLAY_TEXTRAW,forUser:true,label:"Text Raw",requiresData:true,category:"Text"});addGlobalDisplayType({type:DISPLAY_TEXTANALYSIS,forUser:true,label:"Text Analysis",requiresData:true,category:"Text"});addGlobalDisplayType({type:DISPLAY_BLOCKS,forUser:true,label:"Blocks",requiresData:false,category:"Other Charts"});function RamaddaBaseTextDisplay(displayManager,id,type,properties){var ID_TEXTBLOCK="textblock";let SUPER=new RamaddaFieldsDisplay(displayManager,id,type,properties);RamaddaUtil.inherit(this,SUPER);$.extend(this,{processText:function(cnt){let records=this.filterData();if(!records){return null;}
var fieldInfo={};var allFields=this.getData().getRecordFields();var fields=this.getSelectedFields(allFields);if(fields.length==0)
fields=allFields;var strings=this.getFieldsOfType(fields,"string");if(strings.length==0){this.displayError("No string fields specified");return null;}
var minLength=parseInt(this.getProperty("minLength",0));var maxLength=parseInt(this.getProperty("maxLength",100));var stopWords=this.getProperty("stopWords");if(stopWords){if(stopWords=="default"){stopWords=Utils.stopWords;}else{stopWords=stopWords.split(",");}}
var extraStopWords=this.getProperty("extraStopWords");if(extraStopWords)extraStopWords=extraStopWords.split(",");var stripTags=this.getProperty("stripTags",false);var tokenize=this.getProperty("tokenize",false);var lowerCase=this.getProperty("lowerCase",false);var removeArticles=this.getProperty("removeArticles",false);if(cnt){cnt.count=0;cnt.total=0;cnt.lengths={};}
for(var rowIdx=0;rowIdx<records.length;rowIdx++){var row=this.getDataValues(records[rowIdx]);for(var fieldIdx=0;fieldIdx<strings.length;fieldIdx++){var field=strings[fieldIdx];if(!fieldInfo[field.getId()]){fieldInfo[field.getId()]={field:field,words:[],counts:{},divId:this.getDomId(ID_TEXTBLOCK+(field.getIndex())),}}
var fi=fieldInfo[field.getId()];var value=row[field.getIndex()];if(stripTags){value=Utils.stripTags(value);}
var values=[value];if(tokenize){values[0]=values[0].replace(/\"/g," ");values=Utils.tokenizeWords(values[0],stopWords,extraStopWords,removeArticles);}
for(var valueIdx=0;valueIdx<values.length;valueIdx++){var value=values[valueIdx].trim();if(values.length>1&&value.length<=1)continue;if(value.startsWith("&"))continue;var _value=value.toLowerCase();if(cnt){cnt.count++;cnt.total+=value.length;if(!Utils.isDefined(cnt.lengths[value.length]))
cnt.lengths[value.length]=0;cnt.lengths[value.length]++;}
if(!tokenize){if(stopWords&&stopWords.includes(_value))continue;if(extraStopWords&&extraStopWords.includes(_value))continue;}
if(value.length>maxLength)continue;if(value.length<minLength)continue;if(lowerCase)value=value.toLowerCase();if(!Utils.isDefined(fi.counts[value])){fi.counts[value]=0;}
fi.counts[value]++;}}}
return fieldInfo;}});}
function RamaddaWordcloudDisplay(displayManager,id,properties){var SUPER;RamaddaUtil.inherit(this,SUPER=new RamaddaBaseTextDisplay(displayManager,id,DISPLAY_WORDCLOUD,properties));addRamaddaDisplay(this);$.extend(this,{getWikiEditorTags:function(){return Utils.mergeLists(SUPER.getWikiEditorTags(),["label:Wordlcloud Attributes",'termField=','tokenize=true','handleClick="true"','showFieldLabel="true"','tokenize="true"','tableFields=','showRecords="true"','combined="false"','shape="rectangle"'])},getContentsStyle:function(){return"";},checkLayout:function(){this.updateUIInner();},updateUI:function(){if(!this.loadedJq){this.loadedJq=true;var includes="<link rel='stylesheet' href='"+ramaddaBaseUrl+"/lib/jqcloud.min.css'>";includes+="<script src='"+ramaddaBaseUrl+"/lib/jqcloud.min.js'></script>";this.writeHtml(ID_DISPLAY_TOP,includes);let _this=this;var func=function(){_this.updateUIInner();};setTimeout(func,10);}else{this.updateUIInner();}},updateUIInner:function(){let records=this.filterData();if(records==null)return;var options={autoResize:true,};var colors=this.getColorTable(true);if(colors){options.colors=colors,options.classPattern=null;options.fontSize={from:0.1,to:0.02};}
if(this.getProperty("shape"))
options.shape=this.getProperty("shape");let countField=this.getFieldById(null,this.getProperty("countField"));let termField=this.getFieldById(null,this.getProperty("termField"));if(countField&&termField){var minLength=parseInt(this.getProperty("minLength",0));var maxLength=parseInt(this.getProperty("maxLength",100));var stopWords=this.getProperty("stopWords");if(stopWords){if(stopWords=="default"){stopWords=Utils.stopWords;}else{stopWords=stopWords.split(",");}}
let info=[];let wordToWeight={};records.every(r=>{let word=r.getValue(termField.getIndex());let _word=word.toLowerCase();if(stopWords&&stopWords.includes(_word))return true;if(!wordToWeight[word]){wordToWeight[word]=0;}
wordToWeight[word]+=r.getValue(countField.getIndex());return true;});let handlers=null;let _this=this;if(this.getProperty("handleClick",true)){handlers={click:function(w){var word=w.target.innerText;_this.showRows(records,null,word);}}};for(word in wordToWeight){info.push({text:word,html:{style:"cursor:pointer;"},weight:wordToWeight[word],handlers:handlers,});}
this.writeHtml(ID_DISPLAY_CONTENTS,HU.div([ID,this.getDomId("words"),STYLE,HU.css('height','300px')],""));$("#"+this.getDomId("words")).jQCloud(info,options);return}
var fieldInfo=this.processText();if(fieldInfo==null)return;var allFields=this.getData().getRecordFields();var fields=this.getSelectedFields(allFields);if(fields.length==0)
fields=allFields;var strings=this.getFieldsOfType(fields,"string");let _this=this;var divs="";var words=[];var maxWords=parseInt(this.getProperty("maxWords",-1));var minCount=parseInt(this.getProperty("minCount",0));var width=(100*1/strings.length)+"%;";for(a in fieldInfo){var fi=fieldInfo[a];let field=fi.field;var handlers=null;if(this.getProperty("handleClick",true)){handlers={click:function(w){var word=w.target.innerText;_this.showRows(records,field,word);}}};var counts=[];for(word in fi.counts){var count=fi.counts[word];counts.push({word:word,count:count});}
counts.sort(function(a,b){if(a.count<b.count)return-1;if(a.count>b.count)return 1;return 0;});if(minCount>0){var tmp=[];for(var i=0;i<counts.length;i++){if(counts[i].count>=minCount)
tmp.push(counts[i]);}
counts=tmp;}
if(maxWords>0){var tmp=[];for(var i=0;i<=maxWords&&i<counts.length;i++){if(counts[i].count>=minCount)
tmp.push(counts[i]);}
counts=tmp;}
for(var wordIdx=0;wordIdx<counts.length;wordIdx++){var word=counts[wordIdx];var obj1={weight:word.count,html:{style:"cursor:pointer;"},handlers:handlers,text:word.word,};var obj2={weight:word.count,html:{style:"cursor:pointer;"},handlers:handlers,text:field.getLabel()+":"+word.word,};fi.words.push(obj1);words.push(obj2);}
var label="";if(this.getProperty("showFieldLabel",true))
label=HU.b(fi.field.getLabel());divs+=HU.div([STYLE,HU.css('display','inline-block','width',width)],label+HU.div([STYLE,HU.css('border','1px #ccc solid','height','300px'),ID,fi.divId],""));}
this.writeHtml(ID_DISPLAY_CONTENTS,"");if(this.getProperty("combined",false)){this.writeHtml(ID_DISPLAY_CONTENTS,HU.div([ID,this.getDomId("words"),STYLE,HU.css('height','300px')],""));$("#"+this.getDomId("words")).jQCloud(words,options);}else{this.writeHtml(ID_DISPLAY_CONTENTS,divs);for(a in fieldInfo){var fi=fieldInfo[a];$("#"+fi.divId).jQCloud(fi.words,options);}}},showRows:function(records,field,word){if(!field)
field=this.getFieldById(null,this.getProperty("termField"));var tokenize=this.getProperty("tokenize",false);if(fields&&word.startsWith(field.getLabel()+":")){word=word.replace(field.getLabel()+":","");}
var tableFields;if(this.getProperty("tableFields")){tableFields={};var list=this.getProperty("tableFields").split(",");for(a in list){tableFields[list[a]]=true;}}
var fields=this.getData().getRecordFields();var html="";var data=[];var header=[];data.push(header);for(var fieldIdx=0;fieldIdx<fields.length;fieldIdx++){var f=fields[fieldIdx];if(tableFields&&!tableFields[f.getId()])continue;header.push(fields[fieldIdx].getLabel());}
var showRecords=this.getProperty("showRecords",false);if(showRecords){html+="<br>";}
var re=new RegExp("(\\b"+word+"\\b)",'i');for(var rowIdx=0;rowIdx<records.length;rowIdx++){var row=this.getDataValues(records[rowIdx]);var value=row[field.getIndex()];if(tokenize){if(!value.match(re)){continue;}}else{if(word!=value){continue;}}
var tuple=[];data.push(tuple);for(var col=0;col<fields.length;col++){var f=fields[col];if(tableFields&&!tableFields[f.getId()])continue;var v=row[f.getIndex()];if(v.getTime){v={v:v,f:this.formatDate(v)};}else{if(tokenize){v=v.replace(re,"<span style=background:yellow;>$1</span>");}}
if(showRecords){html+=HU.b(f.getLabel())+": "+v+"</br>";}else{tuple.push(v);}}
if(showRecords){html+="<p>";}}
if(showRecords){this.writeHtml(ID_DISPLAY_BOTTOM,HU.center(html));}else{var prefix="";if(!tokenize){prefix=(field?field.getLabel():"Word")+"="+word}
this.writeHtml(ID_DISPLAY_BOTTOM,HU.center(prefix+HU.div([ID,this.getDomId("table"),STYLE,HU.css('height','300px')],"")));var dataTable=google.visualization.arrayToDataTable(data);this.chart=new google.visualization.Table(document.getElementById(this.getDomId("table")));this.chart.draw(dataTable,{allowHtml:true});}}});}
function RamaddaCardsDisplay(displayManager,id,properties){var ID_RESULTS="results";let SUPER=new RamaddaFieldsDisplay(displayManager,id,DISPLAY_CARDS,properties);Utils.importJS(ramaddaBaseUrl+"/lib/color-thief.umd.js",()=>{},(jqxhr,settings,exception)=>{console.log("err");});RamaddaUtil.inherit(this,SUPER);addRamaddaDisplay(this);$.extend(this,{getWikiEditorTags:function(){return Utils.mergeLists(SUPER.getWikiEditorTags(),["label:Cards Attributes","groupByFields=\"\"","groupBy=\"\"","tooltipFields=\"\"","initGroupFields=\"\"","captionTemplate=\"${name}\"","sortFields=\"\"","labelField=\"\"",'imageWidth="100"','imageMargin="5"',])},getContentsStyle:function(){return"";},updateUI:function(){this.colorAnalysisEnabled=this.getProperty("doColorAnalysis");var pointData=this.getData();if(pointData==null)return;var allFields=pointData.getRecordFields();var fields=this.getSelectedFields(allFields);if(fields==null||fields.length==0){fields=allFields;}
var records=this.filterData();if(!records)return;let theFields=fields;this.initGrouping=this.getFieldsByIds(fields,this.getProperty("initGroupFields","",true));this.groupByFields=this.getFieldsByIds(fields,this.getProperty("groupByFields","",true));this.groupByMenus=+this.getProperty("groupByMenus",this.groupByFields.length);this.imageField=this.getFieldOfType(fields,"image");this.urlField=this.getFieldOfType(fields,"url");this.tooltipFields=this.getFieldsByIds(fields,this.getProperty("tooltipFields","",true));this.labelFields=this.getFieldsByIds(fields,this.getProperty("labelFields",null,true));if(this.labelFields.length==0){var tmp=this.getFieldById(fields,this.getProperty("labelField",null,true));if(tmp){this.labelFields.push(tmp);}}
this.onlyShowImages=this.getProperty("onlyShowImages",false);this.altLabelField=this.getFieldById(fields,this.getProperty("altLabelField",null,true));this.captionFields=this.getFieldsByIds(fields,this.getProperty("captionFields","",true));this.captionTemplate=this.getProperty("captionTemplate",null,true);if(this.captionFields.length==0)this.captionFields=this.tooltipFields;this.colorByField=this.getFieldById(fields,this.getProperty("colorBy",null,true));this.colorList=this.getColorTable(true);this.foregroundList=this.getColorTable(true,"foreground");if(!this.getProperty("showImages",true))this.imageField=null;if(!this.imageField){if(this.captionFields.length==0){this.displayError("No image or caption fields specified");return;}}
var contents="";if(!this.groupByHtml){this.groupByHtml="";if(this.colorAnalysisEnabled)
this.groupByHtml+=HU.span([CLASS,"ramadda-button",ID,this.getDomId("docolors")],"Do colors")+" "+
HU.span([CLASS,"ramadda-button",ID,this.getDomId("docolorsreset")],"Reset");if(this.groupByFields.length>0){var options=[["","--"]];this.groupByFields.map(field=>{options.push([field.getId(),field.getLabel()]);});this.groupByHtml+=HU.span([CLASS,"display-fitlerby-label"]," Group by: ");for(var i=0;i<this.groupByMenus;i++){var selected="";if(i<this.initGrouping.length){selected=this.initGrouping[i].getId();}
this.groupByHtml+=HU.select("",[ID,this.getDomId(ID_GROUPBY_FIELDS+i)],options,selected)+"&nbsp;";}
this.groupByHtml+="&nbsp;";this.jq(ID_HEADER1).html(HU.div([CLASS,"display-filterby"],this.groupByHtml));this.jq("docolors").button().click(()=>{this.analyzeColors();});this.jq("docolorsreset").button().click(()=>{this.updateUI();});}}
contents+=HU.div([ID,this.getDomId(ID_RESULTS)]);this.writeHtml(ID_DISPLAY_CONTENTS,contents);let _this=this;this.jq(ID_HEADER1).find("input, input:radio,select").change(function(){_this.updateUI();});this.displaySearchResults(records,theFields);},analyzeColors:function(){if(!window["ColorThief"]){setTimeout(()=>this.analyzeColors(),1000);return;}
const colorThief=new ColorThief();var cnt=0;while(true){var img=document.querySelector('#'+this.getDomId("gallery")+"img"+cnt);var div=$('#'+this.getDomId("gallery")+"div"+cnt);cnt++;if(!img){return;}
img.crossOrigin='Anonymous';var c=colorThief.getColor(img);var p=colorThief.getPalette(img);var width=img.width/p.length;var html="";for(var i=0;i<p.length;i++){var c=p[i];html+=HU.div([STYLE,HU.css('display','inline-block','width',width+"px','height', img.height +'px','background','rgb("+c[0]+","+c[1]+","+c[2]+")")],"");}
div.css("width",img.width);div.css("height",img.height);div.html(html);img.style.display="none";}},displaySearchResults:function(records,fields){records=this.sortRecords(records);var fontSize=this.getProperty("fontSize",null);var cardStyle=this.getProperty("cardStyle",null);var width=this.getProperty("imageWidth","50");var margin=this.getProperty("imageMargin","0");var groupFields=[];var seen=[];for(var i=0;i<this.groupByMenus;i++){var id=this.jq(ID_GROUPBY_FIELDS+i).val();if(!seen[id]){seen[id]=true;var field=this.getFieldById(fields,id);if(field){groupFields.push(field);if(field.isNumeric()&&!field.range){var min=Number.MAX_VALUE;var max=Number.MIN_VALUE;records.map(r=>{r=this.getDataValues(r);var v=field.getValue(r);if(isNaN(v))return;if(v<min)min=v;if(v>max)max=v;});field.range=[min,max];var binsProp=this.getProperty(field.getId()+".bins");field.bins=[];if(binsProp){var l=binsProp.split(",");for(var i=0;i<l.length-1;i++){field.bins.push([+l[i],+l[i+1]]);}}else{var numBins=+this.getProperty(field.getId()+".binCount",10);field.binSize=(max-min)/numBins;for(var bin=0;bin<numBins;bin++){field.bins.push([min+field.binSize*bin,min+field.binSize*(bin+1)]);}}}}}}
function groupNode(id,field){$.extend(this,{id:id,field:field,members:[],isGroup:true,getCount:function(){if(this.members.length==0)return 0;if(this.members[0].isGroup){var cnt=0;this.members.map(node=>cnt+=node.getCount());return cnt;}
return this.members.length;},findGroup:function(v){for(var i=0;i<this.members.length;i++){if(this.members[i].isGroup&&this.members[i].id==v)return this.members[i];}
return null;},});}
var topGroup=new groupNode("");var colorMap={};var colorCnt=0;var imgCnt=0;for(var rowIdx=0;rowIdx<records.length;rowIdx++){var row=this.getDataValues(records[rowIdx]);var contents="";var tooltip="";this.tooltipFields.map(field=>{if(tooltip!="")tooltip+="&#10;";tooltip+=field.getValue(row);});tooltip=tooltip.replace(/\"/g,"&quot;");var label="";var caption="";if(this.captionFields.length>0){if(this.captionTemplate)caption=this.captionTemplate;this.captionFields.map(field=>{var value=(""+field.getValue(row)).replace(/\"/g,"&quot;");if(this.captionTemplate)
caption=caption.replace("\${"+field.getId()+"}",value);else
caption+=value+"<br>";});if(this.urlField){var url=this.urlField.getValue(row);if(url&&url!=""){caption="<a style='color:inherit;'  href='"+url+"' target=_other>"+caption+"</a>";}}}
this.labelFields.map(f=>{label+=row[f.getIndex()]+" ";});label=label.trim();var html="";var img=null;if(this.imageField){img=row[this.imageField.getIndex()];if(this.onlyShowImages&&!Utils.stringDefined(img))continue;}
var imgAttrs=[CLASS,"display-cards-popup","data-fancybox",this.getDomId("gallery"),"data-caption",caption];if(img)img=img.trim();if(Utils.stringDefined(img)){if(this.colorAnalysisEnabled)
img=ramaddaBaseUrl+"/proxy?url="+img;img=HU.href(img,HU.div([ID,this.getDomId("gallery")+"div"+imgCnt],HU.image(img,["width",width,ID,this.getDomId("gallery")+"img"+imgCnt])),imgAttrs)+label;imgCnt++;html=HU.div([CLASS,"display-cards-item",TITLE,tooltip,STYLE,HU.css('margin',margin+'px')],img);}else{var style="";if(fontSize){style+=" font-size:"+fontSize+"; ";}
if(this.colorByField&&this.colorList){var value=this.colorByField.getValue(row);if(!Utils.isDefined(colorMap[value])){colorMap[value]=colorCnt++;}
var index=colorMap[value];if(index>=this.colorList.length){index=this.colorList.length%index;}
style+="background:"+this.colorList[index]+";";if(this.foregroundList){if(index<this.foregroundList.length){style+="color:"+this.foregroundList[index]+" !important;";}else{style+="color:"+this.foregroundList[this.foregroundList-1]+" !important;";}}}
if(cardStyle)
style+=cardStyle;var attrs=[TITLE,tooltip,CLASS,"ramadda-gridbox display-cards-card",STYLE,style];if(this.altLabelField){html=HU.div(attrs,this.altLabelField.getValue(row));}else{html=HU.div(attrs,caption);}
html=HU.href("",html,imgAttrs);}
var group=topGroup;for(var groupIdx=0;groupIdx<groupFields.length;groupIdx++){var groupField=groupFields[groupIdx];var value=row[groupField.getIndex()];if(groupField.isNumeric()){for(var binIdx=0;binIdx<groupField.bins.length;binIdx++){var bin=groupField.bins[binIdx];if(value<=bin[1]||binIdx==groupField.bins.length-1){value=Utils.formatNumber(bin[0])+" - "+Utils.formatNumber(bin[1]);break;}}}
var child=group.findGroup(value);if(!child){group.members.push(child=new groupNode(value,groupField));}
group=child;}
group.members.push(html);}
var html=HU.div([CLASS,"display-cards-header"],"Total"+" ("+topGroup.getCount()+")");html+=this.makeGroupHtml(topGroup);this.writeHtml(ID_RESULTS,html);this.jq(ID_RESULTS).find("a.display-cards-popup").fancybox({caption:function(instance,item){return $(this).data('caption')||'';}});},makeGroupHtml:function(group){if(group.members.length==0)return"";var html="";if(group.members[0].isGroup){group.members.sort((a,b)=>{if(a.id<b.id)return-1;if(a.id>b.id)return 1;return 0;});var width=group.members.length==0?"100%":100/group.members.length;html+="<table width=100% border=0><tr valign=top>";for(var i=0;i<group.members.length;i++){var child=group.members[i];var prefix="";if(child.field)
prefix=child.field.getLabel()+": ";html+="<td width="+width+"%>";html+=HU.div([CLASS,"display-cards-header"],prefix+child.id+" ("+child.getCount()+")");html+=this.makeGroupHtml(child);html+="</td>";}
html+="</tr></table>";}else{html+=Utils.join(group.members,"");}
return html;}});}
function RamaddaImagesDisplay(displayManager,id,properties){var ID_GALLERY="gallery";var ID_NEXT="next";var ID_PREV="prev";let SUPER=new RamaddaFieldsDisplay(displayManager,id,DISPLAY_IMAGES,properties);RamaddaUtil.inherit(this,SUPER);addRamaddaDisplay(this);$.extend(this,{startIndex:0,getWikiEditorTags:function(){return Utils.mergeLists(SUPER.getWikiEditorTags(),["label:Gallery Attributes",'labelFields=""','tooltipFields=""',"numberOfImages=\"100\"","imageWidth=\"150\"",])},dataFilterChanged:function(){this.startIndex=0;this.updateUI();},updateUI:function(){var pointData=this.getData();if(pointData==null)return;var records=this.filterData();if(!records)return;var fields=pointData.getRecordFields();var imageField=this.getFieldOfType(fields,"image");var labelFields=this.getFieldsByIds(fields,this.getProperty("labelFields",null,true));var tooltipFields=this.getFieldsByIds(fields,this.getProperty("tooltipFields",null,true));if(!imageField){this.setContents(this.getMessage("No image field in data"));return;}
var number=parseFloat(this.getProperty("numberOfImages",100));var width=parseFloat(this.getProperty("imageWidth",150));var contents="";var cnt=1;if(this.startIndex<0)this.startIndex=0;if(this.startIndex>records.length)this.startIndex=records.length-number;for(var rowIdx=this.startIndex;rowIdx<records.length;rowIdx++){if(cnt>number)break;cnt++;var row=this.getDataValues(records[rowIdx]);var image=row[imageField.getIndex()];if(image==""){continue;}
var label="";var tt="";if(labelFields.length>0){labelFields.map(l=>{label+=" "+row[l.getIndex()]});label=HU.div([CLASS,"display-images-label"],label.trim());}
if(tooltipFields.length>0){tooltipFields.map(l=>{tt+="\n"+l.getLabel()+": "+row[l.getIndex()]});}
tt=tt.trim();contents+=HU.div([CLASS,"display-images-block",TITLE,tt],HU.image(image,["width",width])+
label);}
var header="";if(this.startIndex>0){header+=HU.span([ID,this.getDomId(ID_PREV)],"Previous")+" ";}
if(this.startIndex+number<records.length){header+=HU.span([ID,this.getDomId(ID_NEXT)],"Next")+" ";}
cnt--;header+="Showing images "+(this.startIndex+1)+" - "+(this.startIndex+cnt);if(number<records.length)
header+=" of "+records.length+" total images";if(header!="")header=header+"<br>";this.writeHtml(ID_DISPLAY_CONTENTS,header+contents);this.jq(ID_PREV).button().click(()=>{this.startIndex-=number;this.updateUI();});this.jq(ID_NEXT).button().click(()=>{this.startIndex+=number;this.updateUI();});}})}
function RamaddaTemplateDisplay(displayManager,id,properties){if(!Utils.isDefined(properties.showTitle))properties.showTitle=false;if(!Utils.isDefined(properties.showMenu))properties.showMenu=false;if(!Utils.isDefined(properties.displayStyle))properties.displayStyle="background:rgba(0,0,0,0);";let SUPER=new RamaddaFieldsDisplay(displayManager,id,DISPLAY_TEMPLATE,properties);RamaddaUtil.inherit(this,SUPER);addRamaddaDisplay(this);$.extend(this,{getWikiEditorTags:function(){return Utils.mergeLists(SUPER.getWikiEditorTags(),["label:Template Attributes","template=\"\"","headerTemplate=\"... ${totalCount} ... ${selectedCount}\"","footerTemplate=\"... ${totalCount} ... ${selectedCount}\"","emptyMessage=\"\"","select=\"max|min|<|>|=|<=|>=|contains\"","selectField=\"\"","selectValue=\"\"",'onlyShowSelected=true','${&lt;field&gt;_total}','${&lt;field&gt;_max}','${&lt;field&gt;_min}','${&lt;field&gt;_average}','highightOnScroll=true',]);},dataFilterChanged:function(){if(this.getProperty("onlyShowSelected")&&this.selectedRecord){this.selectedRecord=null;this.writeHtml(ID_DISPLAY_CONTENTS,"");}
SUPER.dataFilterChanged.call(this);},updateUI:function(){var pointData=this.getData();if(pointData==null)return;var records=this.filterData();if(!records)return;if(this.getProperty("onlyShowSelected")){if(!this.selectedRecord){if(this.getProperty("showFirst",true)){this.selectedRecord=records[0];}}}
if(this.getProperty("onlyShowSelected")){if(!this.selectedRecord){this.writeHtml(ID_DISPLAY_CONTENTS,"");return;}
records=[this.selectedRecord];}
records=this.sortRecords(records);var fields=pointData.getRecordFields();var uniqueFields=this.getFieldsByIds(fields,this.getProperty("uniqueFields"));var uniqueMap={};var template=this.getProperty("template","");var select=this.getProperty("select","all");var selected=[];var summary={};var goodRecords=[];records.map(record=>{r=this.getDataValues(record);if(uniqueFields.length>0){var key="";uniqueFields.map(uf=>{key+="__"+uf.getValue(r);});if(Utils.isDefined(uniqueMap[key])){return;}
uniqueMap[key]=true;}
goodRecords.push(record);for(var i=0;i<fields.length;i++){var f=fields[i];var v=f.getValue(r);if(!summary[f.getId()]){summary[f.getId()]={total:0,min:v,max:v,count:0,uniques:{},uniqueCount:0}}
var s=summary[f.getId()];if(f.isString()){if(!s.uniques[v]){s.uniqueCount++;s.uniques[v]=true;}
continue;}
if(f.isDate&&v.getTime){if(v.getTime()<s.min.getTime())s.min=v;if(v.getTime()>s.max.getTime())s.max=v;}else if(!isNaN(v)){s.total+=v;s.min=Math.min(s.min,v);s.max=Math.max(s.max,v);s.count++;}}});records=goodRecords;for(var i=0;i<fields.length;i++){var f=fields[i];if(!f.isNumeric())continue;var s=summary[f.getId()];if(s&&s.count){s.average=s.total/s.count;}}
if(select=="max"||select=="min"||select=="="||select=="<"||select==">"||select=="<="||select=="?>="||select=="match"){var selectField=this.getProperty("selectField",null);if(selectField)selectField=this.getFieldById(null,selectField);if(!selectField){this.writeHtml(ID_DISPLAY_CONTENTS,"No selectField specified");return;}
var selectValue=this.getProperty("selectValue","0");var selectValueNum=parseFloat(selectValue);var max=0;var min=0;var cnt=0;var maxRecord;var minRecord;var equalsRecord;records.map(record=>{var v=record.getValue(selectField.getIndex());if(select=="match"){if(v.match(selectValue)){selected.push(record);}
return;}
if(select=="="){if(v==selectValue){selected.push(record);}
return;}
if(isNaN(v))return;if(select=="<"){if(v<selectValueNum){selected.push(record);}
return;}
if(select==">"){if(v>selectValueNum){selected.push(record);}
return;}
if(select==">="){if(v>=selectValueNum){selected.push(record);}
return;}
if(select=="<="){if(v<=selectValueNum){selected.push(record);}
return;}
if(cnt++==0){min=v;max=v;minRecord=record;maxRecord=record;return;}
if(v<min){min=v;minRecord=record;}
if(v>max){max=v;maxRecord=record;}});if(select=="min"){if(minRecord)
selected.push(minRecord);}else if(select=="max"){if(maxRecord)
selected.push(maxRecord);}}else{selected=records;}
var contents="";if(selected.length==0){contents=this.getProperty("emptyMessage","Nothing found");}
var colorBy=this.getColorByInfo(selected);let attrs={};attrs["selectedCount"]=selected.length;attrs["totalCount"]=records.length;for(var i=0;i<fields.length;i++){var f=fields[i];var s=summary[f.getId()];if(!s)continue;if(f.isDate){attrs[f.getId()+"_min"]=s.min;attrs[f.getId()+"_max"]=s.max;continue;}
if(s&&f.isString()){attrs[f.getId()+"_uniques"]=s.uniqueCount;continue;}
if(!f.isNumeric())continue;if(s){attrs[f.getId()+"_total"]=s.total;attrs[f.getId()+"_min"]=s.min;attrs[f.getId()+"_max"]=s.max;attrs[f.getId()+"_average"]=s.average;}}
var headerTemplate=this.getProperty("headerTemplate","");var footerTemplate=this.getProperty("footerTemplate","");if(selected.length==1){var row=this.getDataValues(selected[0]);headerTemplate=this.applyRecordTemplate(row,fields,headerTemplate);footerTemplate=this.applyRecordTemplate(row,fields,footerTemplate);}
if(this.filters){for(var filterIdx=0;filterIdx<this.filters.length;filterIdx++){let filter=this.filters[filterIdx];if(!filter.field)continue;let f=filter.field;if(f.isNumeric()){var min=$("#"+this.getDomId("filterby_"+f.getId()+"_min")).val().trim();var max=$("#"+this.getDomId("filterby_"+f.getId()+"_max")).val().trim();attrs["filter_"+f.getId()+"_min"]=min;attrs["filter_"+f.getId()+"_max"]=max;}else{var widget=$("#"+this.getDomId("filterby_"+f.getId()));if(!widget.val||widget.val()==null)continue;var value=widget.val();if(!value)continue;if(Array.isArray(value)){var tmp="";value.map(v=>{if(tmp!="")tmp+=", ";tmp+=v;});value=tmp;}
value=value.trim();if(value==FILTER_ALL){var regexp=new RegExp("\\${filter_"+f.getId()+"[^}]*\\}",'g');headerTemplate=headerTemplate.replace(regexp,"");footerTemplate=footerTemplate.replace(regexp,"");}else{var regexp=new RegExp("\\${filter_"+f.getId()+" +prefix='([^']*)' +suffix='([^']*)' *\\}",'g');headerTemplate=headerTemplate.replace(regexp,"$1"+value+"$2");footerTemplate=footerTemplate.replace(regexp,"$1"+value+"$2");var regexp=new RegExp("\\${filter_"+f.getId()+" +prefix='([^']*)' *\\}",'g');headerTemplate=headerTemplate.replace(regexp,"$1"+value);footerTemplate=footerTemplate.replace(regexp,"$1"+value);var regexp=new RegExp("\\${filter_"+f.getId()+" +suffix='([^']*)' *\\}",'g');headerTemplate=headerTemplate.replace(regexp,value+"$1");footerTemplate=footerTemplate.replace(regexp,value+"$1");var regexp=new RegExp("\\${filter_"+f.getId()+" *\\}",'g');headerTemplate=headerTemplate.replace(regexp,value);footerTemplate=footerTemplate.replace(regexp,value);}}}}
let th=Utils.tokenizeMacros(headerTemplate);let tf=Utils.tokenizeMacros(footerTemplate);headerTemplate=th.apply(attrs);footerTemplate=tf.apply(attrs);if(selected.length>0){contents+=headerTemplate;}
if(template!=""){var props=this.getTemplateProps(fields);var max=parseFloat(this.getProperty("maxNumber",-1));var cols=parseFloat(this.getProperty("templateColumns",-1));var colTag;if(cols>0){colTag="col-md-"+Math.round(12/cols);contents+='<div class="row-tight row">';}
var colCnt=0;var style=this.getProperty("templateStyle","");for(var rowIdx=0;rowIdx<selected.length;rowIdx++){if(max!=-1&&rowIdx>=max)break;if(cols>0){if(colCnt>=cols){colCnt=0;contents+='</div>\n';contents+='<div class="row-tight row">\n';}
contents+='<div  class="'+colTag+'">\n';colCnt++;}
var record=selected[rowIdx];var color=null;if(colorBy.index>=0){var value=record.getData()[colorBy.index];color=colorBy.getColor(value,record);}
let s=template.trim();let row=this.getDataValues(record);if(s=="${default}"){s=this.getRecordHtml(record,fields,s);}else{s=this.applyRecordTemplate(row,fields,s,props);}
let macros=Utils.tokenizeMacros(s);let rowAttrs={};rowAttrs["selectCount"]=selected.length;rowAttrs["totalCount"]=records.length;rowAttrs["recordIndex"]=rowIdx+1;var recordStyle=style;if(color){if(this.getProperty("colorBackground",false)){recordStyle="background: "+color+";"+recordStyle;}
rowAttrs["color"]=color;}
var tag=HU.openTag("div",[STYLE,recordStyle,ID,this.getId()+"-"+record.getId(),TITLE,"",CLASS,"display-template-record","recordIndex",rowIdx]);s=macros.apply(rowAttrs);if(s.startsWith("<td")){s=s.replace(/<td([^>]*)>/,"<td $1>"+tag);s=s.replace(/<\/td>$/,"</div></td>");contents+=s;}else if(s.startsWith("<tr")){s=s.replace(/<td([^>]*)>/g,"<td $1>"+tag);s=s.replace(/<\/td>/g,"</div></td>");contents+=s;}else{contents+=tag+s+"</div>"}
if(cols>0){contents+='</div>\n';}}
if(cols>0){contents+='</div>\n';}}
if(selected.length>0)
contents+=footerTemplate;this.writeHtml(ID_DISPLAY_CONTENTS,contents);this.addFieldClickHandler(null,null,false);var recordElements=this.jq(ID_DISPLAY_CONTENTS).find(".display-template-record");this.makeTooltips(recordElements,selected);this.makePopups(recordElements,selected);let _this=this;this.jq(ID_DISPLAY_CONTENTS).find(".display-template-record").click(function(){var record=selected[$(this).attr("recordIndex")];_this.handleEventRecordHighlight(this,{record:record,highlight:true,immediate:true,skipScroll:true});_this.getDisplayManager().notifyEvent("handleEventRecordSelection",_this,{highlight:true,record:record});});if(this.getProperty("highightOnScroll")){let items=this.jq(ID_DISPLAY_CONTENTS).find(".display-template-record");this.jq(ID_DISPLAY_CONTENTS).scroll(()=>{let topElement=null;items.each(function(){let pos=$(this).position();if(pos.top<0){topElement=$(this);}});if(topElement){var record=selected[topElement.attr("recordIndex")];if(record&&this.currentTopRecord&&record!=this.currentTopRecord){this.getDisplayManager().notifyEvent("handleEventRecordSelection",_this,{highlight:true,record:record});}
this.currentTopRecord=record;}});}},highlightCount:0,handleEventRecordSelection:function(source,args){this.selectedRecord=args.record;if(this.getProperty("onlyShowSelected")){this.updateUI();}else{args.highlight=true;this.handleEventRecordHighlight(source,args);}},handleEventRecordHighlight:function(source,args){this.currentTopRecord=null;let myCount=++this.highlightCount;var id="#"+this.getId()+"-"+args.record.getId();if(this.highlightedElement){this.unhighlightElement(this.highlightedElement);this.highlightedElement=null;}
if(args.highlight){if(args.immediate){this.highlightElement(args);}else{setTimeout(()=>{if(myCount==this.highlightCount){this.highlightElement(args);}},500);}}else{var id="#"+this.getId()+"-"+args.record.getId();var element=$(id);this.unhighlightElement(element);}},unhighlightElement:function(element){this.currentTopRecord=null;element.removeClass("display-template-record-highlight");var css=this.getProperty("highlightOffCss","").split(";");if(css.length>0){css.map(tok=>{var c=tok.split(":");var a=c[0];var v=c.length>1?c[1]:null;if(!v||v==""){v=element.attr("prev-"+a);}
if(v){element.css(a,v);}});}},highlightElement:function(args){var id="#"+this.getId()+"-"+args.record.getId();var element=$(id);this.highlightedElement=element;element.addClass("display-template-record-highlight");var css=this.getProperty("highlightOnCss","").split(";");if(css.length>0){css.map(tok=>{var c=tok.split(":");var a=c[0];var v=c.length>1?c[1]:null;if(!v||v==""){v=element.attr("prev-"+a);}
if(v){var oldV=element.css(a);if(oldV){element.attr("prev-"+a,oldV);}
element.css(a,v);}});}
try{if(!args.skipScroll){var eo=element.offset();if(eo==null)return;var container=this.jq(ID_DISPLAY_CONTENTS);if(this.getProperty("orientation","vertical")=="vertical"){var c=container.offset().top;var s=container.scrollTop();container.scrollTop(eo.top-c+s)}else{var c=container.offset().left;var s=container.scrollLeft();container.scrollLeft(eo.left-c+s)}}}catch(err){console.log("Error:"+err);}}})}
function RamaddaSlidesDisplay(displayManager,id,properties){var ID_SLIDE="slide";var ID_PREV="prev";var ID_NEXT="next";if(!Utils.isDefined(properties.displayStyle))properties.displayStyle="background:rgba(0,0,0,0);";let SUPER=new RamaddaFieldsDisplay(displayManager,id,DISPLAY_SLIDES,properties);RamaddaUtil.inherit(this,SUPER);addRamaddaDisplay(this);$.extend(this,{slideIndex:0,getWikiEditorTags:function(){return Utils.mergeLists(SUPER.getWikiEditorTags(),["label:Slides Attributes","template=\"\"",]);},handleEventRecordSelection:function(source,args){if(!this.records)return;var index=-1;for(var i=0;i<this.records.length;i++){if(this.records[i].getId()==args.record.getId()){index=i;break;}}
if(index>=0){this.slideIndex=index;this.displaySlide();}},getContentsStyle:function(){var style="";var height=this.getHeightForStyle();if(height){style+=" height:"+height+";";}
var width=this.getWidthForStyle();if(width){style+=" width:"+width+";";}
return style;},updateUI:function(){var pointData=this.getData();if(pointData==null)return;this.records=this.filterData();if(!this.records)return;this.fields=this.getData().getRecordFields();this.records=this.sortRecords(this.records);var template=this.getProperty("template","");var slideWidth=this.getProperty("slideWidth","100%");var height=this.getHeightForStyle("400");var left=HU.div([ID,this.getDomId(ID_PREV),STYLE,HU.css('font-size','200%'),CLASS,"display-slides-arrow-left fas fa-angle-left"]);var right=HU.div([ID,this.getDomId(ID_NEXT),STYLE,HU.css('font-size','200%'),CLASS,"display-slides-arrow-right fas fa-angle-right"]);var slide=HU.div([STYLE,HU.css('overflow-y','auto','max-height',height),ID,this.getDomId(ID_SLIDE),CLASS,"display-slides-slide"]);var navStyle="padding-top:20px;";var contents=HU.div([STYLE,HU.css('position','relative')],"<table width=100%><tr valign=top><td width=20>"+HU.div([STYLE,navStyle],left)+"</td><td>"+
slide+"</td>"+
"<td width=20>"+HU.div([STYLE,navStyle],right)+"</td></tr></table>");this.writeHtml(ID_DISPLAY_CONTENTS,contents);this.jq(ID_PREV).click(()=>{this.slideIndex--;this.displaySlide(true);});this.jq(ID_NEXT).click(()=>{this.slideIndex++;this.displaySlide(true);});setTimeout(()=>{this.displaySlide();},200);},displaySlide:function(propagateEvent){if(this.slideIndex<0)this.slideIndex=0;if(this.slideIndex>=this.records.length)this.slideIndex=this.records.length-1;if(this.slideIndex==0)
this.jq(ID_PREV).hide();else
this.jq(ID_PREV).show();if(this.slideIndex==this.records.length-1)
this.jq(ID_NEXT).hide();else
this.jq(ID_NEXT).show();var record=this.records[this.slideIndex];var row=this.getDataValues(record);var html=this.applyRecordTemplate(row,this.fields,this.getProperty("template",""));html=html.replace(/\${recordIndex}/g,(this.slideIndex+1));this.jq(ID_SLIDE).html(html);var args={highlight:true,record:record};if(propagateEvent)
this.getDisplayManager().notifyEvent("handleEventRecordHighlight",this,args);},handleEventRecordHighlight:function(source,args){}})}
function RamaddaTopfieldsDisplay(displayManager,id,properties){var ID_SLIDE="slide";let SUPER=new RamaddaFieldsDisplay(displayManager,id,DISPLAY_TOPFIELDS,properties);RamaddaUtil.inherit(this,SUPER);addRamaddaDisplay(this);$.extend(this,{needsData:function(){return true;},getWikiEditorTags:function(){return Utils.mergeLists(SUPER.getWikiEditorTags(),["label:Top Fields Attributes",'fieldCount=""','labelField=""','dateFormat"yyyy"','labelField=""','scaleFont="false"',]);},updateUI:function(){var pointData=this.getData();if(pointData==null)return;let records=this.filterData();if(!records)return;var fields=this.getData().getNonGeoFields();var labelField=this.getFieldById(fields,this.getProperty("labelField"));if(labelField==null){labelField=this.getFieldById(fields,TITLE);}
if(labelField==null){labelField=this.getFieldById(fields,"name");}
var fieldsToUse=this.getFieldsByIds(fields,this.getProperty("fields"));if(fieldsToUse.length==0)fieldsToUse=fields;var html="";var fieldCount=+this.getProperty("fieldCount",10);var dataList=[];var min=Number.MAX_VALUE;var max=Number.MIN_VALUE;var dateFormat=this.getProperty("dateFormat");for(var i=0;i<records.length;i++){var record=records[i];var tuple=record.getData();var data=[];for(var j=0;j<fieldsToUse.length;j++){var field=fieldsToUse[j];if(!field.isNumeric())continue;var value=tuple[field.getIndex()];if(!isNaN(value)){min=Math.min(min,value);max=Math.max(max,value);}
data.push({value:value,field:field});}
data.sort((a,b)=>{return b.value-a.value;});var header=labelField?tuple[labelField.getIndex()]:" Record:"+(i+1);if((labelField&&labelField.isFieldDate())||(typeof header=="date")){header=Utils.formatDateWithFormat(header,dateFormat);}
dataList.push({data:data,record:record,header:header});}
var scaleFont=this.getProperty("scaleFont",true);for(var i=0;i<dataList.length;i++){var data=dataList[i].data;var record=dataList[i].record;var header=dataList[i].header;var tuple=record.getData();var div="";var contents="";for(var j=0;j<data.length&&j<fieldCount;j++){var value=data[j].value;var percent=max==min?1:(value-min)/(max-min);var fontSize=6+Math.round(percent*24)+"pt";if(!scaleFont)fontSize="100%";var field=data[j].field;contents+=HU.div(["field-id",field.getId(),"data-value",field.getLabel(),TITLE,"Value: "+value,CLASS,"display-topfields-row",STYLE,"font-size:"+fontSize+";"],field.getLabel());}
div+=HU.div([CLASS,"display-topfields-header","recordIndex",i],header);div+=HU.div([CLASS,"display-topfields-values"],contents);html+=HU.div([CLASS,"display-topfields-record"],div);}
this.writeHtml(ID_DISPLAY_CONTENTS,html);let _this=this;this.jq(ID_DISPLAY_CONTENTS).find(".display-topfields-header").click(function(){var idx=$(this).attr("recordIndex");_this.jq(ID_DISPLAY_CONTENTS).find(".display-topfields-record").removeClass("display-topfields-selected");$(this).parent().addClass("display-topfields-selected");var record=records[idx];if(record){_this.getDisplayManager().notifyEvent("handleEventRecordSelection",_this,{record:record});}});let rows=this.jq(ID_DISPLAY_CONTENTS).find(".display-topfields-row");rows.hover(function(){rows.removeClass("display-topfields-highlight");var value=$(this).attr("data-value");_this.jq(ID_DISPLAY_CONTENTS).find("[data-value='"+value+"']").addClass("display-topfields-highlight");});rows.click(function(){var field=$(this).attr("field-id");_this.getDisplayManager().notifyEvent("handleEventFieldsSelected",_this,[field]);});},handleEventRecordSelection:function(source,args){if(!args.record)return;var index=this.recordToIndex[args.record.getId()];if(!Utils.isDefined(index))return;var container=this.jq(ID_DISPLAY_CONTENTS);container.find(".display-topfields-record").removeClass("display-topfields-selected");var element=container.find("[recordIndex='"+index+"']").parent();element.addClass("display-topfields-selected");var c=container.offset().top;var s=container.scrollTop();var eo=element.offset();var diff=eo.top-c+s;container.scrollTop(diff)},})}
function RamaddaBlocksDisplay(displayManager,id,properties){let SUPER=new RamaddaFieldsDisplay(displayManager,id,DISPLAY_BLOCKS,properties);var ID_BLOCKS_HEADER="blocks_header";var ID_BLOCKS="blocks";var ID_BLOCKS_FOOTER="blocks_footer";var animStep=1000;RamaddaUtil.inherit(this,SUPER);addRamaddaDisplay(this);$.extend(this,{getContentsStyle:function(){return"";},updateUI:function(){this.counts=[];this.counts2=[];var counts=this.getProperty("counts","100",true).split(";");for(var i=0;i<counts.length;i++)
this.counts.push(parseFloat(counts[i]));var doSum=this.getProperty("doSum","true")=="true";if(doSum){this.counts2=this.counts;}else{var total=0;for(var i=0;i<this.counts.length;i++){var tmp=this.counts[i];this.counts2.push(this.counts[i]-total);total+=tmp;}}
this.footers=this.getProperty("footers","",true).split(";");this.headers=this.getProperty("headers","",true).split(";");while(this.footers.length<this.counts.length)
this.footers.push("");while(this.headers.length<this.counts.length)
this.headers.push("");this.showBlocks(true);this.writeHtml(ID_DISPLAY_CONTENTS,HU.div([CLASS,"display-blocks-header",STYLE,this.getProperty("headerStyle","",true),ID,this.getDomId(ID_BLOCKS_HEADER)])+
HU.div([CLASS,"display-blocks-blocks",ID,this.getDomId(ID_BLOCKS)])+
HU.div([CLASS,"display-blocks-footer",STYLE,this.getProperty("footerStyle","",true),ID,this.getDomId(ID_BLOCKS_FOOTER)]));this.showBlocks(true);HU.callWhenScrolled(this.getDomId(ID_DISPLAY_CONTENTS),()=>{if(!this.displayedBlocks){this.displayedBlocks=true;setTimeout(()=>{this.showBlocks(false)},animStep);}},500);},showBlocks:function(initial,step){if(!Utils.isDefined(step)){if(initial)step=this.counts.length;else step=0;}
var contents="";contents+=HU.openDiv([CLASS,"display-blocks"]);var tmp=this.getProperty("colors","red,blue,gray,green",true);var ct=(typeof tmp)=="string"?tmp.split(","):tmp;var footer="";while(ct.length<this.counts.length){ct.push(ct[ct.length-1]);}
var multiplier=parseFloat(this.getProperty("multiplier","1",true));var dim=this.getProperty("blockDimensions","8",true);var labelStyle=this.getProperty("labelStyle","",true);var blockCnt=0;for(var i=0;i<this.counts2.length;i++){var label=this.footers[i].replace("${count}",multiplier*this.counts[i]);var style="width:"+dim+"px;height:"+dim+"px;";if(!initial){if(i<step){style+="background:"+ct[i]+";";footer+=HU.div([CLASS,"display-block",STYLE,style],"")+" "+HU.span([STYLE,labelStyle],label)+"&nbsp;&nbsp;";}else{footer+="&nbsp;&nbsp;";}}
var cnt=this.counts2[i];for(var j=0;j<this.counts2[i];j++){contents+=HU.div([CLASS,"display-block",STYLE,style,TITLE,label],"");}
blockCnt++;}
contents+=HU.closeDiv();this.jq(ID_BLOCKS_HEADER).html(this.getProperty("header",""));this.jq(ID_BLOCKS).html(contents);this.jq(ID_BLOCKS_FOOTER).html(footer);if(step<this.counts.length){setTimeout(()=>{this.showBlocks(false,step+1)},animStep);}}})}
function RamaddaTextstatsDisplay(displayManager,id,properties){let SUPER=new RamaddaBaseTextDisplay(displayManager,id,DISPLAY_TEXTSTATS,properties);RamaddaUtil.inherit(this,SUPER);addRamaddaDisplay(this);$.extend(this,{updateUI:function(){var cnt={};var fieldInfo=this.processText(cnt);if(fieldInfo==null)return;let records=this.filterData();var allFields=this.getData().getRecordFields();var fields=this.getSelectedFields(allFields);if(fields.length==0)
fields=allFields;var strings=this.getFieldsOfType(fields,"string");let _this=this;var divs="";var words=[];var html="";var counts=[];var maxWords=parseInt(this.getProperty("maxWords",-1));var minCount=parseInt(this.getProperty("minCount",0));var showBars=this.getProperty("showBars",true);var scale=this.getProperty("barsScale",10);var barColor=this.getProperty("barColor","blue");var barWidth=parseInt(this.getProperty("barWidth","400"));for(a in fieldInfo){var fi=fieldInfo[a];let field=fi.field;for(word in fi.counts){var count=fi.counts[word];counts.push({word:word,count:count});}
counts.sort(function(a,b){if(a.count<b.count)return-1;if(a.count>b.count)return 1;return 0;});if(minCount>0){var tmp=[];for(var i=0;i<counts.length;i++){if(counts[i].count>=minCount)
tmp.push(counts[i]);}
counts=tmp;}
if(maxWords>0){var tmp=[];for(var i=0;i<=maxWords&&i<counts.length;i++){if(counts[i].count>=minCount)
tmp.push(counts[i]);}
counts=tmp;}
var min=0;var max=0;if(counts.length>0){max=counts[0].count;min=counts[counts.length-1].count;}
var tmp=[];for(a in cnt.lengths){tmp.push({length:parseInt(a),count:cnt.lengths[a]});}
tmp.sort(function(a,b){if(a.length<b.length)return-1;if(a.length>b.length)return 1;return 0;});var min=0;var max=0;for(var i=0;i<tmp.length;i++){max=(i==0?tmp[i].count:Math.max(max,tmp[i].count));min=(i==0?tmp[i].count:Math.min(min,tmp[i].count));}
if(this.getProperty("showFieldLabel",true))
html+="<b>"+fi.field.getLabel()+"</b><br>";var td1Width="20%";var td2Width="10%";if(this.getProperty("showSummary",true)){html+=HU.openTag("table",[CLASS,"nowrap ramadda-table",ID,this.getDomId("table_summary")]);html+=HU.openTag("thead",[]);html+=HU.tr([],HU.th(["width",td1Width],"Summary")+HU.th([],"&nbsp;"));html+=HU.closeTag("thead");html+=HU.openTag("tbody",[]);html+=HU.tr([],HU.td(["align","right"],"Total lines:")+HU.td([],records.length));html+=HU.tr([],HU.td(["align","right"],"Total words:")+HU.td([],cnt.count));html+=HU.tr([],HU.td(["align","right"],"Average word length:")+HU.td([],Math.round(cnt.total/cnt.count)));html+=HU.closeTag("tbody");html+=HU.closeTag("table");html+="<br>"}
if(this.getProperty("showCounts",true)){html+=HU.openTag("table",[CLASS,"row-border nowrap ramadda-table",ID,this.getDomId("table_counts")]);html+=HU.openTag("thead",[]);html+=HU.tr([],HU.th(["width",td1Width],"Word Length")+HU.th(["width",td2Width],"Count")+(showBars?HU.th([],""):""));html+=HU.closeTag("thead");html+=HU.openTag("tbody",[]);for(var i=0;i<tmp.length;i++){var row=HU.td([],tmp[i].length)+HU.td([],tmp[i].count);if(showBars){var wpercent=(tmp[i].count-min)/max;var width=2+wpercent*barWidth;var color=barColor;var div=HU.div([STYLE,"height:10px;width:"+width+"px;background:"+color],"");row+=HU.td([],div);}
html+=HU.tr([],row);}
html+=HU.closeTag("tbody");html+=HU.closeTag("table");html+="<br>"}
if(this.getProperty("showFrequency",true)){html+=HU.openTag("table",[CLASS,"row-border ramadda-table",ID,this.getDomId("table_frequency")]);html+=HU.openTag("thead",[]);html+=HU.tr([],HU.th(["width",td1Width],"Word")+HU.th(["width",td2Width],"Frequency")+(showBars?HU.th([],""):""));html+=HU.closeTag("thead");html+=HU.openTag("tbody",[]);var min=0;var max=0;if(counts.length>0){min=counts[0].count;max=counts[counts.length-1].count;}
var totalWords=0;for(var i=0;i<counts.length;i++){totalWords+=counts[i].count;}
for(var i=counts.length-1;i>=0;i--){var percent=Math.round(10000*(counts[i].count/totalWords))/100;var row=HU.td([],counts[i].word+"&nbsp;:&nbsp;")+
HU.td([],counts[i].count+"&nbsp;&nbsp;("+percent+"%)&nbsp;:&nbsp;");if(showBars){var wpercent=(counts[i].count-min)/max;var width=2+wpercent*barWidth;var color=barColor;var div=HU.div([STYLE,"height:10px;width:"+width+"px;background:"+color],"");row+=HU.td([],div);}
html+=HU.tr([],row);}
html+=HU.closeTag("tbody");html+=HU.closeTag("table");}}
this.writeHtml(ID_DISPLAY_CONTENTS,html);var tableHeight=this.getProperty("tableHeight","200");if(this.getProperty("showSummary",true))
HU.formatTable("#"+this.getDomId("table_summary"),{scrollY:this.getProperty("tableSummaryHeight",tableHeight)});if(this.getProperty("showCounts",true))
HU.formatTable("#"+this.getDomId("table_counts"),{scrollY:this.getProperty("tableCountsHeight",tableHeight)});if(this.getProperty("showFrequency",true)){this.frequencyTable=HU.formatTable("#"+this.getDomId("table_frequency"),{scrollY:this.getProperty("tableFrequenecyHeight",tableHeight),searching:this.getProperty("showSearch",true)});this.frequencyTable.on('search.dt',()=>{if(this.settingSearch)return;this.propagateEvent("handleEventPropertyChanged",{property:"searchValue",value:this.frequencyTable.search()});});}},handleEventPropertyChanged:function(source,prop){if(prop.property=="searchValue"){this.settingSearch=true;this.setProperty("searchValue",prop.value);this.frequencyTable.search(prop.value);this.frequencyTable.draw();this.settingSearch=false;return;}
SUPER.handleEventPropertyChanged.call(this,source,prop);},});}
function RamaddaFrequencyDisplay(displayManager,id,properties){let SUPER=new RamaddaBaseTextDisplay(displayManager,id,DISPLAY_FREQUENCY,properties);RamaddaUtil.inherit(this,SUPER);addRamaddaDisplay(this);$.extend(this,{getWikiEditorTags:function(){return Utils.mergeLists(SUPER.getWikiEditorTags(),["label:Frequency Attributes",'orientation="vertical"','tableHeight="300px"','showPercent=false','showCount=false','showBars=true','showBars=false','showHeader=false','banner=true','barWidth=200','clickFunction=selectother']);},updateUI:function(){let records=this.filterData();if(!records)return;var allFields=this.getData().getRecordFields();var fields=this.getSelectedFields(allFields);if(fields.length==0)
fields=allFields;var summary={};for(var col=0;col<fields.length;col++){var f=fields[col];if(!Utils.isDefined(summary[f.getId()])){summary[f.getId()]={counts:{},values:[],min:value,max:value,total:0,numbers:[],field:f}}}
var showCount=this.getProperty("showCount",true);var showPercent=this.getProperty("showPercent",true);var showBars=this.getProperty("showBars",false);var barWidth=+this.getProperty("barWidth",200);for(var rowIdx=0;rowIdx<records.length;rowIdx++){var row=this.getDataValues(records[rowIdx]);for(var col=0;col<fields.length;col++){var f=fields[col];var s=summary[f.getId()];var value=row[f.getIndex()];if(!Utils.isDefined(s.min)){s.min=value;s.max=value;}
if(f.isNumeric()){s.numbers.push(value);if(isNaN(s.max))s.max=value;else if(!isNaN(value))s.max=Math.max(value,s.max);if(isNaN(s.min))s.min=value;else if(!isNaN(value))s.min=Math.min(value,s.min);}else{if(!Utils.isDefined(s.counts[value])){var tuple={value:value,count:0}
s.counts[value]=tuple;s.values.push(tuple);}
s.total++;s.counts[value].count++;}}}
var html="";var bannerHtml="";for(var col=0;col<fields.length;col++){bannerHtml+="<div style='text-align:center;'>";var f=fields[col];var s=summary[f.getId()];if(f.isNumeric()){var numBins=parseFloat(this.getProperty("numBins",10,true));s.bins=[];var range=s.max-s.min;var binWidth=(s.max-s.min)/numBins;var label="Not defined";s.bins.push(label);var tuple={value:label,count:0}
s.counts[label]=tuple;s.values.push(tuple);var binsProp=this.getProperty(f.getId()+".bins");var hasBins=Utils.stringDefined(binsProp);var binValues;if(hasBins){var l=binsProp.split(",");binValues=[];l.map(v=>binValues.push(+v));for(var i=0;i<l.length-1;i++){var v1=+l[i];var v2=+l[i+1];var label=v1+" - "+v2;s.bins.push(label);var tuple={value:label,count:0}
s.counts[label]=tuple;s.values.push(tuple);}}else{for(var i=0;i<numBins;i++){var label=(Utils.formatNumber(s.min+binWidth*i))+" - "+Utils.formatNumber(s.min+binWidth*(i+1));s.bins.push(label);var tuple={value:label,count:0}
s.counts[label]=tuple;s.values.push(tuple);}}
for(var i=0;i<s.numbers.length;i++){var value=s.numbers[i];var bin=0;if(!isNaN(value)){if(binValues){for(var j=0;j<binValues.length-1;j++){if(value>=binValues[j]&&value<binValues[j+1]){bin=j;break;}}}else{if(binWidth!=0){var perc=(value-s.min)/range;bin=Math.round(perc/(1/numBins))+1;if(bin>numBins)bin=numBins;}}}
var label=s.bins[bin];if(!Utils.isDefined(s.counts[label])){var tuple={value:s.bins[bin],count:0}
s.counts[label]=tuple;s.values.push(tuple);}
s.total++;s.counts[label].count++;}}
var hor=this.getProperty("orientation","")!="vertical";var doBanner=this.getProperty("banner",false);if(this.getProperty("floatTable")!=null){hor=this.getProperty("floatTable")==true;}
html+=HU.openTag("div",[CLASS,"display-frequency-table",STYLE,hor?"":"display:block;"]);html+=HU.openTag("table",["cellpadding","3",ID,this.getDomId("summary"+col),"table-height",this.getProperty("tableHeight","300",true),CLASS,"stripe row-border nowrap ramadda-table"]);if(this.getProperty("showHeader",true)){html+=HU.openTag("thead",[]);var label=HU.span([TITLE,"Click to reset",CLASS,"display-frequency-label","data-field",s.field.getId()],f.getLabel());label=HU.div([STYLE,"max-width:500px;overflow-x:auto;"],label);var count=showCount?HU.th(["align","right","width","20%"],HU.div([STYLE,"text-align:right"],"Count")):"";var percent=showPercent?HU.th(["align","right","width","20%"],HU.div([STYLE,"text-align:right"],"Percent")):"";var bars=showBars?HU.th(["align","right","width",barWidth],HU.div([STYLE,"text-align:right"],"&nbsp;")):"";html+=HU.tr([],HU.th(["xxwidth","60%"],label+count+percent+bars));html+=HU.closeTag("thead");}
html+=HU.openTag("tbody",[]);var colors=this.getColorTable(true);var dfltColor=this.getProperty("barColor","blue");if(colors){for(var i=0;i<s.values.length;i++){var value=s.values[i].value;if(i<colors.length)
s.values[i].color=colors[i];else
s.values[i].color=colors[colors.length-1];}}
if(!f.isNumeric()){s.values.sort((a,b)=>{if(a.count<b.count)return 1;if(a.count>b.count)return-1;return 0;});}
var maxPercent=0;for(var i=0;i<s.values.length;i++){var count=s.values[i].count;if(count==0)continue;var perc=count/s.total;maxPercent=Math.max(maxPercent,perc);}
for(var i=0;i<s.values.length;i++){var value=s.values[i].value;var label=value;if(label=="")label="&lt;blank&gt;";var count=s.values[i].count;if(count==0)continue;var perc=count/s.total;value=value.replace(/\'/g,"&apos;");var countLabel=HU.span([TITLE,"Click to select",CLASS,"display-frequency-value","data-field",s.field.getId(),"data-value",value],count);value=HU.span([TITLE,"Click to select",CLASS,"display-frequency-value","data-field",s.field.getId(),"data-value",value],label);var color=s.values[i].color;if(!color)color=dfltColor;if(showPercent)countLabel+=" ("+Math.round(perc*100)+"%)";bannerHtml+=HU.div([CLASS,"display-frequency-banner-element"],value+"<br>"+countLabel);var tdv=HU.td([],value);var tdc=(showCount?HU.td(["align","right"],count):"");var tdp=showPercent?HU.td(["align","right"],s.total==0?"0":Math.round(perc*100)+"%"):"";var bw=perc/maxPercent;var tdb=showBars?HU.td(["valign","center","width",barWidth],HU.div([TITLE,Math.round(perc*100)+"%",STYLE,"background:"+color+";height:10px;width:"+(Math.round(bw*barWidth))+"px"],"")):"";html+=HU.tr([],tdv+tdc+tdp+tdb);}
html+=HU.closeTag("tbody");html+=HU.closeTag("table");html+=HU.closeTag("div");bannerHtml+="</div>";}
if(doBanner)html=HU.div([CLASS,"display-frequency-banner"],bannerHtml);this.writeHtml(ID_DISPLAY_CONTENTS,html);let _this=this;this.jq(ID_DISPLAY_CONTENTS).find(".display-frequency-value").click(function(){var click=_this.getProperty("clickFunction")
var value=$(this).attr("data-value");var fieldId=$(this).attr("data-field");var parent=$(this).parent();if(parent.hasClass("display-frequency-banner-element")){var banner=parent.parent();var isSelected=parent.hasClass("display-frequency-banner-element-selected");banner.find(".display-frequency-banner-element").removeClass("display-frequency-banner-element-selected");if(!isSelected){parent.addClass("display-frequency-banner-element-selected");}else{parent.removeClass("display-frequency-banner-element-selected");value=FILTER_ALL;}}
if(!click||click=="select"){_this.handleEventPropertyChanged(_this,{property:"pattern",fieldId:fieldId,value:value});}else if(click=="selectother"){_this.propagateEvent("handleEventPropertyChanged",{property:"filterValue",value:value,id:_this.getFilterId(fieldId),fieldId:fieldId,});}});this.jq(ID_DISPLAY_CONTENTS).find(".display-frequency-label").click(function(){var field=$(this).attr("data-field");_this.handleEventPropertyChanged(_this,{property:"filterValue",id:ID,fieldId:field,value:"-all-"});});if(this.getProperty("showHeader",true)){for(var col=0;col<fields.length;col++){HU.formatTable("#"+this.getDomId("summary"+col),{});}}}});}
function RamaddaTextanalysisDisplay(displayManager,id,properties){let SUPER=new RamaddaBaseTextDisplay(displayManager,id,DISPLAY_TEXTANALYSIS,properties);RamaddaUtil.inherit(this,SUPER);addRamaddaDisplay(this);$.extend(this,{checkLayout:function(){this.updateUIInner();},updateUI:function(){var includes="<script src='"+ramaddaBaseUrl+"/lib/compromise.min.js'></script>";this.writeHtml(ID_DISPLAY_TOP,includes);let _this=this;var func=function(){_this.updateUIInner();};setTimeout(func,10);},updateUIInner:function(){let records=this.filterData();if(!records){return null;}
let _this=this;this.setContents(this.getMessage("Processing text..."));var func=function(){_this.updateUIInnerInner();};setTimeout(func,10);},updateUIInnerInner:function(){let records=this.filterData();var allFields=this.getData().getRecordFields();var fields=this.getSelectedFields(allFields);if(fields.length==0)
fields=allFields;var strings=this.getFieldsByIds(fields,"fields");if(strings.length==0){strings=this.getFieldsOfType(fields,"string");}
if(strings.length==0){this.displayError("No string fields specified");return null;}
if(!this.lastRecords||this.lastRecords.length!=records.length){this.lastRecords=records;var corpus="";for(var rowIdx=0;rowIdx<records.length;rowIdx++){var row=this.getDataValues(records[rowIdx]);var line="";for(var col=0;col<strings.length;col++){var f=fields[col];line+=" ";line+=row[f.getIndex()];}
corpus+=line;corpus+="\n";}
this.nlp=window.nlp(corpus);}
var nlp=this.nlp;var cols=[];if(this.getProperty("showPeople",false)){cols.push(this.printList("People",nlp.people().out('topk')));}
if(this.getProperty("showPlaces",false)){cols.push(this.printList("Places",nlp.places().out('topk')));}
if(this.getProperty("showOrganizations",false)){cols.push(this.printList("Organizations",nlp.organizations().out('topk')));}
if(this.getProperty("showTopics",false)){cols.push(this.printList("Topics",nlp.topics().out('topk')));}
if(this.getProperty("showNouns",false)){cols.push(this.printList("Nouns",nlp.nouns().out('topk')));}
if(this.getProperty("showVerbs",false)){cols.push(this.printList("Verbs",nlp.verbs().out('topk')));}
if(this.getProperty("showAdverbs",false)){cols.push(this.printList("Adverbs",nlp.adverbs().out('topk')));}
if(this.getProperty("showAdjectives",false)){cols.push(this.printList("Adjectives",nlp.adjectives().out('topk')));}
if(this.getProperty("showClauses",false)){cols.push(this.printList("Clauses",nlp.clauses().out('topk')));}
if(this.getProperty("showContractions",false)){cols.push(this.printList("Contractions",nlp.contractions().out('topk')));}
if(this.getProperty("showPhoneNumbers",false)){cols.push(this.printList("Phone Numbers",nlp.phoneNumbers().out('topk')));}
if(this.getProperty("showValues",false)){cols.push(this.printList("Values",nlp.values().out('topk')));}
if(this.getProperty("showAcronyms",false)){cols.push(this.printList("Acronyms",nlp.acronyms().out('topk')));}
if(this.getProperty("showNGrams",false)){cols.push(this.printList("NGrams",nlp.ngrams().out('topk')));}
if(this.getProperty("showDates",false)){cols.push(this.printList("Dates",nlp.dates().out('topk')));}
if(this.getProperty("showQuotations",false)){cols.push(this.printList("Quotations",nlp.quotations().out('topk')));}
if(this.getProperty("showUrls",false)){cols.push(this.printList("URLs",nlp.urls().out('topk')));}
if(this.getProperty("showStatements",false)){cols.push(this.printList("Statements",nlp.statements().out('topk')));}
if(this.getProperty("showTerms",false)){cols.push(this.printList("Terms",nlp.terms().out('topk')));}
if(this.getProperty("showPossessives",false)){cols.push(this.printList("Possessives",nlp.possessives().out('topk')));}
if(cols.length==0){this.writeHtml(ID_DISPLAY_CONTENTS,this.getMessage("No text types specified"));return;}
var height=this.getProperty("height","400");var html=HU.openTag("div",[ID,this.getDomId("tables")]);for(var i=0;i<cols.length;i+=3){var c1=cols[i];var c2=i+1<cols.length?cols[i+1]:null;var c3=i+2<cols.length?cols[i+2]:null;var width=c2?(c3?"33%":"50%"):"100%";var style="padding:5px";var row="";row+=HU.td(["width",width],HU.div([STYLE,style],c1));if(c2)
row+=HU.td(["width",width],HU.div([STYLE,style],c2));if(c3)
row+=HU.td(["width",width],HU.div([STYLE,style],c3));html+=HU.tag("table",["width","100%"],HU.tr(row));}
html+=HU.closeTag("div");this.writeHtml(ID_DISPLAY_CONTENTS,html);HU.formatTable("#"+this.getDomId("tables")+" .ramadda-table",{scrollY:this.getProperty("tableHeight","200")});},printList:function(title,l){var maxWords=parseInt(this.getProperty("maxWords",10));var minCount=parseInt(this.getProperty("minCount",0));var table=HU.openTag("table",["width","100%",CLASS,"stripe hover ramadda-table"])+HU.openTag("thead",[]);table+=HU.tr([],HU.th([],title)+HU.th([],"&nbsp;"));table+=HU.closeTag("thead");table+=HU.openTag("tbody");var cnt=0;for(var i=0;i<l.length;i++){if(l[i].count<minCount)continue;var row=HU.td([],l[i].normal)+
HU.td([],l[i].count+" ("+l[i].percent+"%)");table+=HU.tr([],row);if(cnt++>maxWords)break;}
table+=HU.closeTag("tbody")+HU.closeTag("table");return table;}});}
function RamaddaTextrawDisplay(displayManager,id,properties){var ID_TEXT="text";var ID_OVERLAY="overlay";var ID_OVERLAY_TABLE="overlaytable";var ID_LABEL="label";var ID_SEARCH="search";var ID_HIGHLIGHT="highlight";var ID_SHRINK="shrink";let SUPER=new RamaddaBaseTextDisplay(displayManager,id,DISPLAY_TEXTRAW,properties);RamaddaUtil.inherit(this,SUPER);addRamaddaDisplay(this);$.extend(this,{doShrink:this.getProperty("initialShrink",false),getWikiEditorTags:function(){return Utils.mergeLists(SUPER.getWikiEditorTags(),["label:Raw Text Attributes",'doBubble=true','addLineNumbers=false','labelTemplate="${lineNumber}"','maxLines=1000','pattern="initial search pattern"','fromField=""','linesDescriptor=""','asHtml=false','breakLines=true','includeEmptyLines=false',]);},checkLayout:function(){this.updateUI();},updateUI:function(){let records=this.filterData();if(!records){return null;}
var pointData=this.getData();this.allRecords=pointData.getRecords();var pattern=this.getProperty("pattern");if(pattern&&pattern.length==0)pattern=null;if(pattern)pattern=pattern.replace(/"/g,"&quot;");let input="";if(!this.filters||this.filters.length==0)
input+=" "+HU.input("pattern",(pattern?pattern:""),["placeholder","Search text",ID,this.getDomId(ID_SEARCH)]);this.showShrink=this.getProperty("showShrink",false);if(this.showShrink){input+=" "+HU.checkbox("shrink",[ID,this.getDomId(ID_SHRINK)],this.getProperty("initialShrink",true))+" Shrink ";}
this.writeHtml(ID_TOP_RIGHT,HU.span([ID,this.getDomId(ID_LABEL)]," ")+input);let _this=this;this.jq(ID_SHRINK).click(function(){_this.doShrink=_this.jq(ID_SHRINK).is(':checked');_this.setProperty("initialShrink",_this.doShrink);_this.updateUI();});this.jq(ID_SEARCH).keypress(function(event){if(event.which==13){_this.setProperty("pattern",$(this).val());_this.propagateEvent("handleEventPropertyChanged",{property:"pattern",value:$(this).val()});_this.updateUI();}});var height=this.getProperty("height","600");var style=this.getProperty("displayInnerStyle","");var html=HU.div([ID,this.getDomId(ID_TEXT),STYLE,"padding:4px;border:1px #ccc solid; max-height:"+height+"px;overflow-y:auto;"+style]);this.writeHtml(ID_DISPLAY_CONTENTS,html);let t1=new Date();this.showText();let t2=new Date();Utils.displayTimes("T",[t1,t2]);},handleEventPropertyChanged:function(source,prop){if(prop.property=="pattern"){this.setProperty("pattern",prop.value);this.updateUI();return;}
SUPER.handleEventPropertyChanged.call(this,source,prop);},showText:function(){let _this=this;let records=this.filterData();if(!records){return null;}
this.records=records;this.recordToIndex={};this.indexToRecord={};var pattern=this.getProperty("pattern");if(pattern&&pattern.length==0)pattern=null;var asHtml=this.getProperty("asHtml",true);var addLineNumbers=this.getProperty("addLineNumbers",true);var labelTemplate=this.getProperty("labelTemplate","");var labelWidth="10px";if(labelTemplate==""){labelWidth="1px";}
if(labelTemplate==""&&addLineNumbers){labelTemplate="${lineNumber}";}
if(labelTemplate)asHtml=true;var maxLines=parseInt(this.getProperty("maxLines",100000));var lineLength=parseInt(this.getProperty("lineLength",10000));var breakLines=this.getProperty("breakLines",true);var includeEmptyLines=this.getProperty("includeEmptyLines",false);var allFields=this.getData().getRecordFields();var fields=this.getSelectedFields(allFields);if(fields.length==0)
fields=allFields;var strings=this.getFieldsOfType(fields,"string");if(strings.length==0){this.displayError("No string fields specified");return null;}
var highlights;var highlightStyles;if(this.getProperty("highlights")){highlights=[];highlightStyles=this.getProperty("highlightStyles","background:rgb(250_comma_0_comma_0);").split(",");this.getProperty("highlights","").split(",").map(h=>{if(h.indexOf("(")<0)h="("+h+")";highlights.push(RegExp(h,'ig'));});}
var corpus=HU.openTag("div",[STYLE,"position:relative;"]);corpus+=HU.div([ID,this.getDomId(ID_OVERLAY),STYLE,"position:absolute;top:0;left:0;"],HU.tag("table",[ID,this.getDomId(ID_OVERLAY_TABLE)]));var fromField=this.getFieldById(null,this.getProperty("fromField"));var bubble=this.getProperty("doBubble",false);if(labelTemplate){corpus+="<table width=100%>";}
var lineCnt=0;var displayedLineCnt=0;var patternMatch=new TextMatcher(pattern);var regexpMaps={};var filterFieldMap={};if(this.filters){this.filters.map(f=>{if(f.field&&f.field.isString)filterFieldMap[f.field.getId()]=f;});}
var templates={};fields.map(f=>{templates[f.getId()]=this.getProperty(f.getId()+".template");});var colorBy=this.getColorByInfo(records);var delimiter=this.getProperty("delimiter","");var rowScale=this.showShrink?this.getProperty("rowScale",0.3):null;if(this.showShrink){corpus+="<tr><td>"+HU.getIconImage("fa-caret-down")+"</td></tr>";}
let templateFields=this.getFields();let templateProps=this.getTemplateProps(templateFields);let templateMacros=Utils.tokenizeMacros(labelTemplate?labelTemplate:"");for(var rowIdx=0;rowIdx<records.length;rowIdx++){var record=records[rowIdx];if(!Utils.isDefined(record.lineNumber)){record.lineNumber=(rowIdx+1);}
this.indexToRecord[rowIdx]=record;this.recordToIndex[record.getId()]=rowIdx;var row=this.getDataValues(record);var line="";for(var col=0;col<fields.length;col++){var f=fields[col];if(rowIdx==0){if(filterFieldMap[f.getId()]){let filter=filterFieldMap[f.getId()];var value=filter.getFieldValues();if(value){if(!Array.isArray(value)){value=[value];}
try{regexpMaps[f.getId()]=[];value.map(v=>{if(v==""||v==FILTER_ALL)return;var re=new TextMatcher(v);regexpMaps[f.getId()].push(re);})}catch(e){console.log("Error making regexp:"+e);}}}}
var value=""+row[f.getIndex()];value=value.replace(/</g,"&lt;").replace(/>/g,"&gt;");if(regexpMaps[f.getId()]){regexpMaps[f.getId()].map(re=>{value=re.highlight(value);});}
if(line!="")
line+=delimiter+" ";if(templates[f.getId()]){value=templates[f.getId()].replace("${value}",value);}
line+=value;}
line=line.trim();if(!includeEmptyLines&&line.length==0)continue;lineCnt++;var rowAttrs=["valign","top"];var rowStyle="";if(colorBy.index>=0){var value=record.getData()[colorBy.index];var color=colorBy.getColor(value,record);if(color){rowAttrs.push(STYLE);rowStyle+="background:"+Utils.addAlphaToColor(color,"0.25")+";";}}
rowAttrs.push(CLASS);rowAttrs.push("display-raw-row");var matches=patternMatch.matches(line);var hasMatch=matches&&patternMatch.hasPattern();if(hasMatch){rowAttrs.push("matched");rowAttrs.push(true);}
if(rowScale){if(!hasMatch){rowStyle+="-webkit-transform: scale(1,"+rowScale+");";rowStyle+="line-height:"+rowScale+";";rowAttrs.push(STYLE);rowAttrs.push(rowStyle);}}else if(!matches){continue;}
line=patternMatch.highlight(line);displayedLineCnt++;if(displayedLineCnt>maxLines)break;let lineAttrs=[TITLE," ",CLASS," display-raw-line ","recordIndex",rowIdx]
if(bubble)line=HU.div([CLASS,"ramadda-bubble"],line);if(fromField)line+=HU.div([CLASS,"ramadda-bubble-from"],""+row[fromField.getIndex()]);if(highlights){for(var hi=0;hi<highlights.length;hi++){var h=highlights[hi];var s=hi<highlightStyles.length?highlightStyles[hi]:highlightStyles[highlightStyles.length-1];s=s.replace(/_comma_/g,",");line=line.replace(h,"<span style='"+s+"'>$1</span>");}}
li