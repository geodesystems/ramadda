function AreaWidget(display){const ID_CONTAINS="mapcontains";const ID_NORTH="north";const ID_SOUTH="south";const ID_EAST="east";const ID_WEST="west";const ID_SETTINGS="mapsettings";const ID_AREA_LINK="arealink";const ID_MAP_SHOW="showmap";const ID_MAP_POPUP_WRAPPER="mappopupwrapper";const ID_MAP_POPUP="mappopup";const ID_CLEAR="mapclear";const ID_SET_LOCATION="mapsetlocation";$.extend(this,{areaContains:HU.getUrlArgument("map_contains")=="true",display:display,initHtml:function(){this.display.jq(ID_SETTINGS).click(()=>{this.showSettings();});this.display.jq(ID_MAP_SHOW).click(()=>{this.showMap();});let params={};this.map=new RepositoryMap(this.display.domId(ID_MAP_POPUP),params);this.map.setSelection(this.display.getId(),true,1);},showSettings:function(){let _this=this;let html="";html+=HU.div([CLASS,"ramadda-clickable",TITLE,"Use my location",ID,this.display.domId(ID_SET_LOCATION)],HU.getIconImage("fas fa-compass")+SPACE+"Use my location");html+=HU.div([CLASS,"ramadda-clickable",TITLE,"Clear form",ID,this.display.domId(ID_CLEAR)],HU.getIconImage("fas fa-eraser")+SPACE+"Clear form");html+=HU.div([TITLE,"Search mode: checked - contains, unchecked - overlaps"],HtmlUtils.checkbox("",[ID,this.display.getDomId(ID_CONTAINS)],this.areaContains)+HU.tag("label",[CLASS,"ramadda-clickable","for",this.display.getDomId(ID_CONTAINS)],SPACE+"Contains"));html=HU.div([STYLE,"margin:5px;"],html);this.settingsDialog=HU.makeDialog({content:html,anchor:this.display.jq(ID_SETTINGS),draggable:false,header:true});this.display.jq(ID_CONTAINS).change(function(e){_this.areaContains=$(this).is(':checked');});this.display.jq(ID_SET_LOCATION).click(()=>{this.settingsDialog.remove();this.useMyLocation();});this.display.jq(ID_CLEAR).click(()=>{this.settingsDialog.remove();this.areaClear();});},getHtml:function(){let bounds=HU.getUrlArgument("map_bounds");let n="",w="",s="",e="";if(bounds){[n,w,s,e]=bounds.split(",");}
let callback=this.display.getGet();let settings=HU.div([TITLE,"Settings",CLASS,"ramadda-clickable",ID,this.display.domId(ID_SETTINGS)],HU.getIconImage("fas fa-cog"));let showMap=HU.div([CLASS,"ramadda-clickable",ID,this.display.domId(ID_MAP_SHOW),TITLE,"Show map selector"],HtmlUtils.getIconImage("fas fa-globe"));let input=(id,place,title,v)=>{return HtmlUtils.input(id,v,["placeholder",place,ATTR_CLASS,"input display-area-input","size","5",ATTR_ID,this.display.getDomId(id),ATTR_TITLE,title]);};let areaForm=HtmlUtils.openTag(TAG_TABLE,[ATTR_CLASS,"display-area"]);areaForm+=HtmlUtils.tr([],HtmlUtils.td(["align","center"],HtmlUtils.leftCenterRight("",input(ID_NORTH," N","North",n),showMap,"20%","60%","20%")));areaForm+=HtmlUtils.tr([],HtmlUtils.td([],input(ID_WEST," W","West",w)+
input(ID_EAST," E","East",e)));areaForm+=HtmlUtils.tr([],HtmlUtils.td(["align","center"],HtmlUtils.leftCenterRight("",input(ID_SOUTH," S","South",s),settings,"20%","60%","20%")));areaForm+=HtmlUtils.closeTag(TAG_TABLE);areaForm+=HU.div([ID,this.display.domId(ID_MAP_POPUP_WRAPPER),STYLE,HU.css("display","none")],SPACE+"Shift-drag: select region. Cmd-drag: move region"+
HU.div([ID,this.display.domId(ID_MAP_POPUP),STYLE,HU.css("width","400px","height","300px")]));return areaForm;},showMap:function(){let anchor=this.display.jq(ID_MAP_SHOW);this.dialog=HU.makeDialog({contentId:this.display.domId(ID_MAP_POPUP_WRAPPER),anchor:anchor,draggable:true,header:true});this.map.selectionPopupInit();this.map.getMap().updateSize();},areaClear:function(){$("#"+this.display.getDomId(ID_NORTH)).val("");$("#"+this.display.getDomId(ID_WEST)).val("");$("#"+this.display.getDomId(ID_SOUTH)).val("");$("#"+this.display.getDomId(ID_EAST)).val("");this.display.areaClear();},useMyLocation:function(){if(navigator.geolocation){let _this=this;navigator.geolocation.getCurrentPosition(function(position){_this.setUseMyLocation(position);});}else{}},setUseMyLocation:function(position){let lat=position.coords.latitude;let lon=position.coords.longitude;let offset=5.0;if(this.display.myLocationOffset)
offset=parseFloat(this.display.myLocationOffset);$("#"+this.display.getDomId(ID_NORTH)).val(lat+offset);$("#"+this.display.getDomId(ID_WEST)).val(lon-offset);$("#"+this.display.getDomId(ID_SOUTH)).val(lat-offset);$("#"+this.display.getDomId(ID_EAST)).val(lon+offset);if(this.display.submitSearchForm)
this.display.submitSearchForm();},areaLinkClick:function(){this.linkArea=!this.linkArea;let image=root+(this.linkArea?"/icons/link.png":"/icons/link_break.png");$("#"+this.display.getDomId(ID_AREA_LINK)).attr("src",image);if(this.linkArea&&this.lastBounds){let b=this.lastBounds;$("#"+this.display.getDomId(ID_NORTH)).val(MapUtils.formatLocationValue(b.top));$("#"+this.display.getDomId(ID_WEST)).val(MapUtils.formatLocationValue(b.left));$("#"+this.display.getDomId(ID_SOUTH)).val(MapUtils.formatLocationValue(b.bottom));$("#"+this.display.getDomId(ID_EAST)).val(MapUtils.formatLocationValue(b.right));}},linkArea:false,lastBounds:null,handleEventMapBoundsChanged:function(source,args){bounds=args.bounds;this.lastBounds=bounds;if(!args.force&&!this.linkArea)return;$("#"+this.display.getDomId(ID_NORTH)).val(MapUtils.formatLocationValue(bounds.top));$("#"+this.display.getDomId(ID_WEST)).val(MapUtils.formatLocationValue(bounds.left));$("#"+this.display.getDomId(ID_SOUTH)).val(MapUtils.formatLocationValue(bounds.bottom));$("#"+this.display.getDomId(ID_EAST)).val(MapUtils.formatLocationValue(bounds.right));},setSearchSettings:function(settings){let n=this.display.getFieldValue(this.display.getDomId(ID_NORTH),null);let w=this.display.getFieldValue(this.display.getDomId(ID_WEST),null);let s=this.display.getFieldValue(this.display.getDomId(ID_SOUTH),null);let e=this.display.getFieldValue(this.display.getDomId(ID_EAST),null);settings.setAreaContains(this.areaContains);HU.addToDocumentUrl("map_contains",this.areaContains);settings.setBounds(n,w,s,e);HU.addToDocumentUrl("map_bounds",[n||"",w||"",s||"",e||""].join(","));},});}
function DateRangeWidget(display,what){const ID_DATE_START="date_start";const ID_DATE_END="date_end";let startLabel,endLabel;this.what=what||"date";if(what=="createdate"){startLabel="Create start";endLabel="Create end";}else{startLabel="Start date";endLabel="End date";}
this.baseId=this.what;RamaddaUtil.inherit(this,{display:display,initHtml:function(){$("#"+this.baseId+ID_DATE_START).datepicker({dateFormat:"yy-mm-dd"});$("#"+this.baseId+ID_DATE_END).datepicker({dateFormat:"yy-mm-dd"});},setSearchSettings:function(settings){let start=$("#"+this.baseId+ID_DATE_START).val();let end=$("#"+this.baseId+ID_DATE_END).val();HU.addToDocumentUrl(this.baseId+ID_DATE_START,Utils.stringDefined(start)?start:null);HU.addToDocumentUrl(this.baseId+ID_DATE_END,Utils.stringDefined(end)?end:null);if(this.what=="createdate")
settings.setCreateDateRange(start,end);else
settings.setDateRange(start,end);},getHtml:function(){let start=HU.getUrlArgument(this.baseId+ID_DATE_START);let end=HU.getUrlArgument(this.baseId+ID_DATE_END);let html=HtmlUtils.input(this.baseId+ID_DATE_START,start||"",[CLASS,"display-date-input","placeholder"," "+startLabel,TITLE,startLabel,ATTR_ID,this.baseId+ID_DATE_START,])+" - "+
HtmlUtils.input(this.baseId+ID_DATE_END,end||"",[CLASS,"display-date-input","placeholder"," "+endLabel,TITLE,endLabel,ATTR_ID,this.baseId+ID_DATE_END,]);return html;}});}
function DisplayAnimation(display,enabled,attrs){let dflt={};attrs=attrs||{};$.extend(dflt,attrs);const ID_RUN="animrun";const ID_NEXT="animnext";const ID_PREV="animprev";const ID_BEGIN="animbegin";const ID_END="animend";const ID_SLIDER="slider";const ID_TICKS="ticks";const ID_TOOLTIP="tooltip";const ID_SHOWALL="showall";const ID_WINDOW="window";const ID_STEP="step";const ID_SETTINGS="settings";const ID_FASTER="faster";const ID_SLOWER="slower";const ID_RESET="reset";const ID_ANIMATION_LABEL="animationlabel";const MODE_FRAME="frame";const MODE_SLIDING="sliding";$.extend(this,{display:display,enabled:enabled,targetDiv:attrs.targetDiv,baseDomId:attrs.baseDomId,labelSize:display.getProperty("animationLabelSize","12pt"),labelStyle:display.getProperty("animationLabelStyle",""),running:false,inAnimation:false,begin:null,end:null,dateMin:null,dateMax:null,dateRange:0,dateFormat:display.getProperty("animationDateFormat",display.getProperty("dateFormat","yyyymmdd")),mode:display.getProperty("animationMode","cumulative"),startAtBeginning:display.getProperty("animationStartAtBeginning",true),startAtEnd:display.getProperty("animationStartAtEnd",false),speed:parseInt(display.getProperty("animationSpeed",500)),dwell:parseInt(display.getProperty("animationDwell",1000)),getEnabled:function(){return this.enabled;},toggleAnimation:function(){this.running=!this.running;if(this.btnRun)
this.btnRun.html(HtmlUtils.getIconImage(this.running?"fa-stop":"fa-play"));if(this.running)
this.startAnimation();},getDomId:function(id){return this.domId(id);},domId:function(id){return this.display.getDomId(id+(this.baseDomId?this.baseDomId:""));},jq:function(id){return this.display.jq(id+(this.baseDomId?this.baseDomId:""));},init:function(dateMin,dateMax,records){let debug=false;if(debug)
console.log("animation.init:"+dateMin+" "+dateMax+" "+(records?"#records:"+records.length:"no records"));let _this=this;this.records=records;this.dateMin=dateMin;this.dateMax=dateMax;this.begin=this.dateMin;this.end=this.dateMax;if(!this.dateMin)return;this.dates=[];let seen={};records.every(r=>{if(!seen[r.getDate()]){seen[r.getDate()]=true;this.dates.push(r.getDate());}
return true;});this.dates.sort(function(a,b){return a.getTime()-b.getTime();});this.dateRange=this.dateMax.getTime()-this.dateMin.getTime();this.steps=parseFloat(this.display.getProperty("animationSteps",60));this.setWindow();this.frameIndex=0;if(!this.display.getProperty("animationStartShowAll",false)){this.resetRange();}
let sliderValues=this.mode!=MODE_FRAME?[this.begin.getTime(),this.end.getTime()]:[this.begin.getTime()];let tooltipFunc={mouseleave:function(e){if(_this.tooltip)
_this.tooltip.hide();},mousemove:function(e){if(!_this.tooltip)return;if(e.offsetX>=0){let parentWidth=_this.tooltip.parent().width();let parentLeft=_this.tooltip.parent().offset().left;let percent=(e.pageX-parentLeft)/parentWidth;let dttm=new Date(_this.dateMin.getTime()+percent*_this.dateRange);dttm=_this.formatAnimationDate(dttm,_this.tooltipDateFormat);if(!_this.makeSlider){dttm+="<br>+/-:zoom";}
_this.tooltip.html(dttm);_this.tooltip.show();_this.tooltip.position({of:e.target,my:"left top",at:"left+"+e.offsetX+" bottom",collision:"fit fit"});}}};if(this.makeSlider){let slider=this.jq(ID_SLIDER).slider({range:_this.mode!=MODE_FRAME,min:_this.dateMin.getTime(),max:_this.dateMax.getTime(),values:sliderValues,slide:function(event,ui){_this.stopAnimation();_this.setSliderValues(ui.values);_this.updateLabels();},stop:function(event,ui){_this.stopAnimation();_this.setSliderValues(ui.values);_this.dateRangeChanged(true);}});this.jq(ID_SLIDER).on(tooltipFunc);}else{this.jq(ID_TICKS).on(tooltipFunc);}
this.updateTicks();if(debug)console.log("animation.init-3");this.updateLabels();if(debug)console.log("animation.init-done");},resetRange:function(){if(this.startAtEnd){this.begin=this.dateMax;this.end=this.dateMax;if(this.mode==MODE_FRAME){this.frameIndex=this.dates.length-1;}}else if(this.startAtBeginning){this.begin=this.dateMin;this.end=new Date(this.begin.getTime()+this.window);}
if(this.mode==MODE_FRAME){this.end=this.begin;}},setWindow:function(){let window=this.display.getProperty("animationWindow");let step=this.display.getProperty("animationStep",window);if(window){this.window=this.getMillis(window);}else if(this.steps>0){this.window=this.dateRange/this.steps;}
if(step){this.step=this.getMillis(step);}else{this.step=this.window;}},timeMap:{century:1000*60*60*24*365*100,centuries:1000*60*60*24*365*100,decade:1000*60*60*24*365*10,halfdecade:1000*60*60*24*365*5,year:1000*60*60*24*365*1,month:1000*60*60*24*31,week:1000*60*60*24*7,day:1000*60*60*24*1,hour:1000*60*60,hour:1000*60,second:1000},getMillis:function(window){window=window.trim();let cnt=1;let unit="day";let toks=window.match("^([0-9]+)(.*)");if(toks){cnt=+toks[1];unit=toks[2].trim();}else{toks=window.match("(^[0-9]+)$");if(toks){unit="minute";cnt=+toks[1];}else{unit=window;}}
let scale=1;unit=unit.toLowerCase().trim();if(this.timeMap[unit]){scale=this.timeMap[unit];}else{if(unit.endsWith("s"))
unit=unit.substring(0,unit.length-1);if(this.timeMap[unit]){scale=this.timeMap[unit];}else{console.log("Unknown unit:"+unit);}}
return cnt*scale;},getIndex:function(){return this.frameIndex;},getBeginTime:function(){return this.begin;},handleEventAnimationChanged(args){this.begin=args.begin;this.end=args.end;this.stopAnimation();this.applyAnimation();},setSliderValues:function(v){let debug=false;if(debug)
console.log(this.display.type+" animation.setSliderValues");if(this.mode!=MODE_FRAME){this.begin=new Date(v[0]);this.end=new Date(v[1]);}else{let sliderDate=new Date(v[0]);let closest=this.dates[0];let dist=0;let closestIdx=0;this.dates.forEach((d,idx)=>{if(Math.abs(d.getTime()-sliderDate.getTime())<Math.abs(closest.getTime()-sliderDate.getTime())){closest=d;closestIdx=idx;}});this.begin=this.end=closest;this.frameIndex=closestIdx;}},handleEventRecordHighlight:function(source,args){let element=$("#"+this.display.getId()+"-"+args.record.getId());if(this.ticks)
this.ticks.removeClass("display-animation-tick-highlight");if(args.highlight){element.addClass("display-animation-tick-highlight");}else{element.removeClass("display-animation-tick-highlight");}},makeControls:function(){this.tickHeight=this.display.getProperty("animationHeight","15px");this.makeSlider=this.display.getProperty("animationMakeSlider",true);let buttons="";let showButtons=this.display.getProperty("animationShowButtons",true);let showSlider=display.getProperty("animationShowSlider",true);if(showButtons){let short=display.getProperty("animationWidgetShort",false);buttons+=HtmlUtils.span([ID,this.getDomId(ID_SETTINGS),TITLE,"Settings"],HtmlUtils.getIconImage("fas fa-cog"));if(!short)
buttons+=HtmlUtils.span([ID,this.getDomId(ID_BEGIN),TITLE,"Go to beginning"],HtmlUtils.getIconImage("fa-fast-backward"));buttons+=HtmlUtils.span([ID,this.getDomId(ID_PREV),TITLE,"Previous"],HtmlUtils.getIconImage("fa-step-backward"));if(!short)
buttons+=HtmlUtils.span([ID,this.getDomId(ID_RUN),TITLE,"Run/Stop"],HtmlUtils.getIconImage("fa-play"));buttons+=HtmlUtils.span([ID,this.getDomId(ID_NEXT),TITLE,"Next"],HtmlUtils.getIconImage("fa-step-forward"));if(!short)
buttons+=HtmlUtils.span([ID,this.getDomId(ID_END),TITLE,"Go to end"],HtmlUtils.getIconImage("fa-fast-forward"));}
if(showButtons){buttons+=HtmlUtils.span([ID,this.getDomId(ID_ANIMATION_LABEL),CLASS,"display-animation-label",STYLE,this.labelStyle+HU.css("font-size",this.labelSize)]);}else{buttons+=HtmlUtils.div([ID,this.getDomId(ID_ANIMATION_LABEL),CLASS,"display-animation-label",STYLE,this.labelStyle+HU.css("text-align","center","font-size",this.labelSize)]);}
buttons=HtmlUtils.div([CLASS,"display-animation-buttons"],buttons);if(showSlider){let style=HU.css("height",this.tickHeight)+display.getProperty("animationSliderStyle","");let tooltip=HU.div([ID,this.getDomId(ID_TOOLTIP),CLASS,"display-animation-tooltip"],"");let tickContainerStyle=HU.css("height",this.tickHeight);if(!this.makeSlider){tickContainerStyle+=HU.css("background","efefef","border","1px solid #aaa");}
if(!this.makeSlider){style+=HU.css("cursor","move");}
buttons+=HtmlUtils.div([CLASS,"display-animation-slider",STYLE,style,ID,this.getDomId(ID_SLIDER)],tooltip+HtmlUtils.div([STYLE,tickContainerStyle,CLASS,"display-animation-ticks","tabindex","0",ID,this.getDomId(ID_TICKS)]));}
this.html=HtmlUtils.div([STYLE,this.display.getProperty("animationStyle")],buttons);if(this.display.getProperty("animationShow",true)){if(this.targetDiv)this.targetDiv.append(this.html);else this.jq(ID_TOP_LEFT).append(this.html);}
if(!this.makeSlider){let _this=this;this.jq(ID_TICKS).mouseenter(function(event){$(this).focus();});this.lastKeyTime=0;let ticks=this.jq(ID_TICKS);ticks.mousedown(function(e){_this.mouseIsDown=true;let parentOffset=$(this).parent().offset();_this.mouseX=e.pageX-parentOffset.left;});ticks.mousemove(function(e){if(!_this.mouseIsDown)return;var parentOffset=$(this).parent().offset();var relX=e.pageX-parentOffset.left;let range=_this.dateMax.getTime()-_this.dateMin.getTime();let width=$(this).width();let dx=(_this.mouseX-relX);var parentOffset=$(this).parent().offset();_this.mouseX=e.pageX-parentOffset.left;if(dx==0)return;let dt=range*dx/width
if(!_this.originaDateMin){_this.originaDateMin=_this.dateMin;_this.originaDateMax=_this.dateMax;}
_this.dateMin=new Date(_this.dateMin.getTime()+dt);_this.dateMax=new Date(_this.dateMax.getTime()+dt);let t1=new Date();_this.updateTicks();let t2=new Date();_this.updateLabels();});ticks.mouseup(function(e){_this.mouseIsDown=false;});ticks.keypress(function(event){let now=new Date();let diff=now.getTime()-_this.lastKeyTime;_this.lastKeyTime=now.getTime();if(event.which==43)
_this.zoom(true);else if(event.which==45)
_this.zoom(false);else if(event.which==61)
_this.zoomReset();});this.jq(ID_TICKS).bind('xwheel',function(e){$(this).focus();if(e.originalEvent.deltaY<0){let range=_this.dateMax.getTime()-_this.dateMin.getTime();let newRange=range*0.9;let diff=range-newRange;_this.dateMin=new Date(_this.dateMin.getTime()+diff);_this.dateMax=new Date(_this.dateMax.getTime()-diff);_this.updateTicks();_this.updateLabels();}else if(e.originalEvent.deltaY>0){}else{}
e.stopPropagation();e.stopImmediatePropagation();e.preventDefault();});}
if(this.display.getProperty("animationTooltipShow",false)){this.tooltip=this.jq(ID_TOOLTIP);this.tooltipDateFormat=this.display.getProperty("animationTooltipDateFormat");}
let _this=this;this.jq(ID_SETTINGS).button().click(function(){let window=_this.display.getProperty("animationWindow");let step=_this.display.getProperty("animationStep",window);let clazz="ramadda-hoverable ramadda-clickable";let html=HU.div([ID,_this.domId(ID_FASTER),TITLE,"Faster",CLASS,clazz],"Faster")+
HU.div([ID,_this.domId(ID_SLOWER),TITLE,"Slower",CLASS,clazz],"Slower")+
HU.div([ID,_this.domId(ID_RESET),TITLE,"Reset",CLASS,clazz],"Reset")+
HU.div([ID,_this.domId(ID_SHOWALL),TITLE,"Show all",CLASS,clazz],"Show all");if(window){html+=HU.div([TITLE,"Window, e.g., 1 week, 2 months, 3 days, 2 weeks, etc"],"Window:<br>"+SPACE2+HU.input("",window,[ID,_this.domId(ID_WINDOW),"size","10"]));html+=HU.div([TITLE,"Step, e.g., 1 week, 2 months, 3 days, 2 weeks, etc"],"Step:<br>"+SPACE2+HU.input("",step,[ID,_this.domId(ID_STEP),"size","10"]));}
html=HU.div([STYLE,HU.css("margin","4px")],html);_this.dialog=HU.makeDialog({content:html,anchor:$(this),draggable:false,header:false});let key=(e)=>{if(Utils.isReturnKey(e)){_this.dialog.hide();_this.display.setProperty("animationWindow",_this.jq(ID_WINDOW).val());_this.display.setProperty("animationStep",_this.jq(ID_STEP).val());_this.setWindow();_this.resetRange();_this.dateRangeChanged();}};_this.jq(ID_WINDOW).keyup(key);_this.jq(ID_STEP).keyup(key);_this.jq(ID_FASTER).click(()=>{_this.dialog.hide();_this.speed=_this.speed*0.75;});_this.jq(ID_SLOWER).click(()=>{_this.dialog.hide();_this.speed=_this.speed*1.5;});_this.jq(ID_RESET).click(()=>{_this.dialog.hide();_this.speed=parseInt(_this.display.getProperty("animationSpeed",500));_this.resetRange();_this.inAnimation=false;_this.stopAnimation();_this.dateRangeChanged();});_this.jq(ID_SHOWALL).click(()=>{_this.dialog.hide();_this.begin=_this.dateMin;_this.end=_this.dateMax;_this.inAnimation=false;_this.stopAnimation();_this.dateRangeChanged();});});this.btnRun=this.jq(ID_RUN);this.btnPrev=this.jq(ID_PREV);this.btnNext=this.jq(ID_NEXT);this.btnBegin=this.jq(ID_BEGIN);this.btnEnd=this.jq(ID_END);this.label=this.jq(ID_ANIMATION_LABEL);this.btnRun.button().click(()=>{this.toggleAnimation();});this.btnBegin.button().click(()=>{let diff=this.getDiff();let fullRange=this.fullRange();this.begin=this.dateMin;if(this.mode==MODE_SLIDING){this.end=new Date(this.begin.getTime()+(fullRange?this.window:diff));}else if(this.mode==MODE_FRAME){this.frameIndex=0;this.begin=this.end=this.deltaFrame(0);}else{this.end=new Date(this.dateMin.getTime()+this.window);}
this.stopAnimation();this.dateRangeChanged();});this.btnEnd.button().click(()=>{let diff=this.getDiff();let fullRange=this.fullRange();this.end=this.dateMax;if(this.mode==MODE_SLIDING){this.begin=new Date(this.end.getTime()-(fullRange?this.window:diff));}else if(this.mode==MODE_FRAME){this.frameIndex=this.dates.length+1;this.begin=this.end=this.deltaFrame(0);}else{this.end=this.dateMax;}
this.stopAnimation();this.dateRangeChanged();});this.btnPrev.button().click(()=>{this.stopAnimation();this.doPrev();});this.btnNext.button().click(()=>{this.stopAnimation();this.doNext();});},fullRange:function(){return this.atBegin()&&this.atEnd();},atEnd:function(){return this.end.getTime()>=this.dateMax.getTime();},atBegin:function(){return this.begin.getTime()<=this.dateMin.getTime();},getDiff:function(){return this.end.getTime()-this.begin.getTime();},doPrev:function(){let diff=this.getDiff()||this.window;diff=this.window||this.getDiff();if(this.mode==MODE_SLIDING){this.begin=new Date(this.begin.getTime()-diff);if(this.begin.getTime()<this.dateMin.getTime())
this.begin=this.dateMin;this.end=new Date(this.begin.getTime()+diff);}else if(this.mode==MODE_FRAME){this.begin=this.end=this.deltaFrame(-1);}else{this.end=new Date(this.end.getTime()-this.window);if(this.end.getTime()<=this.begin.getTime()){this.end=new Date(this.begin.getTime()+this.window);}}
this.dateRangeChanged();},doNext:function(){let debug=false;let wasAtEnd=this.atEnd();if(debug)console.log("animation.doNext:"+this.mode+" atEnd="+wasAtEnd);if(this.mode==MODE_SLIDING){let window=this.window||this.getDiff();this.begin=new Date(this.begin.getTime()+this.step);this.end=new Date(this.end.getTime()+this.step);if(this.atEnd()){this.end=this.dateMax;this.begin=new Date(this.end.getTime()-window);this.inAnimation=false;this.stopAnimation();}}else if(this.mode==MODE_FRAME){this.begin=this.end=this.deltaFrame(1);if(this.running){if(wasAtEnd){if(this.display.getProperty("animationLoop",true)){setTimeout(()=>{this.begin=this.end=this.dateMin;this.frameIndex=0;this.updateUI();},this.dwell);return;}else{this.stopAnimation();}}}}else{this.end=new Date(this.end.getTime()+this.window);if(this.atEnd()){this.end=this.dateMax;this.inAnimation=false;this.stopAnimation();}}
this.dateRangeChanged();},deltaFrame:function(delta){this.frameIndex+=delta;if(!this.dates)return;if(this.frameIndex>=this.dates.length)
this.frameIndex=this.dates.length-1;else if(this.frameIndex<0)
this.frameIndex=0;return this.dates[this.frameIndex];},startAnimation:function(){if(!this.dateMax)return;if(!this.inAnimation){this.inAnimation=true;this.label.html("");if(this.mode==MODE_FRAME){this.frameIndex=0;this.begin=this.end=this.deltaFrame(0);this.display.animationStart();this.doNext();return;}
if(this.fullRange()){this.end=new Date(this.begin.getTime()+this.window);}
this.display.animationStart();}
this.doNext();},stopAnimation:function(){if(this.btnRun)
this.btnRun.html(HtmlUtils.getIconImage("fa-play"));this.running=false;},setDateRange:function(begin,end){this.begin=begin;this.end=end;this.stopAnimation();this.updateUI();},dateRangeChanged:function(skipSlider){this.applyAnimation(skipSlider);this.display.getDisplayManager().notifyEvent(DisplayEvent.animationChanged,this.display,{begin:this.begin,end:this.end});},applyAnimation:function(skipSlider){this.display.animationApply(this);this.updateUI();},setRecordListHighlight:function(recordList){this.recordListHighlight=recordList;this.updateTicks();},zoomReset:function(){if(this.originaDateMin){this.dateMax=this.originaDateMax;this.dateMin=this.originaDateMin;this.updateTicks();this.updateLabels();}},zoom:function(zoomin){let range=this.dateMax.getTime()-this.dateMin.getTime();let newRange=range*(zoomin?0.9:1.1);let diff=range-newRange;if(!this.originaDateMin){this.originaDateMin=this.dateMin;this.originaDateMax=this.dateMax;}
this.dateMin=new Date(this.dateMin.getTime()+diff);this.dateMax=new Date(this.dateMax.getTime()-diff);this.updateTicks();this.updateLabels();},updateTicks:function(){let debug=false;this.tickCount=0;if(!this.records||!this.display.getProperty("animationShowTicks",true))return;this.highlightRecords={};if(this.recordListHighlight){this.recordListHighlight.forEach(r=>{this.highlightRecords[r.getId()]=true;});}
if(debug)console.log("animation.init making ticks: #records="+records.length+" date:"+this.dateMin+" "+this.dateMax);let tickStyle=this.display.getProperty("animationTickStyle","");let ticks="";let min=this.dateMin.getTime();let max=this.dateMax.getTime();let p=0;let seenDate={};let t1=new Date();for(let i=0;i<this.records.length;i++){let record=this.records[i];let date=record.getDate().getTime();if(seenDate[date])continue;seenDate[date]=true;if(debug)console.log("\ttick:"+record.getDate());if(date<min)continue;if(date>max)continue;this.tickCount++;let perc=(date-min)/(max-min)*100;let tt=this.formatAnimationDate(record.getDate());let clazz="display-animation-tick";if(this.highlightRecords[record.getId()]){clazz+=" display-animation-tick-highlight-base ";}
ticks+=HtmlUtils.div([TITLE,"",ID,this.display.getId()+"-"+record.getId(),CLASS,clazz,STYLE,HU.css("height",this.tickHeight,'left',perc+'%')+tickStyle,TITLE,tt,RECORD_ID,record.getId()],"");}
let t2=new Date();this.jq(ID_TICKS).html(ticks);let t3=new Date();if(debug)console.log("animation.init done making ticks");let propagateHighlight=display.getProperty("animationHighlightRecord",false);let propagateSelect=display.getProperty("animationSelectRecord",true);this.ticks=this.jq(ID_TICKS).find(".display-animation-tick");let _this=this;this.display.makeTooltips(this.ticks,this.records,(open,record)=>{if(_this.display.animationLastRecordSelectTime){let now=new Date();if(now.getTime()-_this.display.animationLastRecordSelectTime.getTime()<1500){return false;}}
if(record&&propagateHighlight){if(propagateSelect){_this.display.propagateEventRecordSelection({select:false,record:null});}
this.display.handleEventRecordHighlight(this,{highlight:open,record:record,skipAnimation:true});}
return true;},null,propagateHighlight);if(propagateSelect){this.display.makeRecordSelect(this.ticks,this.display.makeIdToRecords(this.records),record=>{_this.display.animationLastRecordSelectTime=new Date();});}
let t4=new Date();},updateUI:function(skipSlider){if(!skipSlider){if(this.makeSlider){this.jq(ID_SLIDER).slider('values',0,this.begin.getTime());this.jq(ID_SLIDER).slider('values',1,this.end.getTime());}}
this.updateLabels();let windowEnd=this.end.getTime();if(windowEnd<=this.dateMax.getTime()){if(this.running){setTimeout(()=>{if(!this.running)return;this.doNext();},this.speed);}}else{this.running=false;this.inAnimation=false;if(this.btnRun)
this.btnRun.html(HtmlUtils.getIconImage("fa-play"));}},makeLabel:function(label){return HU.span([STYLE,HU.css("font-size",this.labelSize)+this.labelStyle],label);},updateLabels:function(){if(this.label){if(!this.makeSlider){this.label.html(HU.leftCenterRight(this.makeLabel(this.formatAnimationDate(this.dateMin)),this.makeLabel("# "+this.tickCount),this.makeLabel(this.formatAnimationDate(this.dateMax))));}else{if(this.mode==MODE_FRAME&&this.begin==this.end){this.label.html(this.makeLabel(this.formatAnimationDate(this.begin)));}else{this.label.html(this.makeLabel(this.formatAnimationDate(this.begin)+" - "+this.formatAnimationDate(this.end)));}}}},formatAnimationDate:function(date,format,debug){let timeZoneOffset=this.display.getProperty("timeZoneOffset");let timeZone=this.display.getProperty("timeZone");if(timeZoneOffset){if(debug)console.log("date before:"+date.toUTCString());date=Utils.createDate(date,-timeZoneOffset);if(debug)console.log("date after:"+date.toUTCString());}
let fmt=Utils.formatDateWithFormat(date,format||this.dateFormat,true);if(timeZone)return fmt+" "+timeZone;return fmt;},});}
function ColorByInfo(display,fields,records,prop,colorByMapProp,defaultColorTable,propPrefix,theField,props,lastColorBy){this.properties=props||{};if(!prop)prop="colorBy";if(!propPrefix){propPrefix=["colorBy",""];}else if(!Array.isArray(propPrefix)){propPrefix=[propPrefix];}
$.extend(this,{display:display,fieldProp:prop,fieldValue:display.getProperty(prop),propPrefix:propPrefix,colorHistory:{}});let colorByAttr=this.getProperty(prop||"colorBy",null);if(theField==null){if(prop.getId){theField=prop;}else{theField=display.getFieldById(null,colorByAttr);}}
if(theField){this.field=theField;propPrefix=[theField.getId()+".",""];colorByAttr=theField.getId();this.propPrefix.unshift(theField.getId()+".colorBy");this.propPrefix.push("colorBy");}
$.extend(this,{display:display,id:colorByAttr,fields:fields,field:theField,colorThresholdField:display.getFieldById(null,display.getProperty("colorThresholdField")),aboveColor:display.getProperty("colorThresholdAbove","red"),belowColor:display.getProperty("colorThresholdAbove","blue"),excludeZero:this.getProperty(PROP_EXCLUDE_ZERO,false),overrideRange:this.getProperty("overrideColorRange",false),inverse:this.getProperty("Inverse",false),origRange:null,origMinValue:0,origMaxValue:0,minValue:0,maxValue:0,toMinValue:0,toMaxValue:100,isString:false,stringMap:null,colorByMap:{},colorByValues:[],colorByMinPerc:this.getProperty("MinPercentile",-1),colorByMaxPerc:this.getProperty("MaxPercentile",-1),colorByOffset:0,pctFields:null,compareFields:display.getFieldsByIds(null,this.getProperty("CompareFields","")),});if(lastColorBy&&!lastColorBy.colorOverflow){}
if(this.fieldValue=="year"){let seen={};this.dates=[];records.forEach(r=>{let year=r.getDate().getUTCFullYear();if(!seen[year]){seen[year]=true;this.dates.push(year);}});this.dates.sort();this.setRange(this.dates[0],this.dates[this.dates.length-1]);}
this.convertAlpha=this.getProperty("convertColorAlpha",false);if(this.convertAlpha){if(!Utils.isDefined(this.getProperty("alphaSourceMin"))){var min=0,max=0;records.forEach((record,idx)=>{var tuple=record.getData();if(this.compareFields.length>0){this.compareFields.map((f,idx2)=>{var v=tuple[f.getIndex()];if(isNaN(v))return;min=idx==0&&idx2==0?v:Math.min(min,v);max=idx==0&&idx2==0?v:Math.max(max,v);});}else if(this.index=0){var v=tuple[this.index];if(isNaN(v))return;min=idx==0?v:Math.min(min,v);max=idx==0?v:Math.max(max,v);}});this.alphaSourceMin=min;this.alphaSourceMax=max;}else{this.alphaSourceMin=+this.getProperty("alphaSourceMin",40);this.alphaSourceMax=+this.getProperty("alphaSourceMax",80);}
this.alphaTargetMin=+this.getProperty("alphaTargetMin",0);this.alphaTargetMax=+this.getProperty("alphaTargetMax",1);}
this.convertIntensity=this.getProperty("convertColorIntensity",false);if(this.convertIntensity){if(!Utils.isDefined(this.getProperty("intensitySourceMin"))){var min=0,max=0;records.forEach((record,idx)=>{var tuple=record.getData();if(this.compareFields.length>0){this.compareFields.map((f,idx2)=>{var v=tuple[f.getIndex()];if(isNaN(v))return;min=idx==0&&idx2==0?v:Math.min(min,v);max=idx==0&&idx2==0?v:Math.max(max,v);});}else if(this.index=0){var v=tuple[this.index];if(isNaN(v))return;min=idx==0?v:Math.min(min,v);max=idx==0?v:Math.max(max,v);}});this.intensitySourceMin=min;this.intensitySourceMax=max;}else{this.intensitySourceMin=+this.getProperty("intensitySourceMin",80);this.intensitySourceMax=+this.getProperty("intensitySourceMax",40);}
this.intensityTargetMin=+this.getProperty("intensityTargetMin",1);this.intensityTargetMax=+this.getProperty("intensityTargetMax",0);}
if(this.display.percentFields!=null){this.pctFields=this.display.percentFields.split(",");}
let colors=defaultColorTable||this.display.getColorTable(true,[colorByAttr+".colorTable","colorTable"]);if(!colors&&colorByAttr){let c=this.display.getProperty(colorByAttr+".colors");if(c)colors=c.split(",");}
if(!colors){var c=this.getProperty(colorByAttr+".colors");if(c)
colors=c.split(",");}
if(!colors)
colors=this.display.getColorTable(true);this.colors=colors;if(this.hasField()&&!colors){}
if(!this.colors&&this.display.colors&&this.display.colors.length>0){this.colors=source.colors;if(this.colors.length==1&&Utils.ColorTables[this.colors[0]]){this.colors=Utils.ColorTables[this.colors[0]].colors;}}
if(this.colors==null){this.colors=Utils.ColorTables.grayscale.colors;}
if(!this.field){for(var i=0;i<fields.length;i++){var field=fields[i];if(field.getId()==this.id||("#"+(i+1))==this.id){this.field=field;}}}
if(!this.field){if(this.id=="hour")
this.timeField="hour";else if(this.id=="day")
this.timeField="day";}
if(this.field&&this.field.isString())this.isString=true;this.index=this.field!=null?this.field.getIndex():-1;this.stringMap=this.display.getColorByMap(colorByMapProp);let uniqueValues=[];let seenValue={};if(this.index>=0||this.timeField){let min=NaN;let max=NaN;records.forEach((record,idx)=>{let tuple=record.getData();let v;if(this.timeField){if(this.timeField=="hour")
v=record.getTime().getHours();else
v=record.getTime().getTime();}else{v=tuple[this.index];}
if(this.isString){if(!seenValue[v]){seenValue[v]=true;uniqueValues.push(v);}
return;}
if(this.excludeZero&&v===0){return;}
min=Utils.min(min,v);max=Utils.max(max,v);});this.minValue=min;this.maxValue=max;this.origRange=[min,max];}
if(uniqueValues.length>0){uniqueValues.sort((a,b)=>{return a.toString().localeCompare(b.toString());});uniqueValues.forEach(v=>{if(!Utils.isDefined(this.colorByMap[v])){let index=this.colorByValues.length;let color;if(this.lastColorByMap&&this.lastColorByMap[v]){color=this.lastColorByMap[v];}else{if(index>=this.colors.length){this.colorOverflow=true;index=index%this.colors.length;}
color=this.colors[index];}
this.colorByValues.push({value:v,color:color});this.colorByMap[v]=color;this.setRange(1,this.colorByValues.length,true);}});}
if(this.display.showPercent){this.setRange(0,100,true);}
var steps=this.getProperty("Steps");if(steps){this.steps=steps.split(",");}
this.colorByLog=this.getProperty("Log",false);this.colorByLog10=this.getProperty("Log10",false);this.colorByLog2=this.getProperty("Log2",false);if(this.colorByLog){this.colorByFunc=Math.log;}else if(this.colorByLog10){this.colorByFunc=Math.log10;}else if(this.colorByLog2){this.colorByFunc=Math.log2;}
this.setRange(this.getProperty("Min",this.minValue),this.getProperty("Max",this.maxValue),true);this.range=this.maxValue-this.minValue;this.toMinValue=this.getProperty("ToMin",this.toMinValue);this.toMaxValue=this.getProperty("ToMax",this.toMaxValue);this.enabled=this.timeField!=null||(this.getProperty("doColorBy",true)&&this.index>=0);}
ColorByInfo.prototype={getProperty:function(prop,dflt,debug){if(this.properties[prop])return this.properties[prop];if(this.debug)console.log("getProperty:"+prop);for(let i=0;i<this.propPrefix.length;i++){this.display.debugGetProperty=debug;if(this.debug)console.log("\t"+this.propPrefix[i]+prop);let v=this.display.getProperty(this.propPrefix[i]+prop);this.display.debugGetProperty=false;if(Utils.isDefined(v))return v;}
return dflt;},isEnabled:function(){return this.enabled;},displayColorTable:function(width,force,domId){if(!this.getProperty("showColorTable",true))return;if(this.compareFields.length>0){var legend="";this.compareFields.map((f,idx)=>{legend+=HtmlUtils.div([STYLE,HU.css('display','inline-block','width','15px','height','15px','background',this.colors[idx])])+" "+
f.getLabel()+" ";});let dom=this.display.jq(domId||ID_COLORTABLE);dom.html(HtmlUtils.div([STYLE,HU.css('text-align','center','margin-top','5px')],legend));}
if(!force&&this.index<0)return;if(this.stringMap){let colors=[];this.colorByValues=[];for(var i in this.stringMap){let color=this.stringMap[i];this.colorByValues.push({value:i,color:color});colors.push(color);}
this.display.displayColorTable(colors,domId||ID_COLORTABLE,this.origMinValue,this.origMaxValue,{colorByInfo:this,width:width,stringValues:this.colorByValues});}else{let colors=this.colors;if(this.getProperty("clipColorTable",true)&&this.colorByValues.length){var tmp=[];for(var i=0;i<this.colorByValues.length&&i<colors.length;i++)
tmp.push(this.colors[i]);colors=tmp;}
let cbs=this.colorByValues.map(v=>{return v;});cbs.sort((a,b)=>{return a.value.toString().localeCompare(b.value.toString());});this.display.displayColorTable(colors,domId||ID_COLORTABLE,this.origMinValue,this.origMaxValue,{colorByInfo:this,width:width,stringValues:cbs});}},resetRange:function(){if(this.origRange){this.setRange(this.origRange[0],this.origRange[1]);}},setRange:function(minValue,maxValue,force){if(!force&&this.overrideRange)return;this.origMinValue=minValue;this.origMaxValue=maxValue;if(this.colorByFunc){if(minValue<0){this.colorByOffset=-minValue;}else if(minValue==0){this.colorByOffset=1;}
minValue=this.colorByFunc(minValue+this.colorByOffset);maxValue=this.colorByFunc(maxValue+this.colorByOffset);}
this.minValue=minValue;this.maxValue=maxValue;this.range=maxValue-minValue;if(!this.origRange){this.origRange=[minValue,maxValue];}
},getValuePercent:function(v){let perc=(v-this.minValue)/this.range;if(this.inverse)perc=1-perc;return perc;},scaleToValue:function(v){let perc=this.getValuePercent(v);return this.toMinValue+(perc*(this.toMaxValue-this.toMinValue));},getColorFromRecord:function(record,dflt,checkHistory){if(this.display.getFilterHighlight()&&!record.isHighlight(this.display)){return this.display.getProperty("unhighlightColor","#eee");}
if(this.colorThresholdField&&this.display.selectedRecord){let v=this.display.selectedRecord.getValue(this.colorThresholdField.getIndex());let v2=record.getValue(this.colorThresholdField.getIndex());if(v2>v)return this.aboveColor;else return this.belowColor;}
if(this.index>=0){let value=record.getData()[this.index];return this.getColor(value,record,checkHistory);}else if(this.timeField){let value;if(this.timeField=="hour"){value=record.getTime().getHours();}else{value=record.getTime().getTime();}
return this.getColor(value,record,checkHistory);}
if(this.fieldValue=="year"){let value=record.getDate().getUTCFullYear();return this.getColor(value,record);}
return dflt;},hasField:function(){return this.index>=0;},getColor:function(value,pointRecord,checkHistory){let c=this.getColorInner(value,pointRecord);return c;},getColorInner:function(value,pointRecord){if(this.display.getFilterHighlight()&&pointRecord&&!pointRecord.isHighlight(this.display)){return this.display.getUnhighlightColor();}
let percent=0.5;if(this.showPercent){let total=0;let data=pointRecord.getData();for(let j=0;j<data.length;j++){let ok=this.fields[j].isNumeric()&&!this.fields[j].isFieldGeo();if(ok&&this.pctFields!=null){ok=this.pctFields.indexOf(this.fields[j].getId())>=0||this.pctFields.indexOf("#"+(j+1))>=0;}
if(ok){total+=data[j];}}
if(total!=0){percent=value/total*100;percent=(percent-this.minValue)/(this.maxValue-this.minValue);}}else{let v=value;if(this.stringMap){let color=this.stringMap[value];if(!Utils.isDefined(color)){return this.stringMap["default"];}
return color;}
if(this.isString){color=this.colorByMap[v];if(color)return color;}
let tmp=v;v+=this.colorByOffset;if(this.colorByFunc&&v>0){v=this.colorByFunc(v);}
percent=this.range?(v-this.minValue)/this.range:0.5;}
let index=0;if(this.steps){for(;index<this.steps.length;index++){if(v<=this.steps[index]){break;}}}else{index=parseInt(percent*this.colors.length);}
if(index>=this.colors.length)index=this.colors.length-1;else if(index<0)index=0;if(this.stringMap){let color=this.stringMap[value];if(!Utils.isDefined(color)){return this.stringMap["default"];}
return color;}else{return this.colors[index];}
return null;},convertColor:function(color,colorByValue){color=this.convertColorIntensity(color,colorByValue);color=this.convertColorAlpha(color,colorByValue);return color;},convertColorIntensity:function(color,colorByValue){if(!this.convertIntensity)return color;percent=(colorByValue-this.intensitySourceMin)/(this.intensitySourceMax-this.intensitySourceMin);intensity=this.intensityTargetMin+percent*(this.intensityTargetMax-this.intensityTargetMin);let result=Utils.pSBC(intensity,color);return result||color;},convertColorAlpha:function(color,colorByValue){if(!this.convertAlpha)return color;percent=(colorByValue-this.alphaSourceMin)/(this.alphaSourceMax-this.alphaSourceMin);alpha=this.alphaTargetMin+percent*(this.alphaTargetMax-this.alphaTargetMin);let result=Utils.addAlphaToColor(color,alpha);return result||color;}}
function drawSparkLine(display,dom,w,h,data,records,min,max,colorBy,attrs,margin){if(!attrs)attrs={};if(!margin)
margin={top:0,right:0,bottom:0,left:0};const INNER_WIDTH=w-margin.left-margin.right;const INNER_HEIGHT=h-margin.top-margin.bottom;const BAR_WIDTH=w/data.length;const x=d3.scaleLinear().domain([0,data.length]).range([0,INNER_WIDTH]);const y=d3.scaleLinear().domain([min,max]).range([INNER_HEIGHT,0]);const recty=d3.scaleLinear().domain([min,max]).range([0,INNER_HEIGHT]);let tt=d3.select("body").append("div").attr(CLASS,"sparkline-tooltip").style("opacity",0);const svg=d3.select(dom).append('svg').attr('width',w).attr('height',h).append('g').attr('transform','translate('+margin.left+','+margin.top+')');const line=d3.line().x((d,i)=>x(i)).y(d=>y(d));let lineColor=attrs.lineColor||display.getProperty("sparklineLineColor","#000");let barColor=attrs.barColor||display.getProperty("sparklineBarColor","MediumSeaGreen");let circleColor=attrs.circleColor||display.getProperty("sparklineCircleColor","#000");let circleRadius=attrs.circleRadius||display.getProperty("sparklineCircleRadius",1);let lineWidth=attrs.lineWidth||display.getProperty("sparklineLineWidth",1);let defaultShowEndPoints=true;let getColor=(d,i,dflt)=>{return colorBy?colorBy.getColorFromRecord(records[i],dflt):dflt;};let showBars=attrs.showBars||display.getProperty("sparklineShowBars",false);svg.append('line').attr('x1',0).attr('y1',0).attr('x2',0).attr('y2',h).attr("stroke-width",1).attr("stroke",'#ccc');svg.append('line').attr('x1',0).attr('y1',h).attr('x2',w).attr('y2',h).attr("stroke-width",1).attr("stroke",'#ccc');let getNum=n=>{if(isNaN(n))return 0;return n;};if(showBars){defaultShowEndPoints=false;svg.selectAll('.bar').data(data).enter().append('rect').attr('class','bar').attr('x',(d,i)=>getNum(x(i))).attr('y',d=>getNum(y(d))).attr('width',BAR_WIDTH).attr('height',d=>getNum(h-y(d))).attr('fill',(d,i)=>getColor(d,i,barColor)).style("cursor","pointer")}
if(attrs.showLines||display.getProperty("sparklineShowLines",true)){svg.selectAll('line').data(data).enter().append("line").attr('x1',(d,i)=>{return x(i)}).attr('y1',(d,i)=>{return y(d)}).attr('x2',(d,i)=>{return x(i+1)}).attr('y2',(d,i)=>{return y(i<data.length-1?data[i+1]:data[i])}).attr("stroke-width",lineWidth).attr("stroke",(d,i)=>{if(isNaN(d))return"rgba(0,0,0,0)";return getColor(d,i,lineColor)}).style("cursor","pointer");}
if(attrs.showCircles||display.getProperty("sparklineShowCircles",false)){svg.selectAll('circle').data(data).enter().append("circle").attr('r',(d,i)=>{return isNaN(d)?0:circleRadius}).attr('cx',(d,i)=>{return getNum(x(i))}).attr('cy',(d,i)=>{return getNum(y(d))}).attr('fill',(d,i)=>getColor(d,i,circleColor)).style("cursor","pointer");}
if(attrs.showEndpoints||display.getProperty("sparklineShowEndPoints",defaultShowEndPoints)){let fidx=0;while(isNaN(data[fidx])&&fidx<data.length)fidx++;let lidx=data.length-1;while(isNaN(data[lidx])&&lidx>=0)lidx--;svg.append('circle').attr('r',attrs.endPointRadius||display.getProperty("sparklineEndPointRadius",2)).attr('cx',x(fidx)).attr('cy',y(data[fidx])).attr('fill',attrs.endPoint1Color||display.getProperty("sparklineEndPoint1Color")||getColor(data[0],0,display.getProperty("sparklineEndPoint1Color",'steelblue')));svg.append('circle').attr('r',attrs.endPointRadius||display.getProperty("sparklineEndPointRadius",2)).attr('cx',x(lidx)).attr('cy',y(data[lidx])).attr('fill',attrs.endPoint2Color||display.getProperty("sparklineEndPoint2Color")||getColor(data[data.length-1],data.length-1,display.getProperty("sparklineEndPoint2Color",'tomato')));}
let _display=display;let doTooltip=display.getProperty("sparklineDoTooltip",true)||attrs.doTooltip;svg.on("click",function(){let coords=d3.mouse(this);if(records){let record=records[Math.round(x.invert(coords[0]))]
if(record)
_display.propagateEventRecordSelection({select:true,record:record});}});if(doTooltip){svg.on("mouseover",function(){if(!records)return;let coords=d3.mouse(this);let record=records[Math.round(x.invert(coords[0]))]
if(!record)return;let html=_display.getRecordHtml(record);let ele=$(dom);let offset=ele.offset().top+ele.height();let left=ele.offset().left;tt.transition().duration(200).style("opacity",.9);tt.html(html).style("left",left+"px").style("top",offset+"px");}).on("mouseout",function(d){tt.transition().duration(500).style("opacity",0);});}}
function drawDots(display,dom,w,h,data,range,colorBy,attrs,margin){attrs=attrs||{};margin=margin||{top:0,right:0,bottom:0,left:0};const INNER_WIDTH=w-margin.left-margin.right;const INNER_HEIGHT=h-margin.top-margin.bottom;const x=d3.scaleLinear().domain([range.minx,range.maxx]).range([0,INNER_WIDTH]);const y=d3.scaleLinear().domain([range.miny,range.maxy]).range([INNER_HEIGHT,0]);let tt=d3.select("body").append("div").attr(CLASS,"sparkline-tooltip").style("opacity",0);const svg=d3.select(dom).append('svg').attr('width',w).attr('height',h).append('g')
let circleColor=attrs.circleColor||display.getProperty("sparklineCircleColor","#000");let circleRadius=attrs.circleRadius||display.getProperty("sparklineCircleRadius",1);let getColor=(d,i,dflt)=>{return"#000"
};console.log(JSON.stringify(range));let getNum=n=>{if(isNaN(n))return 0;return n;};let recordMap={};svg.selectAll('circle').data(data).enter().append("circle").attr('r',(d,i)=>{return circleRadius}).attr('cx',(d,i)=>{return getNum(x(d.x))}).attr('cy',(d,i)=>{return getNum(y(d.y))}).attr('fill',(d,i)=>{return getColor(d,i,circleColor)}).attr(RECORD_ID,(d,i)=>{return"XX";recordMap[d.record.getId()]=d.record;return d.record.getId()}).style("cursor","pointer");let _display=display;let doTooltip=display.getProperty("sparklineDoTooltip",true)||attrs.doTooltip;svg.on("click",function(){let coords=d3.mouse(this);if(records){let record=records[Math.round(x.invert(coords[0]))]
if(record)
_display.propagateEventRecordSelection({select:true,record:record});}});if(doTooltip){svg.on("mouseover",function(){d3.select(this).attr("r",10).style("fill","red");let ele=$(dom);ele.attr('r',20);console.log("mouse over:"+d3.select(this).attr(RECORD_ID));return
let record=recordMap[ele.attr(RECORD_ID)];console.log(ele.attr(RECORD_ID)+" "+record);let coords=d3.mouse(this);if(!record)return;let html=_display.getRecordHtml(record);let offset=ele.offset().top+ele.height();let left=ele.offset().left;tt.transition().duration(200).style("opacity",.9);tt.html(html).style("left",left+"px").style("top",offset+"px");}).on("mouseout",function(d){tt.transition().duration(500).style("opacity",0);});}}
function drawPieChart(display,dom,width,height,array,min,max,colorBy,attrs){if(!attrs)attrs={};let margin=Utils.isDefined(attrs.margin)?attrs.margin:4;let colors=attrs.pieColors||Utils.ColorTables.cats.colors;let radius=Math.min(width,height)/2-margin
let svg=d3.select(dom).append("svg").attr("width",width).attr("height",height).append("g").attr("transform","translate("+width/2+","+height/2+")");let data={};array.forEach(tuple=>{data[tuple[0]]=tuple[1];})
let color=d3.scaleOrdinal().domain(data).range(colors)
let pie=d3.pie().value(function(d){return d.value;})
let data_ready=pie(d3.entries(data))
svg.selectAll('whatever').data(data_ready).enter().append('path').attr('d',d3.arc().innerRadius(0).outerRadius(radius)).attr('fill',function(d){return(color(d.data.key))}).attr("stroke","black").style("stroke-width","1px").style("opacity",0.7)}
function SizeBy(display,records){this.display=display;if(!records)records=display.filterData();let pointData=this.display.getPointData();let fields=pointData.getRecordFields();$.extend(this,{id:this.display.getProperty("sizeBy"),minValue:0,maxValue:0,field:null,index:-1,isString:false,stringMap:{},});let sizeByMap=this.display.getProperty("sizeByMap");if(sizeByMap){let toks=sizeByMap.split(",");for(let i=0;i<toks.length;i++){let toks2=toks[i].split(":");if(toks2.length>1){this.stringMap[toks2[0]]=toks2[1];}}}
for(let i=0;i<fields.length;i++){let field=fields[i];if(field.getId()==this.id||("#"+(i+1))==this.id){this.field=field;if(field.isString())this.isString=true;}}
this.index=this.field!=null?this.field.getIndex():-1;if(!this.isString&&this.field){let col=this.display.getColumnValues(records,this.field);this.minValue=col.min;this.maxValue=col.max;if(Utils.isDefined(this.display.getProperty("sizeByMin"))){this.minValue=+this.display.getProperty("sizeByMin",0)}
if(Utils.isDefined(this.display.getProperty("sizeByMax"))){this.maxValue=+this.display.getProperty("sizeByMax",0)}}
if(this.display.getProperty("sizeBySteps")){this.steps=[];this.display.getProperty("sizeBySteps").split(",").forEach(tuple=>{let[value,size]=tuple.split(":");this.steps.push({value:+value,size:+size});});}
this.radiusMin=parseFloat(this.display.getProperty("sizeByRadiusMin",-1));this.radiusMax=parseFloat(this.display.getProperty("sizeByRadiusMax",-1));this.offset=0;this.sizeByLog=this.display.getProperty("sizeByLog",false);this.origMinValue=this.minValue;this.origMaxValue=this.maxValue;this.maxValue=Math.max(this.minValue,this.maxValue);if(this.sizeByLog){this.func=Math.log;if(this.minValue<1){this.offset=1-this.minValue;}
this.minValue=this.func(this.minValue+this.offset);this.maxValue=this.func(this.maxValue+this.offset);}}
SizeBy.prototype={getMaxSize:function(){return this.getSizeFromValue(this.origMaxValue);},getSize:function(values,dflt,func){if(this.index<=0){return dflt;}
let value=values[this.index];let size=this.getSizeFromValue(value,func,false);return size;},getSizeFromValue:function(value,func,debug){if(this.steps){if(value<=this.steps[0].value)return this.steps[0].size;for(let i=1;i<this.steps.length;i++){if(value>this.steps[i-1].value&&value<=this.steps[i].value)return this.steps[i].size;}
return this.steps[this.steps.length-1].size;}
if(this.isString){let size;if(Utils.isDefined(this.stringMap[value])){let v=parseInt(this.stringMap[value]);size=v;}else if(Utils.isDefined(this.stringMap["*"])){let v=parseInt(this.stringMap["*"]);size=v;}
if(isNaN(size))size=this.radiusMin;if(func)func(NaN,size);return size;}else{let denom=this.maxValue-this.minValue;let v=value+this.offset;if(this.func)v=this.func(v);let percent=(denom==0?NaN:(v-this.minValue)/denom);let size;if(this.radiusMax>=0&&this.radiusMin>=0){size=Math.round(this.radiusMin+percent*(this.radiusMax-this.radiusMin));}else{size=6+parseInt(15*percent);}
if(debug)console.log("min:"+this.minValue+" max:"+this.maxValue+" value:"+value+" v:"+v+" size:"+size);if(isNaN(size))size=this.radiusMin;if(func)func(percent,size);return size;}},getLegend:function(cnt,bg,vert){let html="";if(this.index<0)return"";if(this.steps){this.steps.forEach(step=>{let dim=step.size*2+"px";let v=step.value;html+=HU.div([CLASS,"display-size-legend-item"],HU.center(HU.div([STYLE,HU.css("height",dim,"width",dim,"background-color",bg||"#bbb","border-radius","50%")]))+v);if(vert)html+="<br>";});}else{for(let i=0;i<=cnt;i++){let v=this.origMinValue+i/cnt*(this.origMaxValue-this.origMinValue);let size=this.getSizeFromValue(v,null,false);if(isNaN(size)||size==0)continue;v=this.display.formatNumber(v);let dim=size*2+"px";html+=HU.div([CLASS,"display-size-legend-item"],HU.center(HU.div([STYLE,HU.css("height",dim,"width",dim,"background-color",bg||"#bbb","border-radius","50%")]))+v);if(vert)html+="<br>";}}
return HU.div([CLASS,"display-size-legend"],html);}}
function Annotations(display,records){this.display=display;if(!records)records=this.display.filterData();let pointData=this.display.getPointData();let fields=pointData.getRecordFields();this.labelField=this.display.getFieldById(null,this.display.getProperty("annotationLabelField"));this.fields=this.display.getFieldsByIds(null,this.display.getProperty("annotationFields"));let prop=this.display.getProperty("annotations");if(prop)this.fields=[];this.map={}
let add=(record,index,annotation)=>{annotation.record=record;if(!this.map[index])
this.map[index]=[];this.map[index].push(annotation);if(!this.map[record.getId()])
this.map[record.getId()]=[];this.map[record.getId()].push(annotation);}
if(prop){this.annotations=[];this.legend="";let labelCnt=0;let toks=prop.split(";");this.hasRange=false;for(let i=0;i<toks.length;i++){let toks2=toks[i].split(",");if(toks2.length<2)continue;let index=toks2[0].trim();let label=toks2[1];if(label.trim()==""){labelCnt++;label=""+labelCnt;}
let desc=toks2.length<2?"":toks2[2];let url=toks2.length<3?null:toks2[3];let isDate=false;let annotation={label:label,description:desc,toString:function(){return this.label+" "+this.description;}};this.annotations.push(annotation);if(index.match(/^[0-9]+$/)){index=parseFloat(index);}else{let index2=null;if(index.indexOf(":")>=0){index2=index.split(":")[1];index=index.split(":")[0];}
if(index=="today"){index=new Date();}else{index=Utils.parseDate(index,false);}
if(index2){this.hasRange=true;if(index2=="today"){index2=Utils.formatDateYYYYMMDD(new Date());}else{index2=Utils.parseDate(index2,false);}
annotation.index2=index2.getTime();}
isDate=true;}
annotation.index=isDate?index.getTime():index;let legendLabel=desc;if(url!=null){legendLabel=HU.href(url,legendLabel,["target","_annotation"]);}
this.legend+=HU.b(label)+":"+legendLabel+" ";}
for(let aidx=0;aidx<this.annotations.length;aidx++){let annotation=this.annotations[aidx];let minIndex=null;let minRecord=null;let minDistance=null;for(let rowIdx=0;rowIdx<records.length;rowIdx++){let ele=records[rowIdx];let record=ele.record?ele.record:ele;let row=this.display.getDataValues(records[rowIdx]);let index=row[0];if(index.v)index=index.v;if(record)index=record.getTime();let distance=Number.MAX_VALUE;if(annotation.index2){if(index>=annotation.index&&index<=annotation.index2){distance=0;}else{distance=Math.min(Math.abs(annotation.index-index),Math.abs(annotation.index2-index));}
if(distance==0){add(record,rowIdx,annotation);}}else{distance=Math.abs(annotation.index-index);}
if(minIndex==null){minIndex=rowIdx;minDistance=distance;minRecord=record;}else{if(distance<minDistance){minIndex=rowIdx;minDistance=distance;minRecord=record;}}}
if(minIndex!=null){add(minRecord,minIndex,annotation);}}}}
Annotations.prototype={isEnabled:function(){return this.annotations!=null;},getAnnotations:function(){return this.annotations;},getAnnotationsFor:function(rowIdx){return this.map[rowIdx];},getAnnotationFromDate:function(date){let distance=Number.MAX_VALUE;let minAnnotation=null;let minDistance=null;let time=date.getTime();for(let aidx=0;aidx<this.annotations.length;aidx++){let annotation=this.annotations[aidx];if(annotation.index2){if(time>=annotation.index&&time<=annotation.index2){return annotation;}}else{distance=Math.abs(annotation.index-time);if(minAnnotation==null){minAnnotation=annotation;minDistance=distance;}else{if(distance<minDistance){minAnnotation=annotation;minDistance=distance;}}}}
return minAnnotation;},getLegend:function(){return this.legend;},getShowLegend:function(){return this.display.getProperty("showAnnotationsLegend");},hasFields:function(){return this.fields&&this.fields.length>0;},getFields:function(){return this.fields;}}
let Gfx={gridData:function(gridId,fields,records,args){if(!args)args={};if(isNaN(args.cellSize)||args.cellSize==null)
args.cellSize=args.cellSizeX;if(isNaN(args.cellSizeX)||args.cellSizeX==null)
args.cellSizeX=args.cellSize;if(isNaN(args.cellSizeY)||args.cellSizeY==null)
args.cellSizeY=args.cellSizeX;let opts={shape:"circle",color:"blue",w:800,h:400,scale:1,cellSize:2,cellSizeX:2,cellSizeY:2,operator:"average"}
$.extend(opts,args);let id=HtmlUtils.getUniqueId();opts.scale=+opts.scale;let scale=opts.scale;opts.w*=opts.scale;opts.h*=opts.scale;$(document.body).append('<canvas style="display:none;" id="'+id+'" width="'+opts.w+'" height="'+opts.h+'"></canvas>');let canvas=document.getElementById(id);let ctx=canvas.getContext("2d");let cnt=0;let earthWidth=args.bounds.east-args.bounds.west;let earthHeight=args.bounds.north-args.bounds.south;ctx.font=opts.cellFont||"8pt Arial;"
let gradient=ctx.createLinearGradient(0,0,0,canvas.height);gradient.addColorStop(0,'white');gradient.addColorStop(1,'red');let scaleX=(lat,lon)=>{return Math.floor(opts.w*(lon-args.bounds.west)/earthWidth);};let scaleY;if(opts.display&&opts.display.map){let n1=opts.display.map.transformLLPoint(MapUtils.createLonLat(opts.bounds.east,85));let s1=opts.display.map.transformLLPoint(MapUtils.createLonLat(opts.bounds.east,-85));let n2=opts.display.map.transformLLPoint(MapUtils.createLonLat(opts.bounds.east,opts.bounds.north));let s2=opts.display.map.transformLLPoint(MapUtils.createLonLat(opts.bounds.east,opts.bounds.south));scaleY=(lat,lon)=>{let pt=opts.display.map.transformLLPoint(MapUtils.createLonLat(lon,lat));let dy=n2.lat-pt.lat;let perc=dy/(n2.lat-s2.lat)
return Math.floor(perc*opts.h);};}else{scaleY=(lat,lon)=>{return Math.floor(opts.h*(args.bounds.north-lat)/earthHeight);}}
ctx.lineStyle="#000";if(opts.doHeatmap){let cols=Math.floor(opts.w/opts.cellSizeX);let rows=Math.floor(opts.h/opts.cellSizeY);let points=[];records.forEach((record,idx)=>{let lat=record.getLatitude();let lon=record.getLongitude();let x=scaleX(lat,lon);let y=scaleY(lat,lon);record[gridId+"_coordinates"]={x:x,y:y};let colorValue=0;if(opts.colorBy&&opts.colorBy.index>=0){colorValue=record.getValue(opts.colorBy.index);}
let lengthValue=0;if(opts.lengthBy&&opts.lengthBy.index>=0){lengthValue=record.getValue(opts.lengthBy.index);}
x=Math.floor(x/opts.cellSizeX);y=Math.floor(y/opts.cellSizeY);if(x<0)x=0;if(y<0)y=0;if(x>=cols)x=cols-1;if(y>=rows)y=rows-1;points.push({x:x,y:y,colorValue:colorValue,r:record});});let grid=Gfx.gridPoints(rows,cols,points,args);opts.cellSizeX=+opts.cellSizeX;opts.cellSizeY=+opts.cellSizeY;this.applyFilter(opts,grid);let mm=this.getMinMaxGrid(grid,v=>v.v);if(opts.colorBy){if(!Utils.isDefined(opts.display.getProperty("colorByMin"))){opts.colorBy.setRange(mm.min,mm.max);}
opts.colorBy.index=0;}
let countThreshold=opts.display.getProperty("hmCountThreshold",opts.operator=="count"?1:0);let glyph=new Glyph(opts.display,scale,fields,records,{type:"rect",canvasWidth:canvas.width,canvasHeight:canvas.height,colorByInfo:opts.colorBy,width:opts.cellSizeX,height:opts.cellSizeY,stroke:false,pos:"c",dx:opts.cellSizeX/2,dy:opts.cellSizeY/2,},"");opts.shape="rect";for(let rowIdx=0;rowIdx<rows;rowIdx++){let row=grid[rowIdx];for(let colIdx=0;colIdx<cols;colIdx++){let cell=row[colIdx];let v=cell.v;if(isNaN(v))continue;let x=colIdx*opts.cellSizeX;let y=rowIdx*opts.cellSizeY;if(cell.count>=countThreshold)
glyph.draw(opts,canvas,ctx,x,y,{colorValue:cell.v,col:colIdx,row:rowIdx,cell:cell,grid:grid});}}}else{records.sort((a,b)=>{return b.getLatitude()-a.getLatitude()});let glyphs=[];let cnt=1;while(cnt<11){let attr=opts.display.getProperty("glyph"+(cnt++));if(!attr)
continue;glyphs.push(new Glyph(opts.display,scale,fields,records,{canvasWidth:canvas.width,canvasHeight:canvas.height},attr));}
glyphs.forEach(glyph=>{records.forEach((record,idx)=>{let lat=record.getLatitude();let lon=record.getLongitude();let x=scaleX(lat,lon);let y=scaleY(lat,lon);record[gridId+"_coordinates"]={x:x,y:y};let colorValue=opts.colorBy?record.getData()[opts.colorBy.index]:null;let lengthValue=opts.lengthBy?record.getData()[opts.lengthBy.index]:null;glyph.draw(opts,canvas,ctx,x,y,{colorValue:colorValue,lengthValue:lengthValue,record:record},idx<10);});});}
let alpha=opts.display.getProperty("colorTableAlpha",-1);if(alpha>0){let image=ctx.getImageData(0,0,opts.w,opts.h);let imageData=image.data,length=imageData.length;for(let i=3;i<length;i+=4){if(imageData[i]){imageData[i]=alpha*255;}}
image.data=imageData;ctx.putImageData(image,0,0);}
let img=canvas.toDataURL("image/png");canvas.parentNode.removeChild(canvas);return img;},gridPoints:function(rows,cols,points,args){let debug=displayDebug.gridPoints;let values=[];for(let rowIdx=0;rowIdx<rows;rowIdx++){let row=[];values.push(row);for(let colIdx=0;colIdx<cols;colIdx++){row.push({v:NaN,count:0,total:0,min:NaN,max:NaN,t:""});}}
points.forEach((p,idx)=>{let cell=values[p.y][p.x];cell.min=cell.count==0?p.colorValue:Math.min(cell.min,p.colorValue);cell.max=cell.count==0?p.colorValue:Math.max(cell.max,p.colorValue);cell.count++;cell.total+=p.colorValue;});let minValue=NaN;let maxValue=NaN;let maxCount=0;let minCount=0;for(let rowIdx=0;rowIdx<rows;rowIdx++){for(let colIdx=0;colIdx<cols;colIdx++){let cell=values[rowIdx][colIdx];if(cell.count==0)continue;let v;if(args.operator=="count")
v=cell.count;else if(args.operator=="min")
v=cell.min;else if(args.operator=="max")
v=cell.max;else if(args.operator=="total")
v=cell.total;else
v=cell.total/cell.count;cell.v=v;if(!isNaN(v)){minValue=isNaN(minValue)?v:Math.min(minValue,v);maxValue=isNaN(maxValue)?v:Math.max(maxValue,v);}
maxCount=Math.max(maxCount,cell.count);minCount=minCount==0?cell.count:Math.min(minCount,cell.count);}}
if(debug)
console.log("operator:"+args.operator+" values:"+minValue+" - "+maxValue+" counts:"+minCount+" - "+maxCount);values.minValue=minValue;values.maxValue=maxValue;values.minCount=minCount;values.maxCount=maxCount;return values;},getGridValue:function(src,row,col,mult,total,goodones){if(row>=0&&row<src.length&&col>=0&&col<src[row].length){if(isNaN(src[row][col]))return 0;total[0]+=mult;goodones[0]++;return src[row][col]*mult;}
return 0;},applyKernel:function(src,kernel){let result=this.cloneGrid(src,null,0);for(let rowIdx=0;rowIdx<src.length;rowIdx++){let row=result[rowIdx];for(let colIdx=0;colIdx<row.length;colIdx++){if(isNaN(row[colIdx]))row[colIdx]=0;let total=[0];let goodones=[0];let sum=0;kernel.every(t=>{sum+=this.getGridValue(src,rowIdx+t[0],colIdx+t[1],t[2],total,goodones);return true;});if(goodones[0]>0)
row[colIdx]=sum/total[0];else
row[colIdx]=NaN;}}
return result;},blurGrid:function(type,src){let kernels={average5:[[0,1,0],[1,1,1],[0,1,0],],average9:[[1,1,1],[1,1,1],[1,1,1],],average25:[[1,1,1,1,1],[1,1,1,1,1],[1,1,1,1,1],[1,1,1,1,1],[1,1,1,1,1],],average49:[[1,1,1,1,1,1,1],[1,1,1,1,1,1,1],[1,1,1,1,1,1,1],[1,1,1,1,1,1,1],[1,1,1,1,1,1,1],[1,1,1,1,1,1,1],[1,1,1,1,1,1,1],],gauss9:[[0.077847,0.123317,0.077847],[0.123317,0.195346,0.123317],[0.077847,0.123317,0.077847]],gauss25:[[0.003765,0.015019,0.023792,0.015019,0.003765],[0.015019,0.059912,0.094907,0.059912,0.015019],[0.023792,0.094907,0.150342,0.094907,0.023792],[0.015019,0.059912,0.094907,0.059912,0.015019],[0.003765,0.015019,0.023792,0.015019,0.003765],],gauss49:[[0.00000067,0.00002292,0.00019117,0.00038771,0.00019117,0.00002292,0.00000067],[0.00002292,0.00078633,0.00655965,0.01330373,0.00655965,0.00078633,0.00002292],[0.00019117,0.00655965,0.05472157,0.11098164,0.05472157,0.00655965,0.00019117],[0.00038771,0.01330373,0.11098164,0.22508352,0.11098164,0.01330373,0.00038771],[0.00019117,0.00655965,0.05472157,0.11098164,0.05472157,0.00655965,0.00019117],[0.00002292,0.00078633,0.00655965,0.01330373,0.00655965,0.00078633,0.00002292],[0.00000067,0.00002292,0.00019117,0.00038771,0.00019117,0.00002292,0.00000067]]}
let a=kernels[type];if(!a){if(type.startsWith("average"))
a=kernels.average5;else if(type.startsWith("gauss"))
a=kernels.gauss9;}
if(!a)return src;return this.applyKernel(src,this.makeKernel(a));},makeKernel:function(kernel){let a=[];let mid=(kernel.length-1)/2;for(let rowIdx=0;rowIdx<kernel.length;rowIdx++){let row=kernel[rowIdx];let rowOffset=rowIdx-mid;for(let colIdx=0;colIdx<row.length;colIdx++){let colOffset=colIdx-mid;a.push([rowOffset,colOffset,kernel[rowIdx][colIdx]]);}}
return a;},printGrid:function(grid){console.log("grid:");for(let rowIdx=0;rowIdx<grid.length;rowIdx++){let row=grid[rowIdx];let h="";for(let colIdx=0;colIdx<row.length;colIdx++){if(Utils.isDefined(row[colIdx].v))
h+=row[colIdx].v+",";else
h+=row[colIdx]+",";}
console.log(h);}},applyFilter(opts,grid){if(!opts.filter||opts.filter==""||opts.filter=="none"){return;}
let copy=this.cloneGrid(grid,v=>v.v);let filtered=copy;let filterPasses=opts.display.getProperty("hmFilterPasses",1);for(let i=0;i<filterPasses;i++){filtered=this.blurGrid(opts.filter,filtered);}
let filterThreshold=opts.display.getProperty("hmFilterThreshold",-999);for(let rowIdx=0;rowIdx<grid.length;rowIdx++){let row=grid[rowIdx];for(let colIdx=0;colIdx<row.length;colIdx++){let cell=row[colIdx];let filterValue=filtered[rowIdx][colIdx];if(filterThreshold!=-999){if(filterValue<filterThreshold)
filterValue=cell.v;}
cell.v=filterValue;}}},getMinMaxGrid:function(src,valueGetter){let min=NaN;let max=NaN;for(let rowIdx=0;rowIdx<src.length;rowIdx++){let row=src[rowIdx];for(let colIdx=0;colIdx<row.length;colIdx++){let v=row[colIdx]
if(valueGetter)v=valueGetter(v,rowIdx,colIdx);if(isNaN(v))continue;min=isNaN(min)?v:Math.min(min,v);max=isNaN(max)?v:Math.max(max,v);}}
return{min:min,max:max};},cloneGrid:function(src,valueGetter,dflt){let dest=[];let hasDflt=Utils.isDefined(dflt);for(let rowIdx=0;rowIdx<src.length;rowIdx++){let row=src[rowIdx];let nrow=[];dest.push(nrow);for(let colIdx=0;colIdx<row.length;colIdx++){let v=row[colIdx]
if(valueGetter)v=valueGetter(v,rowIdx,colIdx);if(hasDflt)
nrow.push(dflt);else
nrow.push(v);}}
return dest;},convertGeoToPixel:function(lat,lon,bounds,mapWidth,mapHeight){let mapLonLeft=bounds.west;let mapLonRight=bounds.east;let mapLonDelta=mapLonRight-mapLonLeft;let mapLatBottom=bounds.south;let mapLatBottomDegree=mapLatBottom*Math.PI/180;let x=(lon-mapLonLeft)*(mapWidth/mapLonDelta);lat=lat*Math.PI/180;let worldMapWidth=((mapWidth/mapLonDelta)*360)/(2*Math.PI);let mapOffsetY=(worldMapWidth/2*Math.log((1+Math.sin(mapLatBottomDegree))/(1-Math.sin(mapLatBottomDegree))));let y=mapHeight-((worldMapWidth/2*Math.log((1+Math.sin(lat))/(1-Math.sin(lat))))-mapOffsetY);return[x,y];},}
function Glyph(display,scale,fields,records,args,attrs){args=args||{};$.extend(this,{display:display,type:"label",dx:0,dy:0,label:"",baseHeight:0,baseWidth:0,width:8,fill:true,stroke:true,toString:function(){return this.type;}});$.extend(this,args);attrs.split(",").forEach(attr=>{let toks=attr.split(":");let name=toks[0];let value="";for(let i=1;i<toks.length;i++){if(i>1)value+=":";value+=toks[i];}
value=value.replace(/_nl_/g,"\n").replace(/_colon_/g,":").replace(/_comma_/g,",");if(value=="true")value=true;else if(value=="false")value=false;this[name]=value;});if(this.labelBy){this.labelField=display.getFieldById(fields,this.labelBy);if(!this.labelField){console.log("Could not find label field: "+this.labelBy);}}
if(this.type=="image"){this.imageField=display.getFieldById(fields,this.imageField);this.myImage=new Image();}
this.scale=scale;if(this.height==null){if(this.type=="3dbar")
this.height=20;else
this.height=8;}
if(this.pos==null){if(this.type=="3dbar")
this.color="blue";else if(this.type=="rect"){this.pos="c";}
else
this.pos="nw";}
this.width=(+this.width);this.height=(+this.height);if(this.dx=="canvasWidth")this.dx=this.canvasWidth;else if(this.dx=="-canvasWidth")this.dx=-this.canvasWidth;else if(this.dx=="canvasWidth2")this.dx=this.canvasWidth/2;else if(this.dx=="-canvasWidth2")this.dx=-this.canvasWidth/2;else if(this.dx=="width")this.dx=this.width;else if(this.dx=="-width")this.dx=-this.width;else if(this.dx=="width2")this.dx=this.width/2;else if(this.dx=="-width2")this.dx=-this.width/2;if(this.dy=="canvasHeight")this.dy=this.canvasHeight;else if(this.dy=="-canvasHeight")this.dy=-this.canvasHeight;else if(this.dy=="canvasHeight2")this.dy=this.canvasHeight/2;else if(this.dy=="-canvasHeight2")this.dy=-this.canvasHeight/2;else if(this.dy=="height")this.dy=this.height;else if(this.dy=="-height")this.dy=-this.height;else if(this.dy=="height2")this.dy=this.height/2;else if(this.dy=="-height2")this.dy=-this.height/2;this.baseWidth=+this.baseWidth;this.width=(+this.width)*scale;this.height=(+this.height)*scale;this.dx=(+this.dx)*scale;this.dy=(+this.dy)*scale;if(this.sizeBy){this.sizeByField=display.getFieldById(fields,this.sizeBy);if(!this.sizeByField){console.log("Could not find sizeBy field:"+this.sizeBy);}else{let props={Min:this.sizeByMin,Max:this.sizeByMax,};this.sizeByInfo=new ColorByInfo(display,fields,records,this.sizeBy,this.sizeBy,null,this.sizeBy,this.sizeByField,props);}}
if(!this.colorByInfo&&this.colorBy){this.colorByField=display.getFieldById(fields,this.colorBy);let ct=this.colorTable?display.getColorTableInner(true,this.colorTable):null;if(!this.colorByField){console.log("Could not find colorBy field:"+this.colorBy);}else{let props={Min:this.colorByMin,Max:this.colorByMax,};this.colorByInfo=new ColorByInfo(display,fields,records,this.colorBy,this.colorBy+".colorByMap",ct,this.colorBy,this.colorByField,props);}}}
Glyph.prototype={draw:function(opts,canvas,ctx,x,y,args,debug){let color=null;if(this.colorByInfo){if(this.colorByField){let v=args.record.getValue(this.colorByField.getIndex());color=this.colorByInfo.getColor(v);}else if(args.colorValue){color=this.colorByInfo.getColor(args.colorValue);}}
let lengthPercent=1.0;if(this.sizeByInfo){let v=args.record.getValue(this.sizeByField.getIndex());lengthPercent=this.sizeByInfo.getValuePercent(v);}
if(args.alphaByCount&&args.cell&&args.grid){if(args.grid.maxCount!=args.grid.minCount){let countPerc=(args.cell.count-args.grid.minCount)/(args.grid.maxCount-args.grid.minCount);color=Utils.addAlphaToColor(c,countPerc);}}
ctx.fillStyle=color||this.fillStyle||this.color||"blue";ctx.strokeStyle=this.strokeStyle||this.color||"#000";ctx.lineWidth=this.lineWidth||1;if(this.type=="label"||this.label){let label=this.labelField?args.record.getValue(this.labelField.getIndex()):this.label;if(label===null){console.log("No label value");return;}
if(typeof label=="number"){if(this.valueScale){label=label*+this.valueScale;}
if(this.decimals)
label=number_format(label,+this.decimals);}
if(this.template){label=this.template.replace("${value}",label);}
ctx.font=this.font||"12pt arial"
ctx.fillStyle=ctx.strokeStyle=color||this.color||"#000";let text=String(label);if(args.record){args.record.fields.forEach(f=>{text=text.replace("\${"+f.getId()+"}",args.record.getValue(f.getIndex()));});}
text=text.split("\n");let h=0;let hgap=3;let maxw=0;text.forEach((t,idx)=>{let dim=ctx.measureText(t);if(idx>0)h+=hgap;maxw=Math.max(maxw,dim.width);h+=dim.actualBoundingBoxAscent+dim.actualBoundingBoxDescent;});let pt=Utils.translatePoint(x,y,maxw,h,this.pos,{dx:this.dx,dy:this.dy});text.forEach(t=>{let dim=ctx.measureText(t);ctx.fillText(t,pt.x,pt.y);pt.y+=dim.actualBoundingBoxAscent+dim.actualBoundingBoxDescent+hgap;});}else if(this.type=="circle"){ctx.beginPath();let w=this.width*lengthPercent+this.baseWidth;let pt=Utils.translatePoint(x,y,w,w,this.pos,{dx:this.dx,dy:this.dy});let cx=pt.x+w/2;let cy=pt.y+w/2;ctx.arc(cx,cy,w/2,0,2*Math.PI);if(this.fill){ctx.fill();}
if(this.stroke)
ctx.stroke();}else if(this.type=="rect"){let pt=Utils.translatePoint(x,y,this.width,this.height,this.pos,{dx:this.dx,dy:this.dy});if(this.fill)
ctx.fillRect(pt.x,pt.y,this.width,this.height);if(this.stroke)
ctx.strokeRect(pt.x,pt.y,this.width,this.height);}else if(this.type=="image"){if(this.imageField){let img=args.record.getValue(this.imageField.getIndex());let pt=Utils.translatePoint(x,y,this.width,this.height,this.pos,{dx:this.dx,dy:this.dy});let i=new Image();i.src=img;setTimeout(()=>{ctx.drawImage(i,pt.x,pt.y,40,40);},1000);}}else if(this.type=="gauge"){let pt=Utils.translatePoint(x,y,this.width,this.height,this.pos,{dx:this.dx,dy:this.dy});ctx.fillStyle=this.fillColor||"#F7F7F7";ctx.beginPath();let cx=pt.x+this.width/2;let cy=pt.y+this.height;ctx.arc(cx,cy,this.width/2,1*Math.PI,0);ctx.fill();ctx.strokeStyle="#000";ctx.stroke();ctx.beginPath();ctx.beginPath();let length=this.width/2*0.75;let degrees=(180*lengthPercent);let ex=cx-this.width*0.4;let ey=cy;let ep=Utils.rotate(cx,cy,ex,ey,degrees);ctx.strokeStyle=this.color||"#000";ctx.lineWidth=this.lineWidth||2;ctx.moveTo(cx,cy);ctx.lineTo(ep.x,ep.y);ctx.stroke();ctx.lineWidth=1;this.showLabel=true;if(this.showLabel&&this.sizeByInfo){ctx.fillStyle="#000";let label=String(this.sizeByInfo.minValue);ctx.font=this.font||"9pt arial"
let dim=ctx.measureText(label);ctx.fillText(label,cx-this.width/2-dim.width-2,cy);ctx.fillText(this.sizeByInfo.maxValue,cx+this.width/2+2,cy);}}else if(this.type=="3dbar"){let pt=Utils.translatePoint(x,y,this.width,this.height,this.pos,{dx:this.dx,dy:this.dy});let height=lengthPercent*(this.height)+parseFloat(this.baseHeight);ctx.fillStyle=color||this.color;ctx.strokeStyle=this.strokeStyle||"#000";this.draw3DRect(canvas,ctx,pt.x,canvas.height-pt.y-this.height,+this.width,height,+this.width);}else if(this.type=="axis"){let pt=Utils.translatePoint(x,y,this.width,this.height,this.pos,{dx:this.dx,dy:this.dy});let height=lengthPercent*(this.height)+parseFloat(this.baseHeight);ctx.strokeStyle=this.strokeStyle||"#000";ctx.beginPath();ctx.moveTo(pt.x,pt.y);ctx.lineTo(pt.x,pt.y+this.height);ctx.lineTo(pt.x+this.width,pt.y+this.height);ctx.stroke();}else if(this.type=="vector"){if(!this.sizeByInfo){console.log("make Vector: no sizeByInfo");return;}
ctx.strokeStyle=color||this.color;let v=args.record.getValue(this.sizeByField.getIndex());lengthPercent=this.sizeByInfo.getValuePercent(v);let length=opts.cellSizeH;if(opts.lengthBy&&opts.lengthBy.index>=0){length=opts.lengthBy.scaleToValue(v);}
let x2=x+length;let y2=y;let arrowLength=opts.display.getProperty("arrowLength",-1);if(opts.colorBy&&opts.colorBy.index>=0){let perc=opts.colorBy.getValuePercent(v);let degrees=(180*perc)+90;degrees=degrees*(Math.PI/360)
x2=length*Math.cos(degrees)-0*Math.sin(degrees);y2=0*Math.cos(degrees)-length*Math.sin(degrees);x2+=x;y2+=y;}
if(arrowLength<=0){ctx.save();ctx.fillStyle="#000";ctx.beginPath();ctx.arc(x,y,1,0,2*Math.PI);ctx.fill();ctx.restore();}
ctx.beginPath();ctx.moveTo(x,y);ctx.lineTo(x2,y2);ctx.lineWidth=opts.display.getProperty("lineWidth",1);ctx.stroke();if(arrowLength>0){ctx.beginPath();this.drawArrow(ctx,x,y,x2,y2,arrowLength);ctx.stroke();}}else if(this.type=="tile"){let crx=x+opts.cellSizeX/2;let cry=y+opts.cellSizeY/2;if((args.row%2)==0){crx=crx+opts.cellSizeX/2;cry=cry-opts.cellSizeY/2;}
let sizex=opts.cellSizeX/2;let sizey=opts.cellSizeY/2;ctx.beginPath();let quarter=Math.PI/2;ctx.moveTo(crx+sizex*Math.cos(quarter),cry+sizey*Math.sin(quarter));for(let side=0;side<7;side++){ctx.lineTo(crx+sizex*Math.cos(quarter+side*2*Math.PI/6),cry+sizey*Math.sin(quarter+side*2*Math.PI/6));}
ctx.strokeStyle="#000";ctx.stroke();}else{console.log("Unknwon cell shape:"+this.type);}},draw3DRect:function(canvas,ctx,x,y,width,height,depth){let dimetricTx=function(x,y,z){return x+z/2;};let dimetricTy=function(x,y,z){return y+z/4;};let isometricTx=function(x,y,z){return(x-z)*Math.cos(Math.PI/6);};let isometricTy=function(x,y,z){return y+(x+z)*Math.sin(Math.PI/6);};let drawPoly=(function(ctx,tx,ty){return function(){let args=Array.prototype.slice.call(arguments,0);ctx.beginPath();let p=args.pop();if(p){ctx.moveTo(tx.apply(undefined,p),ty.apply(undefined,p));}
while((p=args.pop())!==undefined){ctx.lineTo(tx.apply(undefined,p),ty.apply(undefined,p));}
ctx.closePath();ctx.stroke();ctx.fill();};})(ctx,dimetricTx,dimetricTy);ctx.save();ctx.scale(1,-1);ctx.translate(0,-canvas.height);ctx.save();ctx.translate(x,y);let baseColor=ctx.fillStyle;ctx.fillStyle=Utils.pSBC(-0.5,baseColor);drawPoly([width,0,0],[width,0,depth],[width,height,depth],[width,height,0]);ctx.fillStyle=baseColor;drawPoly([0,0,0],[0,height,0],[width,height,0],[width,0,0]);ctx.fillStyle=Utils.pSBC(0.5,baseColor);drawPoly([0,height,0],[0,height,depth],[width,height,depth],[width,height,0]);ctx.fillStyle=baseColor;ctx.restore();ctx.restore();},drawArrow:function(context,fromx,fromy,tox,toy,headlen){let dx=tox-fromx;let dy=toy-fromy;let angle=Math.atan2(dy,dx);context.moveTo(fromx,fromy);context.lineTo(tox,toy);context.lineTo(tox-headlen*Math.cos(angle-Math.PI/6),toy-headlen*Math.sin(angle-Math.PI/6));context.moveTo(tox,toy);context.lineTo(tox-headlen*Math.cos(angle+Math.PI/6),toy-headlen*Math.sin(angle+Math.PI/6));},}
var xcnt=0;const displayDebug={getProperty:false,notifyEvent:false,handleEventPropertyChanged:false,getSelectedFields:false,filterData:false,getStandardData:false,makeDataTable:false,checkSearchBar:false,handleNoData:false,pointDataLoaded:false,displayMapUpdateUI:false,displayMapCreateMap:false,displayMapAddPoints:false,loadPointJson:false,groupBy:false,gridPoints:false,setEntry:true}
const CATEGORY_CHARTS="Basic Charts";const CATEGORY_TABLE="Tables";const CATEGORY_MISC="Misc Charts";const CATEGORY_MAPS="Maps";const CATEGORY_IMAGES="Images";const CATEGORY_RADIAL_ETC="Trees, etc";const CATEGORY_TEXT="Text";const CATEGORY_ENTRIES="Entries";const CATEGORY_CONTROLS="Controls";const DISPLAY_CATEGORIES=[CATEGORY_CHARTS,CATEGORY_TABLE,CATEGORY_MAPS,CATEGORY_IMAGES,CATEGORY_MISC,CATEGORY_TEXT,CATEGORY_RADIAL_ETC,CATEGORY_CONTROLS,CATEGORY_ENTRIES];const ID_BOTTOM="bottom";const ID_COLORTABLE="colortable";const ID_LEGEND="legend";const ID_FIELDS="fields";const ID_HEADER="header";const ID_HEADER1="header1";const ID_HEADER2="header2";const ID_HEADER2_PREFIX="header2prefix";const ID_HEADER2_PREPREFIX="header2preprefix";const ID_HEADER2_PREPREPREFIX="header2prepreprefix";const ID_HEADER2_SUFFIX="header2suffix";const ID_FILTERBAR="filterbar";const ID_TAGBAR="tagbar";const ID_TITLE=ATTR_TITLE;const ID_TITLE_EDIT="title_edit";const ID_LEFT="left";const ID_RIGHT="right";const ID_TITLE_FIELD="titlefield";const ID_TOP="top";const ID_TOP_RIGHT="topright";const ID_TOP_LEFT="topleft";const ID_DETAILS="details";const ID_DETAILS_SNIPPET="snippet";const ID_DISPLAY_CONTENTS="contents";const ID_DISPLAY_TOP="top";const ID_DISPLAY_BOTTOM="bottom";const ID_GROUP_CONTENTS="group_contents";const ID_DETAILS_MAIN="detailsmain";const ID_GROUPBY_FIELDS="groupdbyfields";const ID_TOOLBAR="toolbar";const ID_TOOLBAR_INNER="toolbarinner";const ID_LIST="list";const ID_DISPLAY_MESSAGE="displaymessage";const ID_DIALOG="dialog";const ID_DIALOG_TABS="dialog_tabs";const ID_FOOTER="footer";const ID_FOOTER_LEFT="footer_left";const ID_FOOTER_RIGHT="footer_right";const ID_MENU_BUTTON="menu_button";const ID_MENU_OUTER="menu_outer";const ID_MENU_INNER="menu_inner";const ID_DISPLAY_PROGRESS="display_progress";const ID_REPOSITORY="repository";const ID_REQUEST_PROPERTIES="request_properties";const ID_PAGE_COUNT="pagecount";const ID_PAGE_PREV="pageprev";const ID_PAGE_NEXT="pagenext";const ID_PAGE_LABEL="pagelabel";const ID_PAGE_BUTTONS="pagebuttons";const ID_FILTER_HIGHLIGHT="filterhighlight";const ID_FILTER_DATE="filterdate";const ID_FILTER_COUNT="filtercount";const ID_ENTRIES_MENU="entries_menu";const ID_ENTRIES_PREV="entries_prev";const ID_ENTRIES_NEXT="entries_next";const PROP_DISPLAY_FILTER="displayFilter";const PROP_EXCLUDE_ZERO="excludeZero";const PROP_EXCLUDE_NAN="excludeUndefined";const PROP_DIVID="divid";const PROP_FIELDS="fields";const PROP_LAYOUT_HERE="layoutHere";const PROP_HEIGHT="height";const PROP_WIDTH="width";const RECORD_INDEX="recordindex";const RECORD_ID="recordid";const TEXT_HIGHLIGHT_COLOR="yellow";const HIGHLIGHT_COLOR="#436EEE";const VALUE_NONE="--none--";const DisplayEvent={};function displayDefineEvent(event){DisplayEvent[event]={name:event,share:event+".share",accept:event+".accept",shareGroup:event+".shareGroup",acceptGroup:event+".acceptGroup",handler:"handleEvent"+event[0].toUpperCase()+event.substring(1),toString:function(){return this.name;}}}
displayDefineEvent("setEntry");displayDefineEvent("recordSelection");displayDefineEvent("recordList");displayDefineEvent("recordHighlight");displayDefineEvent("propertyChanged");displayDefineEvent("pointDataLoaded");displayDefineEvent("fieldsSelected");displayDefineEvent("filterFieldsSelected");displayDefineEvent("fieldsChanged");displayDefineEvent("fieldValueSelected");displayDefineEvent("entrySelection");displayDefineEvent("entriesChanged");displayDefineEvent("mapBoundsChanged");displayDefineEvent("animationChanged");displayDefineEvent("entryMouseOver");displayDefineEvent("entryMouseOut");displayDefineEvent("removeDisplay");displayDefineEvent("filterChanged");let globalDisplayCount=0;function addGlobalDisplayProperty(name,value){if(window.globalDisplayProperties==null){window.globalDisplayProperties={};}
if(value==="true")value=true;else if(value==="false")value=false;window.globalDisplayProperties[name]=value;}
function addGlobalDisplayType(type,front){if(window.globalDisplayTypes==null){window.globalDisplayTypes=[];window.globalDisplayTypesMap={};}
if(type.type){window.globalDisplayTypesMap[type.type]=type;}
if(front){window.globalDisplayTypes.unshift(type);}else{window.globalDisplayTypes.push(type);}}
function makeDisplayTooltip(header,imgs,text){let h="";if(header!=null)h+=HU.b(header);if(imgs){if(!Array.isArray(imgs)){imgs=[imgs];}
let imgHtml=imgs.reduce((acc,img)=>{if(!img.startsWith("/")){img=ramaddaBaseUrl+"/help/display/"+img;}
return acc+"<td><img src="+img+" width=250px></td>";},"<table><tr valign=top>");imgHtml+="</tr></table>";if(h!="")h+="<br>";h+=imgHtml;}
if(text)h+="<br>"+text;h=h.replace(/"/g,"&quot;");return h;}
function getGlobalDisplayProperty(name){if(window.globalDisplayProperties==null){return null;}
return window.globalDisplayProperties[name];}
function addRamaddaDisplay(display){Utils.addDisplay(display);display.displayCount=globalDisplayCount++;return display;}
async function ramaddaDisplaySetSelectedEntry(entryId,displays){await getGlobalRamadda().getEntry(entryId,e=>{displays=displays||Utils.displaysList;if(displays){displays.forEach(d=>{if(d.setEntry)d.setEntry(e);});}});}
function ramaddaDisplayCheckLayout(){Utils.displaysList.forEach(d=>{if(d.checkLayout){let t1=new Date();d.checkLayout();let t2=new Date();}});}
function getRamaddaDisplay(id){let display=Utils.displaysMap[id];if(display)return display;Utils.displaysList.forEach(display=>{if(display.getId){Utils.displaysMap[display.getId()]=display;}
if(display.displayId){Utils.displaysMap[display.displayId]=display;}});return Utils.displaysMap[id];}
function removeRamaddaDisplay(id){var display=getRamaddaDisplay(id);if(display){display.removeDisplay();Utils.removeDisplay(display);}}
function displayGetFunctionValue(v){if(v.getTime){return v.getTime();}
if(isNaN(v)){if((typeof v)=="string")return v;return 0;}
return v;}
function ramaddaDisplayStepAnimation(){Utils.displaysList.forEach(d=>{if(d.getProperty&&d.getAnimation){if(d.getProperty("doAnimation")){d.getAnimation().doNext();}}});}
function displayDefineMembers(display,props,members){RamaddaUtil.defineMembers(display,members);if(props&&display.defineProperties)display.defineProperties(props);return display;}
function defineDisplay(display,SUPER,props,members){RamaddaUtil.inherit(display,SUPER);displayDefineMembers(display,props,members);if(members.ctor){display.ctor();}
return display;}
addGlobalDisplayType({type:"group",label:"Group",requiresData:false,forUser:true,category:"Basic Charts",tooltip:makeDisplayTooltip("Create a collection of displays",null,"This allows you to layout displays and share common attributes"),helpUrl:true},true);function DisplayThing(argId,argProperties){if(argProperties==null){argProperties={};}
for(var i in argProperties){if(typeof argProperties[i]=="string"){if(argProperties[i]=="true")argProperties[i]=true;else if(argProperties[i]=="false")argProperties[i]=false;}}
for(var key in argProperties){var toks=key.split(".");if(toks.length<=1){continue;}
let map={};var v=argProperties[key];if(v=="true")v=true;else if(v=="false")v=false;for(var i=0;i<toks.length;i++){var tok=toks[i];if(i==toks.length-1){map[tok]=v;break;}
var nextMap=map[tok];if(nextMap==null){map[tok]={};map=map[tok];}else{map=nextMap;}}}
this.ignoreGlobals=argProperties.ignoreGlobals;this.displayId=null;displayDefineMembers(this,null,{objectId:argId,properties:argProperties,displayParent:null,getId:function(){return this.objectId;},setId:function(id){this.objectId=id;},removeDisplay:function(){if(this.dialogElement)this.dialogElement.remove();},setEntry:function(entry){},handleEntryMenu:async function(entryId){await getGlobalRamadda().getEntry(entryId,e=>{this.setEntry(e);});},getEntriesMenu:function(argProperties){if(argProperties&&argProperties.entryCollection){let entries=argProperties.entryCollection.split(",");this.changeEntries=[];let enums=[];entries.forEach(t=>{var toks=t.split(":");this.changeEntries.push(toks[0]);enums.push([toks[0],toks[1]]);});let noun=this.getProperty("noun","Data");let prev=HU.span([CLASS,"display-changeentries-button",TITLE,"Previous "+noun,ID,this.getDomId(ID_ENTRIES_PREV),TITLE,"Previous"],HU.getIconImage("fa-chevron-left"));let next=HU.span([CLASS,"display-changeentries-button",TITLE,"Next "+noun,ID,this.getDomId(ID_ENTRIES_NEXT),TITLE,"Next"],HU.getIconImage("fa-chevron-right"));let label=argProperties.changeEntriesLabel||"Select "+noun;if(label!="")label=label+"<br>";return HU.center(HU.div([CLASS,"display-filter"],label+prev+" "+HU.select("",[ATTR_ID,this.getDomId(ID_ENTRIES_MENU)],enums)+" "+next));}
return"";},initializeEntriesMenu:function(){this.jq(ID_ENTRIES_PREV).click(e=>{let index=this.jq(ID_ENTRIES_MENU)[0].selectedIndex;if(index<=0){index=this.changeEntries.length;}
let entry=this.changeEntries[index-1];this.jq(ID_ENTRIES_MENU).val(entry);this.handleEntryMenu(entry);});this.jq(ID_ENTRIES_NEXT).click(e=>{let index=this.jq(ID_ENTRIES_MENU)[0].selectedIndex;if(index>=this.changeEntries.length-1){index=0;}
let entry=this.changeEntries[index+1];this.jq(ID_ENTRIES_MENU).val(entry);this.handleEntryMenu(entry);});this.jq(ID_ENTRIES_MENU).change(e=>{let entry=this.jq(ID_ENTRIES_MENU).val();this.handleEntryMenu(entry);});},popup:function(srcId,popupId,srcObj,popup){popup=popup||$("#"+popupId);var src=srcObj||$("#"+srcId);var myalign='left top';var atalign='left bottom';popup.show();popup.position({of:src,my:myalign,at:atalign,collision:"none none"});popup.position({of:src,my:myalign,at:atalign,collision:"none none"});popup.draggable();popup.show();},initDialog:function(){},showDialog:function(text,from,initDialog){if(!this.dialogElement){$(document.body).append(HU.div([ATTR_CLASS,"display-dialog",ID,this.getDomId(ID_DIALOG)]));this.dialogElement=this.jq(ID_DIALOG);}
this.dialogElement.html(this.makeDialog(text));this.popup(from||this.getDomId(ID_MENU_BUTTON),null,null,this.dialogElement);if(initDialog)initDialog();else this.initDialog();},getShowMenu:function(){if(Utils.isDefined(this.showMenu)){return this.showMenu;}
var dflt=false;if(this.displayParent!=null){dflt=this.displayParent.getProperty("showChildMenu",dflt);}
var v=this.getProperty(PROP_SHOW_MENU,dflt);return v;},getShowTitle:function(){if(this.getProperty("showTitle")){return this.getProperty("showTitle");}
var dflt=false;if(this.displayParent!=null){dflt=this.displayParent.getProperty("showChildTitle",dflt);}
return this.getProperty("showTitle",dflt);},getTimeZone:function(){return this.getProperty("timeZone");},formatDate:function(date,args,useToStringIfNeeded){if(!date||!date.getTime)return"";try{return this.formatDateInner(date,args,useToStringIfNeeded);}catch(e){console.log("Error formatting date:"+date+" error:"+e);if(!date.getTime&&date.v)date=date.v;return""+date;}},dateFormat:null,formatDateInner:function(date,args,useToStringIfNeeded){if(!this.dateFormat)
this.dateFormat=this.getProperty("dateFormat",this.getProperty("dateFormat2"));if(!this.dateFormat&&useToStringIfNeeded){return String(date);}
if(!date.getTime&&date.v)date=date.v;if(this.dateFormat){let dttm=Utils.formatDateWithFormat(date,this.dateFormat,true);if(dttm){return String(dttm);}}
if(!date.toLocaleDateString){return String(date);}
var suffix;if(args&&!Utils.isDefined(args.suffix))
suffix=args.suffix;else
suffix=this.getProperty("dateSuffix");var timeZone=this.getTimeZone();if(!suffix&&timeZone)suffix=timeZone;return Utils.formatDate(date,args?args.options:null,{timeZone:timeZone,suffix:suffix});},getUniqueId:function(base){return HU.getUniqueId(base);},handleError:function(code,message){GuiUtils.handleError("An error has occurred:"+message,true,true);},toString:function(){return"DisplayThing:"+this.getId();},domId:function(suffix){return this.getDomId(suffix);},getDomId:function(suffix){return this.getId()+"_"+suffix;},gid:function(suffix){return this.getId()+"_"+suffix;},find:function(selector){return this.getContents().find(selector);},getContents:function(){return this.jq(ID_DISPLAY_CONTENTS);},jq:function(componentId){return $("#"+this.getDomId(componentId));},selectboxit:function(selector,args){let opts={showEffect:"fadeIn",showEffectSpeed:400,hideEffect:"fadeOut",hideEffectSpeed:400,};if(args)$.extend(opts,args);selector.selectBoxIt(opts);},writeHtml:function(idSuffix,html){$("#"+this.getDomId(idSuffix)).html(html);},getTemplateProps:function(fields){return{iconField:this.getFieldById(fields,this.getProperty("iconField")),iconSize:parseFloat(this.getProperty("iconSize",16)),iconMap:this.getIconMap(),colorBy:this.getProperty("colorBy"),colorByMap:this.getColorByMap()}},macroHook:function(token,value){return null;},applyRecordTemplate:function(record,row,fields,template,props,macros,debug){fields=this.getFields(fields);if(!props){props=this.getTemplateProps(fields);}
if(!macros)macros=Utils.tokenizeMacros(template,{hook:(token,value)=>{return this.macroHook(record,token,value)},dateFormat:this.getProperty("dateFormat")});let attrs={};if(props.iconMap&&props.iconField){var value=row[props.iconField.getIndex()];var icon=props.iconMap[value];if(icon){attrs[props.iconField.getId()+"_icon"]=HU.image(icon,["width",props.iconSize]);}}
let makeImage=(f,value)=>{let tokenAttrs=macros.getAttributes(f.getId()+"_image");let imageAttrs=[];let width=tokenAttrs?tokenAttrs["width"]:null;if(width){imageAttrs.push("width");imageAttrs.push(width);}else if(this.getProperty("imageWidth")){imageAttrs.push("width");imageAttrs.push(this.getProperty("imageWidth"));}else{imageAttrs.push("width");imageAttrs.push("300");}
imageAttrs.push("style");imageAttrs.push("vertical-align:top");return HU.image(value,imageAttrs);};let idToField={}
fields.forEach(f=>idToField[f.getId()]=f);macros.tokens.forEach(t=>{if(!t.attrs)return;if(t.tag=="default"){attrs[t.tag]=this.getRecordHtml(record,fields,"${default}");}else if(t.attrs["type"]=="list"&&t.attrs["fields"]){let html="<table class=display-table>";t.attrs.fields.split(",").forEach(fieldName=>{let f=idToField[fieldName];let value=row[f.getIndex()];if(f.getType()=="image"){value=makeImage(f,value);}else if(f.getType()=="url"){if(value!="")
value=HU.href(value,value);}
html+="<tr><td align=right><b>"+f.getLabel()+"</b>:</td><td>  "+value+"</td></tr>";});html+="</table>";attrs[t.tag]=html;}});for(let col=0;col<fields.length;col++){let f=fields[col];let value=row[f.getIndex()];if(debug)console.log("macro:"+col+" field:"+f.getId()+" type:"+f.getType()+" value:"+value);if(props.iconMap){var icon=props.iconMap[f.getId()+"."+value];if(icon){s=s.replace("${"+f.getId()+"_icon}",HU.image(icon,["size",props.iconSize]));}}
if(f.getType()=="image"){if(value&&value.trim().length>1){let tokenAttrs=macros.getAttributes(f.getId()+"_image");let imageAttrs=[];let width=tokenAttrs?tokenAttrs["width"]:null;if(width){imageAttrs.push("width");imageAttrs.push(width);}else if(this.getProperty("imageWidth")){imageAttrs.push("width");imageAttrs.push(this.getProperty("imageWidth"));}else{imageAttrs.push("width");imageAttrs.push("100%");}
imageAttrs.push("style");imageAttrs.push("vertical-align:top");var img=HU.image(value,imageAttrs);attrs[f.getId()+"_image"]=img;attrs[f.getId()+"_url"]=value;}else{attrs[f.getId()+"_url"]=ramaddaBaseUrl+"/icons/blank.gif";attrs[f.getId()+"_image"]="";}}else if(f.getType()=="movie"){if(value&&value.trim().length>0){let movieAttrs=[];if(this.getProperty("movieWidth")){movieAttrs.push("width");movieAttrs.push(this.getProperty("movieWidth"));}
let movie=HU.movie(value,movieAttrs);attrs[f.getId()+"_movie"]=movie;attrs[f.getId()+"_url"]=value;}}else if(f.getType()=="url"){if(value&&value.trim().length>1){let tokenAttrs=macros.getAttributes(f.getId()+"_href");let label=tokenAttrs?tokenAttrs["label"]:null;attrs[f.getId()+"_href"]=HU.href(value,label||value);attrs[f.getId()]=value;}else{attrs[f.getId()+"_href"]="";attrs[f.getId()]="";}
continue;}else if(f.isDate){if(value){attrs[f.getId()]=value;}
continue;}
var color;if(props.colorByMap){if(props.colorBy&&props.colorBy==f.getId()){color=props.colorByMap[value];}else{color=props.colorByMap[f.getId()+"."+value];}}
if(color){attrs[f.getId()+"_color"]=color;}
attrs[f.getId()]=value;if(f.isNumeric()){attrs[f.getId()+"_format"]=Utils.formatNumberComma(value);}}
this.addMacroAttributes(macros,row,attrs);let handler=(tag,value)=>{if(tag.attrs["display"]=="tags"){let type=tag.tag;let filter=this.filterMap[type];let color=Utils.getEnumColor(type);let result="";value=String(value).trim();if(value=="")return"";value.split(",").forEach(tagValue=>{result+=HU.div(["metadata-type",type,"metadata-value",tagValue,TITLE,tagValue,STYLE,HU.css("background",color),CLASS,"display-search-tag"],tagValue);});if(filter)result=filter.getLabel()+": "+result+"<br>";return result;}
return"Unknown tag handler:"+tag.attrs["handle"];};attrs.recordIndex=record.rowIndex+1;return macros.apply(attrs,debug,handler);},addMacroAttributes:function(macros,row,attrs){},getFields:function(fields){if(!fields){var pointData=this.getData();if(pointData==null){return null;}
fields=pointData.getRecordFields();}
return fields;},getFieldLabel:function(field){return this.getProperty(field.getId()+".label",field.getLabel());},getRecordUrlHtml:function(attrs,field,record){let value=record.getValue(field.getIndex());let label=attrs[field.getId()+".label"]||attrs["url.label"]||attrs["label"]||"Link";return HU.href(value,label,["target","_link"]);},getSortedFields:function(fields){let anyGroups=fields.filter(f=>{if(f==null)return true;return f.getGroup()!=null;}).length>0;if(!anyGroups)return fields;let groups=[];let map={};for(let i=0;i<fields.length;i++){let field=fields[i];if(field==null)continue;group=field.getGroup();if(group==null){group=group+"_"+i;}
if(!map[group]){map[group]=[];groups.push(group);}
map[group].push(field);}
fields=[];groups.forEach(group=>{fields=Utils.mergeLists(fields,map[group]);});return fields;},getRecordHtml:function(record,fields,template,debug){fields=this.getFields(fields);if(!fields)return"";let urlField=this.getFieldById(null,this.getProperty("urlField","url"));let linkField=this.getFieldById(null,this.getProperty("linkField"))||urlField;let titleField=this.getFieldById(null,this.getProperty("titleField"));let titleTemplate=this.getProperty("titleTemplate");let descField=this.getFieldById(null,this.getProperty("descriptionField"));let link=linkField?record.getValue(linkField.getIndex()):null;let showDate=this.getProperty("showDate",true);let showImage=this.getProperty("showImage",true);let showMovie=this.getProperty("showMovie",true);let showGeo=false;let showElevation=this.getProperty("showElevation",false);if(Utils.isDefined(this.showGeo)){showGeo=(""+this.showGeo)=="true";}
if(template=="")return"";if(!Utils.stringDefined(template))
template=this.getProperty("recordTemplate");if(Utils.stringDefined(template)){if(!template.startsWith("${default")&&template!="${fields}"){return this.applyRecordTemplate(record,this.getDataValues(record),fields,template,null,null,debug);}}
if(template=="${fields}"){fields=this.getFieldsByIds(null,this.getProperty("tooltipFields",this.getPropertyFields()));}else{let ttf=this.getProperty("tooltipFields");if(ttf){fields=this.getFieldsByIds(null,ttf);}}
let templateProps={};let itemsPerColumn=this.getProperty("itemsPerColumn",50);let attrs={};if(template){attrs=Utils.tokenizeMacros(template,{hook:(token,value)=>{return this.macroHook(record,token,value)},dateFormat:this.getProperty("dateFormat")}).getAttributes("default")||{};}
itemsPerColumn=attrs["itemsPerColumn"]||itemsPerColumn;let values="";if(titleField||titleTemplate){let title="";if(titleTemplate){if(!titleTemplate.startsWith("${default")){title=this.getRecordHtml(record,fields,titleTemplate,debug);}}else{title=record.getValue(titleField.getIndex());if(title.getTime)
title=this.formatDate(title);title=HU.center(HU.h3(title));}
if(link)
title=HU.href(link,title,["target","_target"]);values+=title;link=null;}
if(descField){let desc=record.getValue(descField.getIndex());values+=desc;}
let tooltipNots={};this.getProperty("tooltipNotFields","").split(",").forEach(f=>{tooltipNots[f]=true;});let rows=[];let hadDate=false;let labelColAttrs=[];if(this.getProperty("labelColumnAttrs")){labelColAttrs=this.getProperty("labelColumnAttrs").split(",");}else{labelColAttrs=["align","right"];}
let labelWidth=this.getProperty("labelWidth");fields=this.getSortedFields(fields);let group=null;for(let doDerived=0;doDerived<2;doDerived++){for(let i=0;i<fields.length;i++){let field=fields[i];if(tooltipNots[field.getId()])continue;if(attrs[field.getId()+".hide"]){continue;}
if(field==titleField||field==descField)continue;if(doDerived==0&&!field.derived)continue;else if(doDerived==1&&field.derived)continue;if(!field.getForDisplay()){continue;}
if(field.isRecordDate()){if(!showDate){continue;}
hadDate=true;}
if(!showGeo){if(field.isFieldGeo()){continue;}}
if(group!=field.getGroup()){group=field.getGroup();if(Utils.isDefined(group)){rows.push(HU.tr([],HU.td(["colspan","2"],HU.div([CLASS,"ramadda-header-small"],group))));}}
let initValue=record.getValue(field.getIndex());let value=initValue;let fieldValue=value;if(typeof value=="number"){value=this.formatNumber(value,field.getId());}
if(field.isFieldDate()){value=this.formatDate(value);}
if(field.getType()=="image"&&value!=""){if(!showImage)continue;let imageAttrs=[];if(this.getProperty("imageWidth")){imageAttrs.push("width");imageAttrs.push(this.getProperty("imageWidth"));}else{imageAttrs.push("width");imageAttrs.push("200");}
imageAttrs.push("align");imageAttrs.push("top");value=HU.image(value,imageAttrs);}
if(field.getType()=="movie"&&value!=""){if(!showMovie)continue;var movieAttrs=[];movieAttrs.push("width");movieAttrs.push("200");value=HU.movie(value,movieAttrs);}
if(field.getType()=="url"){value=this.getRecordUrlHtml(attrs,field,record);}
let labelValue=field.getLabel();value=value+field.getUnitSuffix();let tt=labelValue+"="+initValue;if(value.length>100){value=HU.div([STYLE,HU.css("max-height","100px","overflow-y","auto")],value);}
let label=this.formatRecordLabel(labelValue)+":";if(labelWidth){label=HU.div([STYLE,HU.css("max-width",HU.getDimension(labelWidth),"overflow-x","auto")],label);}
label=HU.div([TITLE,tt],label);let row=HU.open(TR,['valign','top']);row+=HU.td(labelColAttrs,HU.b(label));row+=HU.td(["field-id",field.getId(),"field-value",fieldValue,"align","left"],HU.div([STYLE,HU.css('margin-left','5px')],value));row+=HU.close(TR);rows.push(row);}}
if(!hadDate&&showDate){if(record.hasDate()){let row=HU.open(TR,['valign','top']);let label=this.formatRecordLabel("Date");row+=HU.td([],HU.b(label+":"));row+=HU.td(["align","left"],HU.div([STYLE,HU.css('margin-left','5px')],this.formatDate(record.getDate())));row+=HU.close(TR);rows.push(row);}}
if(showElevation&&record.hasElevation()){rows.push(HU.tr([],HU.td([ALIGN,'right'],HU.b('Elevation:'))+
HU.td([ALIGN,'left'],number_format(record.getElevation(),4,'.',''))));}
let rowCnt=0;values+="<table><tr valign=top>";let lists=Utils.splitList(rows,itemsPerColumn);let tdStyle=lists.length>1?"margin-right:5px;":"";lists.forEach(list=>{values+="<td><div style='"+tdStyle+"'><table>"+Utils.join(list,"")+"</table></div></td>";});values+="</tr><table>";if(this.getProperty("recordHtmlStyle")){values=HU.div([CLASS,"ramadda-shadow-box display-tooltip",STYLE,this.getProperty("recordHtmlStyle")],values);}
return values;},formatRecordLabel:function(label){label=label.replace(/!!/g," -- ");label=label.replace(/ /g,"&nbsp;");return label;},getFormValue:function(what,dflt){var fromForm=$("#"+this.getDomId(what)).val();if(fromForm!=null){if(fromForm.length>0){this.setProperty(what,fromForm);}
if(fromForm=="none"){this.setProperty(what,null);}
return fromForm;}
return this.getProperty(what,dflt);},getName:function(){return this.getFormValue("name",this.getId());},getEventSource:function(){return this.getFormValue("eventSource","");},setDisplayParent:function(parent){this.displayParent=parent;},getDisplayParent:function(){if(this.displayParent==null){this.displayParent=this.getLayoutManager();}
return this.displayParent;},removeProperty:function(key){this.properties[key]=null;},setProperty:function(key,value){this.properties[key]=value;this.transientProperties[key]=value;},getSelfProperty:function(key,dflt){if(this[key]!=null){return this[key];}
return this.getProperty(key,dflt);},initTooltip:function(){},formatNumber:function(number,propPrefix,debug){if(!this.getProperty([propPrefix+".doFormatNumber","doFormatNumber"],true)){return number;}
if(isNaN(number)){return"--";}
let f=this.formatNumberInner(number,propPrefix,debug);let fmt=this.getProperty([propPrefix+".numberTemplate","numberTemplate"]);if(fmt)f=fmt.replace("${number}",f);f=String(f);if(f.endsWith("."))f=f.substring(0,f.length-1);return f;},formatNumberInner:function(number,propPrefix,debug){number=+number;let scale=this.getProperty([propPrefix+".formatNumberScale","formatNumberScale"]);if(Utils.isDefined(scale))
number=number*scale;let decimals=this.getProperty([propPrefix+".formatNumberDecimals","formatNumberDecimals"]);if(Utils.isDefined(decimals)){return number_format(number,decimals);}
if(this.getProperty([propPrefix+".formatNumberComma","formatNumberComma"],false)){return Utils.formatNumberComma(number);}
return Utils.formatNumber(number,false,debug);},propertyDefined:function(key){return Utils.isDefined(this.getProperty(key));},setPropertyOn:function(object,myProperty,objectProperty,dflt){var prop=this.getProperty(myProperty,dflt);if(Utils.isDefined(prop)&&prop!=null){object[objectProperty]=prop;}},getDisplayProp:function(source,prop,dflt){if(Utils.isDefined(this[prop])){return this[prop];}
let prop2="map-"+prop;if(Utils.isDefined(source[prop2])){return source[prop2];}
if(source.getProperty){return source.getProperty(prop,dflt);}
return null;},getPropertyFromUrl:function(key,dflt){let fromUrl=HU.getUrlArgument("display"+this.displayCount+"."+key);if(fromUrl)return fromUrl;return this.getProperty(key,dflt);},getPropertyFields:function(dflt){return this.getPropertyFromUrl(PROP_FIELDS,dflt);},transientProperties:{},xxcnt:0,getProperty:function(key,dflt,skipThis,skipParent){let debug=false;if(typeof this.transientProperties[key]!='undefined'){if(debug)
console.log("transient:"+key);return this.transientProperties[key];}
if(debug)
console.log("getProperty:"+key+" dflt:"+dflt);if(this.debugGetProperty)
console.log("\tgetProperty:"+key);let value=this.getPropertyInner(key,null,skipThis,skipParent);if(this.debugGetProperty)
console.log("\tgot:"+value);if(this.writePropertyDef!=null){if(!this.seenWriteProperty)this.seenWriteProperty={};if(!this.seenWriteProperty[key]){let f=(v)=>{return v?"'"+v+"'":"null";};this.writePropertyDef+="{p:'"+key+"',d:"+f(dflt)+",wikiValue:"+f(value||dflt)+"},\n"
this.seenWriteProperty[key]=true;}}
if(debug)
console.log(key+":"+value+" dflt:"+dflt);if(!Utils.isDefined(value)){if(this.debugGetProperty)
console.log("\treturning dflt:"+dflt);return dflt;}
if(this.debugGetProperty)
console.log("\treturning value:"+value);this.transientProperties[key]=value;return value;},getPropertyInner:function(keys,dflt,skipThis,skipParent){let debug=displayDebug.getProperty;debug=this.debugGetProperty;if(!Array.isArray(keys))keys=[keys];for(let i=0;i<keys.length;i++){let key=keys[i];if(debug)console.log("getProperty:"+key+" dflt:"+dflt);if(this.dynamicProperties){if(Utils.isDefined(this.dynamicProperties[key])){return this.dynamicProperties[key];}}
var value=this.properties[key];if(value!=null){if(debug)console.log("\tgot property from this.properties:"+value);return value;}}
if(!skipParent){for(let i=0;i<keys.length;i++){let key=keys[i];var fromParent=null;if(this.displayParent!=null){fromParent=this.displayParent.getPropertyInner("inherit."+key,skipThis);}
if(!fromParent&&this.getDisplayManager){fromParent=this.getDisplayManager().getPropertyInner("inherit."+key);}
if(fromParent){if(debug)console.log("\tgetProperty-3");return fromParent;}}}
if(!this.ignoreGlobals){if(!skipParent){if(this.displayParent!=null){if(debug)console.log("\tgetProperty calling parent");return this.displayParent.getPropertyInner(keys,skipThis);}
if(this.getDisplayManager){if(debug)console.log("\tgetProperty-5");return this.getDisplayManager().getPropertyInner(keys);}}
for(let i=0;i<keys.length;i++){let key=keys[i];value=getGlobalDisplayProperty(key);if(Utils.isDefined(value)){if(debug)console.log("\tgetProperty-6:"+value);return value;}}}
if(debug)console.log("\tgetProperty-6 dflt:"+dflt);return dflt;},});}
function RamaddaDisplay(argDisplayManager,argId,argType,argProperties){const SUPER=new DisplayThing(argId,argProperties);RamaddaUtil.inherit(this,SUPER);if(window.globalDisplayTypesMap){this.typeDef=window.globalDisplayTypesMap[argType];}
this._wikiTags=[];this.defineProperties=function(props){let tagList=[];props.forEach(prop=>{tagList.push(prop);if(!prop.p){return;}
if(prop.p.indexOf("&")<0){if(!Utils.isDefined(prop.doGetter)||prop.doGetter){let getFunc=(dflt,debug)=>{if(!Utils.isDefined(dflt))dflt=prop.d;return this.getProperty(prop.p,dflt);};let funcName='getProperty'+prop.p.substring(0,1).toUpperCase()+prop.p.substring(1);if(!this[funcName])
this[funcName]=getFunc;funcName='get'+prop.p.substring(0,1).toUpperCase()+prop.p.substring(1);if(!this[funcName])
this[funcName]=getFunc;}}
prop.wikiValue=prop.wikiValue||prop.w;});this._wikiTags=Utils.mergeLists(tagList,this._wikiTags);}
let myProps=[{label:'Display'},{p:'fields',doGetter:false,ex:'comma separated list of field ids or indices - e.g. #1,#2,#4-#7,etc or *'},{p:'notFields',ex:'regexp',tt:'regexp to not include fields'},{p:'showMenu',ex:true},{p:'showTitle',ex:true},{p:'showEntryIcon',ex:true},{p:'layoutHere',ex:true},{p:'width',doGetter:false,ex:'100%'},{p:'height',doGetter:false,ex:'400'},{p:'tooltip',doGetter:false,ex:'${default}'},{p:'tooltipPositionMy',ex:'left top'},{p:'tooltipPositionAt',ex:'left bottom+2'},{p:'recordTemplate',doGetter:false,ex:'${default}',tt:'Template for popups etc. Can be ${default attrs} or \'${field} .. ${fieldn}...\''},{p:'titleTemplate',doGetter:false,ex:'${field1}',tt:'Template for title in ${default} template display'},{p:'itemsPerColumn',ex:10,tt:'How many items to show in each column in a tooltip'},{p:'labelColumnAttrs',ex:'align,right',tt:'Attributes of the label column in the record templates'},{p:'labelWidth',ex:'10',tt:'Width of labels the record templates'},{p:'displayStyle',ex:'css styles',tt:'Specify styles for display'},{p:'title',ex:''},{p:'titleBackground',ex:'color'},{p:'linkField',ex:''},{p:'titleField',ex:''},{p:'descriptionField',ex:''},{p:'textColor',ex:'color'},{p:'backgroundImage',ex:'',tt:'Image url to display in background'},{p:'background',ex:'color'},{p:'showProgress',ex:true},{p:'loadingMessage',ex:'',tt:'Message to show when loading data'},{p:'doEntries',ex:true,tt:'Make the children entries be data'},{p:'addAttributes',ex:true,tt:'Include the extra attributes of the children'},{p:'sortFields',tt:'Comma separated list of fields to sort the data on'},{p:'sortAscending',ex:'true|false'},{p:'showSortDirection',ex:true},{p:'sortByFields',ex:'',tt:'Show sort by fields in a menu'},{p:'sortHighlight',ex:true,tt:'Sort based on highlight from the filters'},{p:'showDisplayFieldsMenu',ex:true},{p:'displayFieldsMenuMultiple',ex:true},{p:'displayFieldsMenuSide',ex:'left'},{p:'displayHeaderSide',ex:'left'},{p:'leftSideWidth',ex:'150px'},{label:'Formatting'},{p:'dateFormat',ex:'yyyy|yyyymmdd|yyyymmddhh|yyyymmddhhmm|yyyymm|yearmonth|monthdayyear|monthday|mon_day|mdy|hhmm'},{p:'dateFormatDaysAgo',ex:true},{p:'doFormatNumber',ex:false},{p:'formatNumberDecimals',ex:0},{p:'formatNumberScale',ex:100},{p:'numberTemplate',ex:'${number}%'},{p:'&lt;field_id&gt;.&lt;format&gt;',ex:'...'},{label:'Data Requests'},{p:'requestFields',tt:'Comma separated list of fields for querying server side data'},{p:'requestPrefix',ex:'search.',tt:'Prefix to prepend to the url argument'},{p:'request.&lt;request field&gt;.multiple',ex:'true',tt:'Support multiple enumerated selections'},{label:'Filter Data'},{p:'fieldsNumeric',ex:true,tt:'Only get numeric fields'},{p:'filterFields',ex:''},{p:'filterFieldsToPropagate'},{p:'hideFilterWidget',ex:true},{p:'filterHighlight',d:false,ex:true,tt:'Highlight the records'},{p:'showFilterTags',d:false},{p:'tagDiv',tt:'Div id to show tags in'},{p:'showFilterHighlight',ex:false,tt:'show/hide the filter highlight widget'},{p:'headerOrientation',ex:'vertical'},{p:'filterSliderImmediate',ex:true,tt:'Apply the change while sliding'},{p:'filterLogic',ex:'and|or',tt:'Specify logic to apply filters'},{p:'&lt;field&gt;.filterValue'},{p:'&lt;field&gt;.filterValueMin'},{p:'&lt;field&gt;.filterValueMax'},{p:'&lt;field&gt;.filterValues'},{p:'&lt;field&gt;.filterMultiple',ex:true},{p:'&lt;field&gt;.filterMultipleSize',ex:5},{p:'filterShowCount',ex:false},{p:'filterShowTotal',ex:true},{p:'&lt;field&gt;.filterLabel'},{p:'&lt;field&gt;.showFilterLabel'},{p:'&lt;field&gt;.filterLabelVertical',ex:true},{p:'filterLabelVertical',ex:true},{p:'&lt;field&gt;.filterByStyle',ex:'background:white;'},{p:'&lt;field&gt;.includeAll',ex:false},{p:'&lt;field&gt;.filterSort',ex:false},{p:'&lt;field&gt;.filterSortCount',ex:false},{p:'&lt;field&gt;.filterStartsWith',ex:true},{p:'&lt;field&gt;.filterDisplay',ex:'menu|tab|button|image'},{p:'&lt;field&gt;.filterOps',ex:'<,5000000,label1;>,5000000',tt:'Add menu with fixed filters'},{p:'excludeUndefined',ex:true,tt:'Exclude any records with an undefined value'},{p:'excludeZero',ex:true,tt:'Exclude any records with a 0 value'},{p:'filterPaginate',ex:'true',tt:'Show the record pagination'},{p:'recordSelectFilterFields',tt:'Set the value of other displays filter fields'},{p:'selectFields',ex:'prop:label:field1,...fieldN;prop:....'},{p:'match value',ex:"dataFilters=\"match(field=field,value=value,label=,enabled=);\"",tt:"Only show records that match"},{p:"not match value",ex:"dataFilters=\"notmatch(field=field,value=value,label=,enabled=);\"",tt:"Only show records that dont match"},{p:'no missing values',ex:'dataFilters=\"nomissing(field=field,label=,enabled=);\"',tt:'Dont show missing values'},{p:'less than',ex:'dataFilters=\"lessthan(field=field,value=value,label=,enabled=);\"'},{p:'greater than',ex:'dataFilters=\"greaterthan(field=field,value=value,label=,enabled=);\"'},{p:'equals',ex:'dataFilters=\"equals(field=field,value=value,label=,enabled=);\"'},{p:'not equals',ex:'dataFilters=\"notequals(field=field,value=value,label=,enabled=);\"'},{p:'filterLatest',ex:'fields',tt:'Only show the latest records grouped by fields'},{p:'filterDate',ex:'year',tt:'Show a simple pull down menu to select a year to display'},{p:'filterDateIncludeAll',ex:true,tt:'Include all years'},{p:'startDate',ex:'yyyy,MM,dd,hh,mm,ss',tt:'Filter data on date'},{p:'endDate',ex:'yyyy,MM,dd,hh,mm,ss',tt:'Filter data on date'},{label:'Events'},{p:DisplayEvent.filterChanged.share,ex:true,tt:'Share filter changed'},{p:DisplayEvent.filterChanged.accept,ex:true,tt:'Accept filter changed'},{p:DisplayEvent.filterChanged.shareGroup,tt:'Only share in this group'},{p:DisplayEvent.filterChanged.acceptGroup,tt:'Only share in this group'},{p:DisplayEvent.recordSelection.share,ex:true,tt:'Share record selection'},{p:DisplayEvent.recordSelection.accept,ex:true,tt:'Accept record selection'},{p:DisplayEvent.recordSelection.shareGroup,tt:'Only share in this group'},{p:DisplayEvent.recordSelection.acceptGroup,tt:'Only share in this group'},{p:DisplayEvent.recordHighlight.share,ex:true,tt:'Share record highlight'},{p:DisplayEvent.recordHighlight.accept,ex:true,tt:'Accept record highlight'},{p:DisplayEvent.recordHighlight.shareGroup,tt:'Only share in this group'},{p:DisplayEvent.recordHighlight.acceptGroup,tt:'Only share in this group'},{p:DisplayEvent.recordList.share,ex:true,tt:'Share record list'},{p:DisplayEvent.recordList.accept,ex:true,tt:'Accept record list'},{p:DisplayEvent.recordList.shareGroup,tt:'Only share in this group'},{p:DisplayEvent.recordList.acceptGroup,tt:'Only share in this group'},{p:DisplayEvent.fieldsChanged.share,ex:true,tt:'Share fields changed'},{p:DisplayEvent.fieldsChanged.accept,ex:true,tt:'Accept fields changed'},{p:DisplayEvent.fieldsChanged.shareGroup,tt:'Only share in this group'},{p:DisplayEvent.fieldsChanged.acceptGroup,tt:'Only share in this group'},{p:DisplayEvent.setEntry.share,ex:true,tt:'When displaying entries as data this shares the selected entry with other displays'},{p:DisplayEvent.setEntry.accept,ex:true,tt:'When displaying entries as data this accepts the new entry'},{p:DisplayEvent.setEntry.shareGroup,tt:'When sharing the entry this groups what displays to share with'},{p:DisplayEvent.setEntry.acceptGroup,tt:'When sharing the entry this must match with the shareGroup'},{p:'acceptEventDataSelection',ex:true,tt:'accept new data coming from other displays'},{label:'Convert Data'},{p:'binDate',ex:'day|month|year',tt:'Bin the dates'},{p:'binType',ex:'count|average|total'},{p:'groupBy',ex:'field',tt:'Group the data'},{p:'aggregateBy',tt:'Add an extra row for the aggregated rows'},{p:'aggregateOperator',ex:'sum|percent',tt:'Operator to apply on the aggregated rows'},{p:'aggregateOperator.fieldName',ex:'sum|percent',tt:'Operator to apply on the aggregated rows for the given field'},{p:'convertData',label:'derived data',ex:'derived(field=new_field_id, function=foo*bar);',tt:'Add derived field'},{p:'convertData',label:'merge rows',ex:'mergeRows(keyFields=f1\\\\,f2, operator=count|sum|average, valueFields=);',tt:'Merge rows together'},{p:'convertData',label:'rotate data',ex:'rotateData(includeFields=true,includeDate=true,flipColumns=true);',tt:'Rotate data'},{p:'convertData',label:'percent increase',ex:'addPercentIncrease(replaceValues=false);',tt:'Add percent increase'},{p:'convertData',label:'doubling rate',ex:'doublingRate(fields=f1\\\\,f2, keyFields=f3);',tt:'Calculate # days to double'},{p:'convertData',label:'add fixed',ex:'addFixed(id=max_pool_elevation\\\\,value=3700,type=double);"',tt:'add fixed value'},{p:'convertData',label:'unfurl',ex:'unfurl(headerField=field to get header from,uniqueField=e.g. date,valueFields=);',tt:'Unfurl'},{p:'convertData',label:'Accumulate data',ex:'accum(fields=);',tt:'Accumulate'},{p:'convertData',label:'Add an average field',ex:'mean(fields=);',tt:'Mean'},{p:'convertData',label:'Prune where fields are all NaN',ex:'prune(fields=);',tt:'Prune'},{p:'convertData',label:'Scale and offset',ex:'accum(scale=1,offset1=0,offset2=0,unit=,fields=);',tt:'(d + offset1) * scale + offset2'},{label:'Color'},{p:'colors',ex:'color1,...,colorN',tt:'Comma separated array of colors'},{p:'colorBy',ex:'',tt:'Field id to color by'},{p:'colorByFields',ex:'',tt:'Show color by fields in a menu'},{p:'colorByLog',ex:'true',tt:'Use a log scale for the color by'},{p:'colorByMap',ex:'value1:color1,...,valueN:colorN',tt:'Specify colors for color by text values'},{p:'colorTableAlpha',ex:0.5,tt:'Set transparency on color table values'},{p:'colorTableInverse',ex:true,tt:'Inverse the color table'},{p:'colorTablePruneLeft',ex:'N',tt:'Prune first N colors'},{p:'colorTablePruneRight',ex:'N',tt:'Prune last N colors'},{p:'colorByMin',ex:'value',tt:'Min scale value'},{p:'colorByMax',ex:'value',tt:'Max scale value'},{p:'showColorTable',ex:'false',tt:'Display the color table'},{p:'showColorTableDots',ex:true},{p:'colorTableDotsDecimals',ex:'0'},{p:'colorTableSide',ex:'bottom|right|left|top'},{p:'showColorTableStride',ex:1,tt:'How many colors should be shown'},{p:'colorByAllRecords',ex:true,tt:'use all records for color range'},{p:'convertColorIntensity',ex:true},{p:'intensitySourceMin',ex:'0'},{p:'intensitySourceMax',ex:100},{p:'intensityTargetMin',ex:1},{p:'intensityTargetMax',ex:0},{p:'convertColorAlpha',ex:true},{p:'alphaSourceMin',ex:0},{p:'alphaSourceMax',ex:100},{p:'alphaTargetMin',ex:0},{p:'alphaTargetMax',ex:1},{label:'Animation'},{p:'doAnimation',ex:true},{p:'animationHighlightRecord',ex:true},{p:'animationHighlightRecordList',ex:true},{p:'acceptEventAnimationChange',ex:false},{p:'acceptDateRangeChange',ex:true},{p:'animationDateFormat',ex:'yyyy'},{p:'animationLabelSize',ex:'12pt'},{p:'animationStyle'},{p:'animationTooltipShow',ex:'true'},{p:'animationTooltipDateFormat',ex:'yyyymmddhhmm'},{p:'animationMode',ex:'sliding|frame|cumulative'},{p:'animationWindow',ex:'1 day|2 weeks|3 months|1 year|2 decades|etc'},{p:'animationStep',ex:'1 day|2 weeks|3 months|1 year|2 decades|etc'},{p:'animationSpeed',ex:500},{p:'animationLoop',ex:true},{p:'animationDwell',ex:1000},{p:'animationStartShowAll',ex:true,tt:'Show full range at start'},{p:'animationShowButtons',ex:false},{p:'animationShowSlider',ex:false},{p:'animationWidgetShort',ex:true}];displayDefineMembers(this,myProps,{displayReady:Utils.getPageLoaded(),type:argType,displayManager:argDisplayManager,filters:[],dataCollection:new DataCollection(),selectedCbx:[],entries:[],wikiAttrs:[TITLE,"showTitle","showDetails","minDate","maxDate"],_properties:[],getWikiEditorTags:function(){return this._wikiTags;},getTypeDef:function(){return this.typeDef;},getTypeLabel:function(){if(!this.typeDef)return null;return this.typeDef.label;},getTypeHelpUrl:function(){if(!this.typeDef)return null;let helpUrl=this.typeDef.helpUrl;if(!helpUrl)return null;if(helpUrl===true){return"https://ramadda.org/repository/alias/help_"+this.typeDef.type;}
return helpUrl;},defineSizeByProperties:function(){this.defineProperties([{inlineLabel:'Size By'},{p:'sizeBy',ex:'field',tt:'Field to size points by'},{p:'sizeByLog',ex:true,tt:'Use log scale for size by'},{p:'sizeByMap',ex:'value1:size,...,valueN:size',tt:'Define sizes if sizeBy is text'},{p:'sizeByRadiusMin',ex:'2',tt:'Scale size by'},{p:'sizeByRadiusMax',ex:'20',tt:'Scale size by'},{p:'sizeByLegendSide',ex:'bottom|top|left|right'},,{p:'sizeByLegendStyle'},{p:'sizeBySteps',ex:'value1:size1,v2:s2,...',tt:'Use steps for sizes'},]);},getDisplayManager:function(){return this.displayManager;},getLayoutManager:function(){return this.getDisplayManager().getLayoutManager();},addToDocumentUrl:function(key,value){HU.addToDocumentUrl("display"+this.displayCount+"."+key,value);},createTagDialog:function(cbxs,anchor,cbxChange,type,label){let cbxInner=HU.div([STYLE,HU.css("margin","5px","width","600px;","max-height","300px","overflow-y","auto")],Utils.wrap(cbxs,"",""));let inputId=HU.getUniqueId("input_");let input=HU.input("","",[STYLE,HU.css("width","300px;"),'placeholder','Search for '+label.toLowerCase(),ID,inputId]);let contents=HU.div([STYLE,HU.css("margin","10px")],HU.center(input)+cbxInner);if(!this.tagDialogs)this.tagDialogs={};if(this.tagDialogs[type])this.tagDialogs[type].remove();let dialog=HU.makeDialog({content:contents,anchor:anchor,title:label,draggable:true,header:true});this.tagDialogs[type]=dialog;dialog.find(":checkbox").change(cbxChange);let tags=dialog.find(".display-search-tag");$("#"+inputId).keyup(function(event){let text=$(this).val().trim().toLowerCase();tags.each(function(){if(text=="")
$(this).show();else{let tag=$(this).attr("tag");if(tag){tag=tag.toLowerCase();if(tag.indexOf(text)>=0)
$(this).show();else
$(this).hide();}}});});return dialog;},getAnimationEnabled:function(){return this.getProperty("doAnimation",false);},getAnimation:function(){if(!this.animationControl){this.animationControl=new DisplayAnimation(this,this.getAnimationEnabled());}
return this.animationControl;},propagateEvent:function(event,data){this.getDisplayManager().notifyEvent(event,this,data);},displayError:function(msg){this.displayHtml(HU.getErrorDialog(msg));},clearHtml:function(){this.displayHtml("");},displayHtml:function(html){this.setContents(html);},getEventHandler:function(event){return this[event.handler];},notifyEvent:function(event,source,data){let func=this.getEventHandler(event);if(func==null){if(displayDebug.notifyEvent)
console.log(this.type+".notifyEvent no event handler function:"+event.name+" "+event.handler);return;}
if(displayDebug.notifyEvent)
console.log(this.type+".notifyEvent calling function:"+func.name);func.apply(this,[source,data]);},getColorTableHorizontal:function(){return this.getProperty("colorTableSide","bottom")=="bottom"||this.getProperty("colorTableSide","bottom")=="top";},displayColorTable:function(ct,domId,min,max,args){if(!args)args={};args.showColorTableDots=this.getProperty("showColorTableDots");args.decimals=this.getProperty("colorTableDotsDecimals",-1);args.showRange=this.getProperty("colorTableShowRange");let labels=this.getProperty("colorTableLabels");args.labels=labels?labels.split(","):null;args.labelStyle=this.getProperty("colorTableLabelStyle","font-size:12pt;");args.horizontal=this.getColorTableHorizontal();args.stride=this.getProperty("showColorTableStride",1);Utils.displayColorTable(ct,this.getDomId(domId),min,max,args);if(!args||!args.colorByInfo)return;this.jq(domId).find(".display-colortable-slice").css("cursor","pointer");let _this=this;if(!this.originalColorRange){this.originalColorRange=[min,max];}
this.jq(domId).find(".display-colortable-slice").click(function(e){let val=$(this).attr("data-value");let popup=HtmlUtils.getTooltip();HtmlUtils.setPopupObject(popup);let html="";html+=HU.div([CLASS,"ramadda-menu-item","what","setmin"],"Set range min to "+Utils.formatNumber(val));html+=HU.div([CLASS,"ramadda-menu-item","what","setmax"],"Set range max to "+Utils.formatNumber(val));html+=HU.div([CLASS,"ramadda-menu-item","what","reset"],"Reset range");if(_this.getProperty("colorByLog")){html+=HU.div([CLASS,"ramadda-menu-item","what","togglelog"],"Use linear scale");}else{html+=HU.div([CLASS,"ramadda-menu-item","what","togglelog"],"Use log scale");}
html+=Utils.getColorTablePopup();popup.html(html);$(popup).find(".ramadda-colortable-select").click(function(){let ct=$(this).attr("colortable");if(ct){console.log("color table:"+ct);_this.setProperty("colorTable",ct);_this.forceUpdateUI();}});popup.show();popup.position({of:$(this),my:'left top',at:'left bottom',collision:"none none"});popup.find(".ramadda-menu-item").click(function(){let what=$(this).attr("what");if(what=="reset"){_this.setProperty("colorByMin",_this.getProperty("colorByMinOrig"));_this.setProperty("colorByMax",_this.getProperty("colorByMaxOrig"));_this.setProperty("overrideColorRange",false);}else if(what=="togglelog"){if(!_this.getProperty("colorByLog"))
_this.setProperty("colorByLog",true);else
_this.setProperty("colorByLog",false);}else if(what=="setmin"){if(!Utils.isDefined(_this.getProperty("colorByMinOrig"))){_this.setProperty("colorByMinOrig",_this.getProperty("colorByMin"));}
_this.setProperty("colorByMin",val);_this.setProperty("overrideColorRange",true);}else{if(!Utils.isDefined(_this.getProperty("colorByMaxOrig"))){_this.setProperty("colorByMaxOrig",_this.getProperty("colorByMax"));}
_this.setProperty("colorByMax",val);_this.setProperty("overrideColorRange",true);}
_this.forceUpdateUI();});});},getUnhighlightColor:function(){return this.getProperty("unhighlightColor","#eee");},getColorList:function(){if(this.colorList&&this.colorList.length>0){return this.colorList;}
if(this.getProperty("colors")&&this.getProperty("colors")!="default"){var v=this.getProperty("colors");if(!Array.isArray(v)){v=v.split(",");}
this.colorList=v;}
if(!this.colorList||this.colorList.length==0){this.colorList=['blue','red','green','orange','fuchsia','aqua','navy','brown','cadetblue','blueviolet','coral','cornflowerblue','darkcyan','darkgoldenrod','darkorange','darkseagreen'];}
return this.colorList;},getColorTableName:function(names){if(names&&!Array.isArray(names)){names=[names];}
let ct=null;if(names){names.every(name=>{ct=this.getProperty(name);if(ct)return false;return true;});}else{var colorBy=this.getProperty("colorBy");if(colorBy){ct=this.getProperty("colorTable."+colorBy);}
if(!ct){ct=this.getProperty("colorBar",this.getProperty("colorTable"));}}
if(ct=="none")return null;return ct;},getColorTable:function(justColors,name,dflt){let colorTable=this.getColorTableName(name);if(!colorTable){colorTable=dflt;}
return this.getColorTableInner(justColors,colorTable);},getColorTableInner:function(justColors,colorTable){let list;if(colorTable){let ct=null;if(colorTable.startsWith("colors:")){list=colorTable.substring("colors:".length).split(",");return this.convertColors(list);}
ct=Utils.ColorTables[colorTable];if(ct&&justColors){return this.convertColors(ct.colors);}
if(!ct&&name){return this.convertColors(colorTable.split(","));}
return ct;}
if(this.getProperty("colors")&&this.getProperty("colors")!="default"){var colors=this.getProperty("colors");if((typeof colors)!="object")colors=colors.split(",");return this.convertColors(colors);}
return null;},addAlpha:function(colors,alpha){if(!colors)return null;alpha=Utils.isDefined(alpha)?alpha:this.getProperty("colorTableAlpha");if(!alpha)return colors;colors=Utils.cloneList(colors);var ac=[];colors.forEach((c)=>{ac.push(Utils.addAlphaToColor(c,alpha));});return ac;},convertColors:function(colors){colors=this.addAlpha(colors);if(this.getColorTableInverse()){let tmp=[];for(let i=colors.length-1;i>=0;i--)
tmp.push(colors[i]);colors=tmp;}
if(this.getProperty("colorTablePruneLeft")){let tmp=[];for(let i=+this.getProperty("colorTablePruneLeft");i<colors.length;i++){tmp.push(colors[i]);}
colors=tmp;}
if(this.getProperty("colorTablePruneRight")){let tmp=[];let d=+this.getProperty("colorTablePruneRight");for(let i=0;i<colors.length-d;i++){tmp.push(colors[i]);}
colors=tmp;}
return colors;},getColorByColors:function(records,dfltColorTable){var colorBy=this.getProperty("colorBy");if(!colorBy){return null;}
var colorByField=this.getFieldById(fields,colorBy);if(!colorByField){return null;}
var obj=this.getColumnValues(records,colorByField);var colors=this.getColorTable();if(!colors)colors=Utils.getColorTable(dfltColorTable||"blue_white_red");if(!colors)return null;var min=parseFloat(this.getProperty("colorByMin",obj.min));var max=parseFloat(this.getProperty("colorByMax",obj.max));if(colors.colors)colors=colors.colors;var range=max-min;var colorValues=[];for(var i=0;i<obj.values.length;i++){var value=obj.values[i];var percent=(value-min)/range;var index=parseInt(percent*colors.length);if(index>=colors.length)index=colors.length-1;else if(index<0)index=0;colorValues.push(colors[index]);}
return{colors:colorValues,min:min,max:max};},getDefaultGridByArgs:function(){let doHeatmap=this.getProperty("doHeatmap",false);let args={display:this,shape:this.getProperty("cellShape","rect"),color:this.getProperty("cellColor","blue"),stroke:!this.getProperty("cellFilled",true),cellSize:this.getProperty("cellSize",doHeatmap?0:4),cellSizeH:this.getProperty("cellSizeH",20),cellSizeHBase:this.getProperty("cellSizeHBase",0),cell3D:this.getProperty("cell3D",false),cellShowText:this.getProperty("cellShowText",false),cellLabels:Utils.split(this.getProperty("cellLabels")),cellFonts:Utils.split(this.getProperty("cellFonts")),cellLabelColors:Utils.split(this.getProperty("cellLabelColor")),cellLabelPositions:Utils.split(this.getProperty("cellLabelPositions")),cellLabelOffsetsX:Utils.split(this.getProperty("cellLabelOffsetsX")),cellLabelOffsetsY:Utils.split(this.getProperty("cellLabelOffsetsY")),doHeatmap:doHeatmap,operator:this.getProperty("hm.operator","count"),filter:this.getProperty("hm.filter")};args.cellSizeX=+this.getProperty("cellSizeX",args.cellSize);args.cellSizeY=+this.getProperty("cellSizeY",args.cellSize);return args;},getIconMap:function(){var iconMap;var iconMapProp=this.getProperty("iconMap");if(iconMapProp){var toks=iconMapProp.split(",");iconMap={};for(var i=0;i<toks.length;i++){var toks2=toks[i].split(":");if(toks2.length>1){iconMap[toks2[0]]=toks2[1];}}}
return iconMap;},getColorByInfo:function(records,prop,colorByMapProp,defaultColorTable,propPrefix,lastColorBy){let pointData=this.getData();if(pointData==null)return null;if(this.getProperty("colorByAllRecords")){records=pointData.getRecords();}
let fields=pointData.getRecordFields();return new ColorByInfo(this,fields,records,prop,colorByMapProp,defaultColorTable,propPrefix,null,null,lastColorBy);},getColorByMap:function(prop){prop=this.getProperty(prop||"colorByMap");this.debugGetProperty=false;return Utils.parseMap(prop);},toString:function(){return this.type+" - "+this.getId();},getType:function(){return this.type;},getClass:function(suffix){if(suffix==null){return this.getBaseClass();}
return this.getBaseClass()+"-"+suffix;},getBaseClass:function(){return"display-"+this.getType();},setDisplayManager:function(cm){this.displayManager=cm;this.setDisplayParent(cm.getLayoutManager());},setContents:function(contents,dontWrap){this.clearDisplayMessage();if(!dontWrap)
contents=HU.div([ATTR_CLASS,"display-contents-inner display-"+this.getType()+"-inner"],contents);this.writeHtml(ID_DISPLAY_CONTENTS,contents);},addEntry:function(entry){this.entries.push(entry);},clearCachedData:function(){},setEntry:function(entry){if(displayDebug.setEntry)
console.log(this.type+".setEntry:"+entry);this.entries=[];this.addEntry(entry);this.entry=entry;this.entryId=entry.getId();this.clearCachedData();if(this.properties.theData){this.dataCollection=new DataCollection();let attrs={entryId:this.entryId,lat:this.getProperty("latitude"),lon:this.getProperty("longitude"),};let oldUrl=this.properties.theData.url;if(!oldUrl){oldUrl=this.getRamadda().getRoot()+"/entry/show?entryid="+entry.getId()+"&output=points.product&product=points.json&max=5000";}else{oldUrl=oldUrl.replace(/entryid=.*?&/,"entryid="+entry.getId()+"&");}
this.properties.theData=this.data=new PointData(entry.getName(),null,null,oldUrl,attrs);this.startProgress();this.data.loadData(this);}else{this.callUpdateUI();}
var title="";if(this.getShowTitle()){this.jq(ID_TITLE).html(entry.getName());}},getTextColor:function(property,dflt){if(property)return this.getProperty(property,this.getProperty("textColor",dflt));return this.getProperty("textColor","#000");},getTitleHtml:function(title){var titleToShow="";if(this.getShowTitle()){var titleStyle=HU.css("color",this.getTextColor("titleColor","#000"));var bg=this.getProperty("titleBackground");if(bg)titleStyle+=HU.css('background',bg,'padding','2px','padding-right','6px','padding-left','6px');titleToShow=this.getShowTitle()?this.getDisplayTitle(title):"";let entryId=this.getProperty("entryId")||this.entryId;if(entryId){titleToShow=HU.href(this.getRamadda().getEntryUrl(entryId),titleToShow,[ATTR_CLASS,"display-title",STYLE,titleStyle]);}
titleToShow=HU.span([ID,this.domId(ID_TITLE)],titleToShow);}
if(this.getProperty("showEntryIcon")){let icon=this.getProperty("entryIcon");if(icon)titleToShow=HU.image(icon)+" "+titleToShow;}
return titleToShow;},handleEventMapClick:function(source,args){if(!this.dataCollection)return;var pointData=this.dataCollection.getList();for(var i=0;i<pointData.length;i++){pointData[i].handleEventMapClick(this,source,args.lon,args.lat);}},acceptEvent:function(event,dflt){return this.getProperty(event.accept,dflt);},shareEvent:function(event,dflt){return this.getProperty(event.share,dflt);},handleEventMapBoundsChanged:function(source,args){if(this.acceptEvent(DisplayEvent.mapBoundsChanged,this.getProperty("acceptBoundsChange"))){this.filterBounds=args.bounds;this.callUpdateUI();}},handleEventFilterFieldsSelected:function(source,fields){if(fields.length>0&&(typeof fields[0]=="string")){var tmp=[];fields.forEach(f=>{f=this.getFieldById(null,f);if(f)tmp.push(f);});fields=tmp;}
let prop="";fields.forEach(f=>{if(prop!="")prop+=",";prop+=f.getId();});this.setProperty("filterFields",prop);this.haveCalledUpdateUI=false;this.checkSearchBar();},handleEventFieldValueSelected:function(source,args){this.setProperty("filterPattern",args.value);this.setProperty("patternFilterField",args.field.getId());this.callUpdateUI();},setDateRange:function(min,max,doDay){this.minDateObj=min;this.maxDateObj=max;this.dateRangeDoDay=doDay;},handleDateRangeChanged:function(source,prop){this.setDateRange(prop.minDate,prop.maxDate);if(this.getAnimation().getEnabled()){this.getAnimation().setDateRange(prop.minDate,prop.maxDate);}
this.haveCalledUpdateUI=false;this.dataFilterChanged();},displayFieldsChanged:function(val,fromElsewhere){this.addToDocumentUrl(PROP_FIELDS,val);this.setProperty(PROP_FIELDS,val);this.callUpdateUI();if(this.displayFieldsMenuEnums&&fromElsewhere&&this.getProperty("showDisplayFieldsMenu")){let selected=[];this.jq("displayfields").val(val);}},handleEventFilterChanged:function(source,prop){if(!this.acceptEvent(DisplayEvent.filterChanged,this.getProperty("acceptEventFilter",true))){return;}
this.haveCalledUpdateUI=false;let properties=prop.properties;if(!properties){properties=[];properties.push(prop);}
this.settingFilterValue=true;properties.forEach(prop=>{let filter=this.filterMap?this.filterMap[prop.fieldId]:null;if(!filter)return;let widgetId=this.getFilterId(prop.fieldId);if(prop.id&&prop.id.endsWith("date1")){widgetId+="_date1";}else if(prop.id&&prop.id.endsWith("date2")){widgetId+="_date2";}
if(prop.fieldId=="_highlight"){this.jq(ID_FILTER_HIGHLIGHT).val(prop.value);this.setProperty("filterHighlight",prop.value=="highlight");}else if(Utils.isDefined(prop.value2)){$("#"+widgetId+"_min").val(prop.value);$("#"+widgetId+"_min").attr("data-value",prop.value);$("#"+widgetId+"_max").val(prop.value2);$("#"+widgetId+"_max").attr("data-value",prop.value2);}else{filter.handleEventPropertyChanged(prop);}});this.settingFilterValue=false;this.dataFilterChanged();},handleEventPropertyChanged:function(source,prop){let debug=displayDebug.handleEventPropertyChanged;if(prop.property=="dateRange"){if(this.getProperty("acceptDateRangeChange")){this.handleDateRangeChanged(source,prop);}
return;}
if(prop.property=="displayFields"){if(!this.acceptEvent(DisplayEvent.fieldsChanged,!this.getProperty("acceptEventDisplayFieldsChange",false))){return;}
this.displayFieldsChanged(prop.value,true);return}
if(prop.property=="macroValue"){if(prop.entryId!=this.entryId)return;if(!this.getProperty("acceptRequestChangeEvent",true)){return;}
let macros=this.getRequestMacros();let macro=null;macros.every(m=>{if(m.isMacro(prop.id)){macro=m;return false;}
return true;});if(!macro){return;}
if(!this.getProperty("request."+macro.name+".acceptChangeEvent",true)){return;}
macro.setValue(prop);if(debug)
console.log(this.getId()+" event-reloading");this.reloadData();return;}
this.setProperty(prop.property,prop.value);this.callUpdateUI();},handleEventRecordList:function(source,args){if(this.getAnimationEnabled()&&this.getProperty("animationHighlightRecordList")){this.getAnimation().setRecordListHighlight(args.recordList);}
if(this.getProperty("acceptEventRecordList",false)){this.recordListOverride=args.recordList;this.haveCalledUpdateUI=false;this.callUpdateUI();}},handleEventRecordHighlight:function(source,args){if(this.getAnimation().getEnabled()&&!args.skipAnimation){this.getAnimation().handleEventRecordHighlight(source,args);}},handleEventAnimationChanged:function(source,args){if(!this.getProperty("acceptEventAnimationChange",true))return;if(this.getAnimation().getEnabled()){this.getAnimation().handleEventAnimationChanged(args);}},handleEventSetEntry:function(source,args){if(this.acceptEvent(DisplayEvent.setEntry,this.getProperty(DisplayEvent.setEntry.acceptGroup,this.getProperty("acceptShareSelectedEntry",false)))){if(displayDebug.setEntry)
console.log(this.type+".handleEventSetEntry calling setEntry:"+args.entry);this.setEntry(args.entry);}else{if(displayDebug.setEntry)
console.log(this.type+".handleEventSetEntry not calling setEntry:"+args.entry);}},propagateEventRecordSelection:function(args){if(displayDebug.notifyEvent)
console.log(this.type+".propagateEventRecordSelection");if(this.shareEvent(DisplayEvent.setEntry,this.getProperty(DisplayEvent.setEntry.shareGroup,this.getProperty("shareSelectedEntry")))){let entryId=args.record.getValueFromField("id");if(displayDebug.setEntry)
console.log(this.type+" sharing entry:"+entryId);if(entryId){let _this=this;setTimeout(async function(){await getGlobalRamadda().getEntry(entryId,entry=>{if(displayDebug.setEntry)
console.log(_this.type+" calling notifyEvent with entry:"+entry);_this.getDisplayManager().notifyEvent(DisplayEvent.setEntry,_this,{entry:entry});});});}}
if(this.shareEvent(DisplayEvent.recordSelection,true)){this.getDisplayManager().notifyEvent(DisplayEvent.recordSelection,this,args);}
if(this.getProperty("recordSelectFilterFields")){let fields=this.getFieldsByIds(null,this.getProperty("recordSelectFilterFields"));if(fields&&fields.length>0){let props={properties:[]};fields.forEach(field=>{props.properties.push({id:field.getId(),fieldId:field.getId(),value:args.record.getValue(field.getIndex())});})
this.propagateEvent(DisplayEvent.filterChanged,props);}}},handleEventRecordSelection:function(source,args){this.selectedRecord=args.record;if(this.selectedRecord){if(this.getProperty("colorThresholdField")){this.haveCalledUpdateUI=false;this.callUpdateUI();}}
if(!source.getEntries){return;}
let entries=source.getEntries();for(let i=0;i<entries.length;i++){let entry=entries[i];let containsEntry=this.getEntries().indexOf(entry)>=0;if(containsEntry){this.highlightEntry(entry);break;}}},areaClear:function(){this.getDisplayManager().notifyEvent("areaClear",this);},handleEventEntryMouseover:function(source,args){},handleEventEntryMouseout:function(source,args){},handleEventEntrySelection:function(source,args){var containsEntry=this.getEntries().indexOf(args.entry)>=0;if(!containsEntry){return;}
if(args.selected){this.jq(ID_TITLE).addClass("display-title-select");}else{this.jq(ID_TITLE).removeClass("display-title-select");}},highlightEntry:function(entry){this.jq(ID_TITLE).addClass("display-title-select");},getEntries:function(){return this.entries;},getDisplayEntry:async function(callback){var entries=this.getEntries();if(entries!=null&&entries.length>0){return Utils.call(callback,entries[0]);}
if(this.entryId){var entry;await this.getRamadda().getEntry(this.entryId,e=>{entry=e
Utils.call(callback,entry);});}else{Utils.call(callback,null);}},hasEntries:function(){return this.entries!=null&&this.entries.length>0;},getWaitImage:function(){return HU.image(ramaddaBaseUrl+"/icons/progress.gif");},useDisplayMessage:function(){return true;},setDisplayMessage:function(msg){let contents=this.jq(ID_DISPLAY_CONTENTS);let minHeight=contents.css("min-height");if(!minHeight||minHeight=="0px"){contents.css("min-height","75px");contents.attr("display-set-minheight","true");}
this.jq(ID_DISPLAY_MESSAGE).html(msg).show();},clearDisplayMessage:function(){let contents=this.jq(ID_DISPLAY_CONTENTS);this.jq(ID_DISPLAY_MESSAGE).hide();if(contents.attr("display-set-minheight")!=null){contents.css("min-height","");}},getLoadingMessage:function(msg){if(this.getAcceptEventDataSelection()){return"";}
if(!msg&&!this.getProperty("theData")){msg="No data specified"}
if(!msg)msg=this.getProperty("loadingMessage","icon_progress Loading data...");if(msg=="")return"";msg=msg.replace("icon_progress",HU.image(icon_progress));if(this.useDisplayMessage()){return SPACE+msg;}
return HU.div([STYLE,HU.css("text-align","center")],this.getMessage(SPACE+msg));},reloadData:function(){this.startProgress();this.haveCalledUpdateUI=false;if(this.getProperty("okToLoadData",true)){let pointData=this.dataCollection.getList()[0];pointData.loadData(this,true);}},getMessage:function(msg){return HU.div([ATTR_CLASS,"display-output-message"],msg);},getNoDataMessage:function(){return this.getProperty("noDataMessage","No data available");},getFieldValue:function(id,dflt){var jq=$("#"+id);if(jq.length>0){return jq.val();}
return dflt;},getFieldValues:function(id,dflt){var jq=$("#"+id);if(jq.length>0){let v=[];jq.each(function(){v.push($(this).val());});return v;}
return dflt;},getFooter:function(){return HU.div([ATTR_ID,this.getDomId(ID_FOOTER),ATTR_CLASS,"display-footer"],HU.leftRight(HU.div([ATTR_ID,this.getDomId(ID_FOOTER_LEFT),ATTR_CLASS,"display-footer-left"],""),HU.div([ATTR_ID,this.getDomId(ID_FOOTER_RIGHT),ATTR_CLASS,"display-footer-right"],"")));},shouldSkipField:function(field){if(this.skipFields&&!this.skipFieldsList){this.skipFieldsList=this.skipFields.split(",");}
if(this.skipFieldsList){return this.skipFieldsList.indexOf(field.getId())>=0;}
return false;},fieldSelected:function(event){this.userHasSelectedAField=true;this.selectedFields=null;this.overrideFields=null;this.removeProperty(PROP_FIELDS);this.fieldSelectionChanged();if(event.shiftKey){let fields=this.getSelectedFields();this.propagateEvent(DisplayEvent.fieldsSelected,fields);}},addFieldsCheckboxes:function(argFields){if(!this.hasData()){return;}
var fixedFields=this.getPropertyFields()
if(fixedFields!=null){if(fixedFields.length==0){fixedFields=null;}}
let fieldsMap=null;if(fixedFields!=null){if(!Array.isArray(fixedFields))fixedFields=fixedFields.split(",");fieldsMap={};fixedFields.forEach(id=>{if(id.startsWith("#")){let toks=id.split("-");if(toks.length==2){let idx1=+toks[0].replace("#","");let idx2=+toks[1].replace("#","");for(let i=idx1;i<=idx2;i++){fieldsMap["#"+i]=true;}}}
fieldsMap[id]=true;});}
var html="";var checkboxClass=this.getId()+"_checkbox";var groupByClass=this.getId()+"_groupby";var dataList=this.dataCollection.getList();if(argFields!=null){this.overrideFields=[];}
var seenLabels={};let badFields={};let flags=null;for(var collectionIdx=0;collectionIdx<dataList.length;collectionIdx++){let pointData=dataList[collectionIdx];let fields=this.getFieldsToSelect(pointData);if(this.canDoGroupBy()){let allFields=pointData.getRecordFields();let cnt=0;for(i=0;i<allFields.length;i++){let field=allFields[i];if(field.getType()!="string")continue;if(cnt==0){html+=HU.div([ATTR_CLASS,"display-dialog-subheader"],"Group By");html+=HU.open(TAG_DIV,[ATTR_CLASS,"display-fields"]);var on=this.groupBy==null||this.groupBy=="";html+=HU.tag(TAG_DIV,[ATTR_TITLE,"none"],HU.radio("none",this.getDomId("groupby"),groupByClass,"none",!on)+" None");}
cnt++;var on=this.groupBy==field.getId();var idBase="groupby_"+collectionIdx+"_"+i;field.radioId=this.getDomId(idBase);html+=HU.tag(TAG_DIV,[ATTR_TITLE,field.getId()],HU.radio(field.radioId,this.getDomId("groupby"),groupByClass,field.getId(),on)+" "+field.getUnitLabel()+" ("+field.getId()+")");}
if(cnt>0){html+=HU.close(TAG_DIV);}}
let disabledFields="";if(fields.length>0){let selected=this.getSelectedFields([]);let selectedIds=[];for(let i=0;i<selected.length;i++){selectedIds.push(selected[i].getId());}
html+=HU.div([ATTR_CLASS,"display-dialog-subheader"],"Displayed Fields");html+=HU.open(TAG_DIV,[ATTR_CLASS,"display-fields"]);for(let tupleIdx=0;tupleIdx<fields.length;tupleIdx++){let field=fields[tupleIdx];let idBase="cbx_"+collectionIdx+"_"+tupleIdx;field.checkboxId=this.getDomId(idBase);let on=false;let hasValues=(flags?flags[field.getIndex()]:true);if(argFields!=null){for(var fIdx=0;fIdx<argFields.length;fIdx++){if(argFields[fIdx].getId()==field.getId()){on=true;this.overrideFields.push(field.getId());break;}}}else if(selectedIds.length>0){on=selectedIds.indexOf(field.getId())>=0;}else if(fieldsMap!=null){on=fixedFields[field.getId()];if(!on){on=fixedFields["#"+(tupleIdx+1)];}
}else if(this.overrideFields!=null){on=this.overrideFields.indexOf(field.getId())>=0;if(!on){on=(this.overrideFields.indexOf("#"+(tupleIdx+1))>=0);}
}else{if(this.selectedCbx.indexOf(field.getId())>=0){on=true;}else if(this.selectedCbx.length==0){on=(i==0);}
}
let label=field.getUnitLabel();if(seenLabels[label]){label=label+" "+seenLabels[label];seenLabels[label]++;}else{seenLabels[label]=1;}
if(!hasValues){disabledFields+=HU.div([],label);}else{if(field.derived){label+=" (derived)";}
var widget;if(this.canDoMultiFields()){widget=HU.checkbox(field.checkboxId,[CLASS,checkboxClass],on);}else{widget=HU.radio(field.checkboxId,"field_radio",checkboxClass,"",on);}
html+=HU.tag(TAG_DIV,[ATTR_TITLE,field.getId()],widget+" "+label);}
}}
if(disabledFields!=""){html+=HU.div([STYLE,HU.css("border-top","1px #888  solid")],"<b>No Data Available</b>"+disabledFields);}
html+=HU.close(TAG_DIV);}
this.writeHtml(ID_FIELDS,html);this.userHasSelectedAField=false;let theDisplay=this;$("."+checkboxClass).click(function(event){theDisplay.fieldSelected(event);});$("."+groupByClass).change(function(event){theDisplay.groupBy=$(this).val();if(theDisplay.displayData){theDisplay.displayData();}});},fieldSelectionChanged:function(){var name="the display";this.setDisplayTitle();if(this.displayData){this.clearCachedData();this.displayData();}},defaultSelectedToAll:function(){return true;},setSelectedFields:function(fields){this.clearCachedData();this.selectedFields=fields;this.addFieldsCheckboxes(fields);},getSelectedFields:function(dfltList){let debug=displayDebug.getSelectedFields;if(debug)
console.log(this.type+".getSelectedFields");if(this.getBinDate()){var binType=this.getBinType("total");var binCount=binType=="count";if(binCount){var fields=[];fields.push(new RecordField({id:binType,label:this.getProperty("binDateLabel",this.getProperty("binCountLabel","Count")),type:"double",chartable:true}));return fields;}}
this.debugSelected=debug;this.lastSelectedFields=this.getSelectedFieldsInner(dfltList);let notFields=this.getProperty("notFields");if(notFields){let tmp=[];this.lastSelectedFields.forEach(f=>{if(f.getId().match(notFields)||f.getLabel().match(notFields))return;tmp.push(f);});this.lastSelectedFields=tmp;}
if(debug)
console.log("\tsetting lastSelectedFields:"+this.lastSelectedFields);let fixedFields=this.getPropertyFields();this.setDisplayTitle();if(this.getBinDate()){var binType=this.getProperty("binType","total");let fields=[];this.lastSelectedFields.forEach(field=>{if(!field.isNumeric()){fields.push(field);}else{const prefix=binType;if(field.getId().startsWith(prefix)){fields.push(field);}else{fields.push(new RecordField({id:prefix+"_"+field.getId(),index:field.getIndex(),label:this.getProperty("binDateLabel",Utils.camelCase(binType)+" of "+field.getLabel()),type:"double",chartable:field.isChartable()}));}}});this.lastSelectedFields=fields;console.log("BIN DATE:"+this.lastSelectedFields);}
return Utils.cloneList(this.lastSelectedFields);},getSelectedFieldsInner:function(dfltList){if(this.debugSelected){console.log("getSelectedFieldsInner dflt:"+(dfltList?dfltList:"null"));console.log("\tlast selected = "+this.lastSelectedFields);}
if(this.selectedFields){if(this.debugSelected)
console.log("\treturning this.selectedFields:"+this.selectedFields);return this.selectedFields;}
var df=[];var dataList=this.dataCollection.getList();var fixedFields=this.getPropertyFields();if(fixedFields&&(typeof fixedFields)=="string"){fixedFields=fixedFields.split(",");}
if(fixedFields){let tmpFields=[];fixedFields.forEach(tok=>{if(!tok.match("-")){tmpFields.push(tok);return;}
let pair=tok.split("-");let i1=parseFloat(pair[0].trim().substring(1));let i2=parseFloat(pair[1].trim().substring(1));for(let i=i1;i<=i2;i++)tmpFields.push("#"+i);});fixedFields=tmpFields;}
let aliases={};var tmp=this.getProperty("fieldAliases");if(tmp){tmp.split(",").forEach(tok=>{[name,alias]=tok.split(":");aliases[alias]=name;});}
for(var collectionIdx=0;collectionIdx<dataList.length;collectionIdx++){var pointData=dataList[collectionIdx];var fields=this.getFieldsToSelect(pointData);if(fixedFields!=null&&fixedFields.length>0){if(this.debugSelected)
console.log("\thave fixed fields:"+fixedFields.length);let selected=[];for(var i=0;i<fixedFields.length;i++){var sfield=fixedFields[i];if(sfield=="*"){selected=fields;break;}
var field=this.getFieldById(fields,sfield);if(field){selected.push(field);}}
if(this.getProperty("fieldsNumeric")){selected=selected.filter(f=>f.isNumeric());}
df=selected;}}
if(fixedFields!=null&&fixedFields.length>0){if(this.debugSelected)
console.log("\tfrom fixed:"+df.length);return df;}
var fieldsToSelect=null;var firstField=null;this.selectedCbx=[];var cbxExists=false;for(var collectionIdx=0;collectionIdx<dataList.length;collectionIdx++){var pointData=dataList[collectionIdx];fieldsToSelect=this.getFieldsToSelect(pointData);for(i=0;i<fieldsToSelect.length;i++){var field=fieldsToSelect[i];if(firstField==null&&field.isNumeric())firstField=field;var idBase="cbx_"+collectionIdx+"_"+i;var cbxId=this.getDomId(idBase);var cbx=$("#"+cbxId);if(cbx.length>0){cbxExists=true;}else{continue;}
if(cbx.is(':checked')){this.selectedCbx.push(field.getId());df.push(field);}}}
if(df.length==0&&!cbxExists){if(this.lastSelectedFields&&this.lastSelectedFields.length>0){if(this.debugSelected)
console.log("\tlastSelectedFields:"+this.lastSelectedFields);return this.lastSelectedFields;}}
if(df.length==0){df=this.getDefaultSelectedFields(fieldsToSelect,dfltList);if(this.debugSelected)
console.log("\tusing default selected:"+df);}
return df;},getDefaultSelectedFields:function(fields,dfltList){let debug=displayDebug.getDefaultSelectedFields;if(debug)
console.log("getDefaultSelectedFields");if(this.defaultSelectedToAll()){let allFields=this.getFields();if(allFields){var tmp=[];for(i=0;i<allFields.length;i++){var field=allFields[i];if(!field.isFieldGeo()){tmp.push(field);}}}
if(debug)
console.log("\treturning allFields:"+tmp);return tmp;}
if(dfltList!=null){if(debug)
console.log("\treturning dfltList:"+dfltList);return dfltList;}
for(i=0;i<fields.length;i++){var field=fields[i];if(field.isNumeric()&&!field.isFieldGeo())return[field];}
return[];},sortRecords:function(records,sortFields){if(!sortFields){let f=this.getProperty("sortFields","",true);if(f=="${fields}")f=this.getProperty("fields","",true);sortFields=this.getFieldsByIds(null,f);if(sortFields.length==0&&this.sortByFields&&this.sortByFields.length>0){sortFields=[this.sortByFields[0]];}}
if(sortFields.length>0){records=Utils.cloneList(records);let sortAscending=this.getProperty("sortAscending",true);let cnt=0;records.sort((a,b)=>{let row1=this.getDataValues(a);let row2=this.getDataValues(b);let result=0;for(let i=0;i<sortFields.length;i++){let sortField=sortFields[i];let v1=row1[sortField.getIndex()];let v2=row2[sortField.getIndex()];if(sortField.isNumeric()||sortField.isFieldDate()){if(isNaN(v1)&&isNaN(v2)){result=0;}else if(isNaN(v1)){result=sortAscending?-1:1;}else if(isNaN(v2)){result=sortAscending?1:-1;}else{if(v1<v2)result=sortAscending?-1:1;else if(v1>v2)result=sortAscending?1:-1;else result=0;}}else{result=String(v1).localeCompare(String(v2));if(!sortAscending)result=-result;}
if(result!=0)break;}
return result;});}
if(this.getProperty("sortHighlight")){records=Utils.cloneList(records);records.sort((a,b)=>{let h1=a.isHighlight(this);let h2=b.isHighlight(this);if(h1&&!h2)
return-1;if(!h1&&h2)
return 1;return 0;});}
if(this.getProperty("reverse",false)){records=Utils.cloneList(records);let tmp=[];for(let i=records.length-1;i>=0;i--)
tmp.push(records[i]);records=tmp;}
return records;},getFieldById:function(fields,id,debug){if(debug)
console.log("getFieldById:"+id);if(fields!=null&&id==null){if(typeof fields!="string"){if(debug)
console.log("\tbadfields:"+fields);return null;}
id=fields;fields=null;}
if(!id){if(debug)
console.log("\tno id");return null;}
id=String(id).trim();if(!fields){let pointData=this.getData();if(pointData==null){if(debug)
console.log("\tno data");return null;}
fields=pointData.getRecordFields();}
let aliases={};let tmp=this.getProperty("fieldAliases");if(tmp){tmp.split(",").forEach(tok=>{[name,alias]=tok.split(":");aliases[alias]=name;});}
let theField=null;id.split("|").every(fieldId=>{let alias=aliases[fieldId];let hasRegexp=fieldId.indexOf("*")>=0;for(let i=0;i<fields.length;i++){let field=fields[i];if(debug)
console.log("\tField:"+field.getId());if(field.getId()==fieldId||fieldId==("#"+(i+1))||field.getId()==alias){theField=field;if(debug)
console.log("\tgot it:"+theField);return false;}
if(hasRegexp){if(field.getId().match(fieldId)){theField=field;if(debug)
console.log("\tgot it from pattern:"+theField);return false;}}}
return true;});if(debug)
console.log("\tgot:"+theField);return theField;},getFieldsByIds:function(fields,ids){if(!fields){let pointData=this.getData();if(pointData!=null)
fields=pointData.getRecordFields();}
let result=[];if(!ids){return result;}
if(ids=="*")return fields;if((typeof ids)=="string")
ids=ids.split(",");if(!fields){var pointData=this.getData();if(pointData==null){return null;}
fields=pointData.getRecordFields();}
for(let i=0;i<ids.length;i++){let id=ids[i];if(id.startsWith("#")){let toks=id.split("-");if(toks.length==2){let idx1=+toks[0].replace("#","");let idx2=+toks[1].replace("#","");console.log(idx1+" "+idx2);for(let j=idx1;j<=idx2;j++){let f=this.getFieldById(fields,"#"+idx1);if(f)result.push(f);}
continue;}}
let f=this.getFieldById(fields,ids[i]);if(f)result.push(f);}
return result;},getFieldByType:function(fields,type){fields=this.getFieldsByType(fields,type);if(fields.length==0)return null;return fields[0];},getFieldsByType:function(fields,type){if(!fields){let pointData=this.getData();if(pointData==null)return null;fields=pointData.getRecordFields();}
let list=[];let numeric=(type=="numeric");let isString=(type=="string");for(a in fields){let field=fields[a];if(field.isRecordDate())continue;if(type==null)return field;if(numeric){if(field.isFieldNumeric()){list.push(field);}}else if(isString){if(field.isFieldString()){list.push(field);}}else if(field.getType()==type){list.push(field);}}
return list;},getDateValues:function(records){let dates=[];records.forEach(r=>{dates.push(r.getDate());});return dates;},getColumnValues:function(records,field){var values=[];var min=Number.MAX_VALUE;var max=Number.MIN_VALUE;for(var rowIdx=0;rowIdx<records.length;rowIdx++){var record=records[rowIdx];var row=record.getData();var value=row[field.getIndex()];values.push(value);if(Utils.isNumber(value)&&!isNaN(value)){min=Math.min(min,value);max=Math.max(max,value);}}
return{values:values,min:min,max:max};},requiresGrouping:function(){return false;},makeTree:function(records){if(records==null){let pointData=this.getData();if(pointData==null)return null;records=pointData.getRecords();}
let treeTemplate=this.getProperty("treeTemplate");let treeTooltip=this.getProperty("treeTooltip");let roots=[];let idToNode={};let nodes=[];let idToRoot={};var labelField=this.getFieldById(null,this.getProperty("labelField"));var nodeFields=this.getFieldsByIds(null,this.getProperty("nodeFields"));let treeRootLabel=this.getProperty("treeRoot");let treeRoot=null;if(treeRootLabel){treeRoot={id:treeRootLabel,label:treeRootLabel,children:[],parent:null};roots.push(treeRoot);}
if(nodeFields.length>0){let cnt=0;let valueToNode={};let parentId="";records.forEach(r=>{var label=labelField==null?id:r.getValue(labelField.getIndex());let parentId=null;let parentNode=null;nodeFields.forEach(nodeField=>{let id=r.getValue(nodeField.getIndex());let nodeId=parentId?parentId+"-"+id:id;let tmpNode=idToNode[nodeId];if(!tmpNode){tmpNode={id:nodeId,label:id,children:[],parent:parentNode};idToNode[nodeId]=tmpNode;if(!parentNode){if(treeRoot){tmpNode.parent=treeRoot;treeRoot.children.push(tmpNode);}else{roots.push(tmpNode);}}
if(parentNode){parentNode.children.push(tmpNode);}}
parentId=nodeId;parentNode=tmpNode;});var id="leaf"+(cnt++);var node={id:id,label:label,children:[],record:r,parent:parentNode};parentNode.children.push(node);idToNode[id]=node;nodes.push(node);});return roots;}
let parentField=this.getFieldById(null,this.getProperty("parentField"));let idField=this.getFieldById(null,this.getProperty("idField"));if(!parentField){throw new Error("No parent field specified");}
if(!idField){throw new Error("No id field specified");}
records.forEach(r=>{var parent=r.getValue(parentField.getIndex());var id=r.getValue(idField.getIndex());var label=labelField==null?id:r.getValue(labelField.getIndex());var node={id:id,label:label,children:[],record:r,parentId:parent,parent:null};if(treeTemplate){node.display=this.getRecordHtml(r,null,treeTemplate);}
if(treeTooltip){node.tooltip=this.getRecordHtml(r,null,treeTooltip);}
idToNode[id]=node;nodes.push(node);if(parent==""){idToRoot[id]=node;if(treeRoot){node.parent=treeRoot;node.parentId=treeRoot.id;treeRoot.children.push(node);}else{roots.push(node);}}});nodes.forEach(node=>{let parentNode=idToNode[node.parentId];if(!parentNode){if(!idToRoot[node.id]){throw new Error("No parent :"+node.parentId+" for node:"+node.label);}
return;}
node.parent=parentNode;parentNode.children.push(node);});return roots;},getSegments:function(){var segments=this.getProperty("timeSegments");if(!segments)return null;var result=[];var segmentList=segments.split(",");segmentList.forEach((tok,segmentIdx)=>{var toks=tok.split(";");var name=toks[0];var start=Utils.parseDate(toks[1],false);var end=Utils.parseDate(toks[2],false);result.push({name:name,start:start,end:end});});return result;},convertPointData:function(pointData){let originalPointData=pointData;let segments=this.getSegments();if(segments){let dataList=pointData.getRecords();let newData=[];let header=[];newData.push(header);var rowIdx=0;segments.forEach((segment,segmentIdx)=>{var name=segment.name;header.push(name);var start=segment.start;var end=segment.end;var cnt=1;for(;rowIdx<dataList.length;rowIdx++){var record=dataList[rowIdx];if(record.getTime()<start.getTime()){continue;}
if(record.getTime()>end.getTime()){break;}
var value=record.getValue(1);let row=null;if(cnt>=newData.length){row=[];for(let sidx=0;sidx<segments.length;sidx++)row.push(NaN);newData.push(row);}else{row=newData[cnt];}
row[segmentIdx]=value;cnt++;}});pointData=convertToPointData(newData);pointData.entryId=originalPointData.entryId;}
try{pointData=new CsvUtil().process(this,pointData,this.getProperty("convertData"));}catch(exc){this.setErrorMessage(exc);return null;}
return pointData;},requiresGeoLocation:function(){return false;},checkDataFilters:function(dataFilters,record){if(!dataFilters){return true;}
for(let i=0;i<dataFilters.length;i++){if(!dataFilters[i].isRecordOk(record))return false;}
return true;},getDataFilters:function(v){return DataUtils.getDataFilters(this,v||this.getProperty("dataFilters"));},getFilterHighlight:function(){return this.getProperty("filterHighlight",false);},getFilterTextMatchers:function(){let highlight=[];if(this.filters){for(var filterIdx=0;filterIdx<this.filters.length;filterIdx++){let filter=this.filters[filterIdx];if(!filter.field)continue;var widget=$("#"+this.getDomId("filterby_"+filter.field.getId()));if(!widget.val||widget.val()==null)continue;var value=widget.val()||"";if(value.trim()=="")continue;highlight.push(new TextMatcher(value));}}
return highlight;},filterDataPhase2:function(records){return records;},filterData:function(records,fields,args){if(this.recordListOverride)return this.recordListOverride;let opts={doGroup:false,skipFirst:false,applyDateRange:true}
if(args)
$.extend(opts,args);let debug=displayDebug.filterData;if(this.getAnimationEnabled()){if(this.getProperty("animationFilter",true)){this.setDateRange(this.getAnimation().begin,this.getAnimation().end);}}
let highlight=this.getFilterHighlight();let startDate=this.getProperty("startDate");let endDate=this.getProperty("endDate");if(startDate){this.startDateObject=Utils.createDate(startDate,+this.getProperty("timeZoneOffset",0));if(debug)
console.log(this.type+" start date:"+startDate+" dttm:"+this.startDateObject.toUTCString());}
if(endDate){this.endDateObject=Utils.createDate(endDate,+this.getProperty("timeZoneOffset",0));if(debug)
console.log(this.type+"end date:"+this.endDateObject.toUTCString());}
let filterDate=this.getProperty("filterDate");if(filterDate){let date=$("#"+this.getFilterId(ID_FILTER_DATE)).val();if(date){if(date=="all"){this.setDateRange(null,null);}else{date=new Date(date);if(filterDate=="year"){this.setDateRange(new Date(date.getFullYear()+"-01-01"),new Date(date.getFullYear()+"-12-31"));}else if(filterDate=="day"){let f=date.getUTCFullYear()+"-"+(date.getUTCMonth()+1)+"-"+date.getUTCDate();let dttm=new Date(f);this.setDateRange(dttm,dttm,true);}else{}}}}
let pointData=this.getData();if(!records){if(pointData==null)return null;records=pointData.getRecords();}
if(!fields){fields=pointData.getRecordFields();}
if(opts.doGroup||this.requiresGrouping()){records=pointData.extractGroup(this.dataGroup,records);}
if(debug)console.log("fitler #records:"+records.length);if(this.getProperty("filterLatest")){let fields=this.getFieldsByIds(null,this.getProperty("filterLatest"));let max={};let keyToRecord={};let tmp=[];let keys=[];records.forEach(record=>{if(!record.getTime())return;let key="";fields.forEach(f=>{key+="_"+record.getValue(f.getIndex());});let maxRecord=keyToRecord[key];if(!maxRecord){keyToRecord[key]=record;keys.push(key);}else{if(record.getDate().getTime()>maxRecord.getDate().getTime())keyToRecord[key]=record;}});keys.forEach(key=>{tmp.push(keyToRecord[key]);});records=tmp;}
records.forEach(r=>{r.clearHighlight(this);});records=records.filter((record,idx)=>{let date=record.getDate();if(!date)return true;return this.dateInRange(date,idx<5&&debug);});if(debug)console.log("filter Fields:"+this.filters.length+" #records:"+records.length);if(this.filters.length){let newData=[];let logic=this.getProperty("filterLogic","and");this.filters.forEach(f=>f.prepareToFilter());if(debug)
console.log("filter:"+this.filters.length);records.forEach((record,rowIdx)=>{let allOk=true;let anyOk=false;this.filters.forEach(filter=>{if(!filter.isEnabled())return;let filterOk=filter.isRecordOk(record,rowIdx<5&&debug);if(!filterOk)allOk=false;else anyOk=true;});let ok=logic=="and"?allOk:anyOk;if(opts.skipFirst&&rowIdx==0){ok=true;}
if(highlight){newData.push(record);record.setHighlight(this,ok);}else{record.clearHighlight(this);if(ok){newData.push(record);}}});debug=false;records=newData;}
if(debug)console.log("filterData-2 #records:"+records.length);var stride=parseInt(this.getProperty("stride",-1));if(stride<0){var maxSize=parseInt(this.getProperty("maxDisplayedPoints",-1));if(maxSize>0&&records.length>0){stride=1;while(records.length/stride>maxSize){stride++;}}}
if(stride>0){var list=[];var cnt=0;for(var i=0;i<records.length;i+=(stride+1)){list.push(records[i]);}
records=list;if(debug)console.log("R-3:"+records.length);}
records=this.filterDataPhase2(records);let filterPaginate=this.getProperty("filterPaginate");if(filterPaginate){let skip=this.pageSkip||0;let count=+this.getProperty("pageCount",1000);if(skip>0||count<records.length){let tmp=[];let newSkip=skip;count=Utils.max(count,1000);while(true){if(newSkip<records.length)break;newSkip-=count;if(newSkip<0){break;}}
if(newSkip<0)newSkip=0;if(newSkip!=skip)
this.updatePaginateLabel(skip,count,records.length);skip=newSkip;console.log("skip:"+skip+" count:"+count+" "+records.length);for(let i=skip;i<records.length;i++){tmp.push(records[i]);if(tmp.length>=count)break;}
records=tmp;}}
if(this.getProperty("binDate")){let what=this.getProperty("binDate");let binType=this.getProperty("binType","total");let binCount=binType=="count";let binned=[];let record=records[0];let map={};let counts={};this.binRecordToRecords={};let keyToRecord={};for(var i=0;i<records.length;i++){let record=records[i];var tuple=this.getDataValues(record);var key;var baseDate=null
if(what=="month"){key=record.getDate().getUTCFullYear()+"-"+(record.getDate().getUTCMonth()+1);}else if(what=="day"){key=record.getDate().getUTCFullYear()+"-"+(record.getDate().getUTCMonth()+1)+"-"+record.getDate().getUTCDate();}else if(what=="week"){var week=+Utils.formatDateWeek(record.getDate());key=record.getDate().getUTCFullYear()+"-"+week;var d=(1+(week-1)*7);baseDate=new Date(record.getDate().getUTCFullYear(),0,d);}else{key=record.getDate().getUTCFullYear()+"";}
if(!Utils.isDefined(map[key])){counts[key]=1;var date=baseDate;if(!baseDate){date=Utils.parseDate(key);}
var data=Utils.cloneList(record.getData());if(binCount){for(k=0;k<data.length;k++)data[k]=1;}
var newRecord=new PointRecord(fields,record.getLatitude(),record.getLongitude(),record.getElevation(),date,data);keyToRecord[key]=newRecord;this.binRecordToRecords[newRecord.getId()]={records:[record],}
map[key]=data;binned.push(newRecord);}else{let newRecord=keyToRecord[key];this.binRecordToRecords[newRecord.getId()].records.push(record);counts[key]++;var tuple1=map[key];if(binCount){for(k=0;k<tuple1.length;k++)tuple1[k]++;continue;}
var tuple2=record.getData();for(var j=0;j<tuple2.length;j++){var v=tuple2[j];if((typeof v)!="number")continue;if(isNaN(v))continue;if(isNaN(tuple1[j]))tuple1[j]=v;else tuple1[j]+=v;}}}
if(binType=="average"){for(key in counts){var tuple=map[key];for(var j=0;j<tuple.length;j++){var v=tuple[j];if((typeof v)!="number")continue;if(isNaN(v))continue;tuple[j]=v/counts[key];}}}
records=binned;}
if(this.requiresGeoLocation()){records=records.filter(r=>{return r.hasLocation();});}
let dataFilters=this.getDataFilters();if(dataFilters.length){records=records.filter((r,idx)=>{if(!this.checkDataFilters(dataFilters,r)){return false;}
return true;});}
records=this.sortRecords(records);if(this.getProperty("uniqueField")){let ufield=this.getFieldById(null,this.getProperty("uniqueField"));let umap={};let ulist=[];for(var i=records.length-1;i>=0;i--){var record=records[i];var v=record.getValue(ufield.getIndex());if(!Utils.isDefined(umap[v])){umap[v]=true;ulist.push(record);}}
records=ulist;}
this.recordToIndex={};this.indexToRecord={};for(var i=0;i<records.length;i++){var record=records[i];this.recordToIndex[record.getId()]=i;this.indexToRecord[i]=record;}
let convertPost=this.getProperty("convertDataPost");if(convertPost){let newPointData=new PointData("pointdata",pointData.getRecordFields(),records,null,{parent:pointData});this.pointData=new CsvUtil().process(this,newPointData,convertPost);records=this.pointData.getRecords();}
if(debug)
console.log("filtered:"+records.length);this.jq(ID_FILTER_COUNT).html("Count: "+records.length);this.filteredRecords=records;return this.handleResult("filterData",records);},handleResult:function(type,data){return data;},getBinnedRecords:function(record){if(this.binRecordToRecords)
return this.binRecordToRecords[record.getId()].records;return record.parentRecords;},canDoGroupBy:function(){return false;},canDoMultiFields:function(){return true;},useChartableFields:function(){return false;},getFieldsToSelect:function(pointData){if(this.useChartableFields())
return pointData.getChartableFields(this);return pointData.getRecordFields();},getGet:function(){return"getRamaddaDisplay('"+this.getId()+"')";},assembleWikiText:function(type){var wiki="";if(window.globalDisplayProperties){for(key in window.globalDisplayProperties){wiki+='{{displayProperty name="'+key+'" value="'+window.globalDisplayProperties[key]+'"}}\n';}}
wiki+=this.getWikiText();for(var i=0;i<this.displays.length;i++){var display=this.displays[i];if(display.getIsLayoutFixed()){continue;}
wiki+=display.getWikiText();}
return wiki;},showWikiText:function(type){var wiki=this.assembleWikiText();HtmlUtils.setPopupObject(HtmlUtils.getTooltip());wiki=wiki.replace(/</g,"&lt;").replace(/>/g,"&gt;");wiki=HU.pre([STYLE,HU.css("max-width","500px","max-height","400px","overflow-x","auto","overflow-y","auto")],wiki);this.showDialog(wiki);},copyWikiText:function(type){Utils.copyText(this.assembleWikiText());alert("Wiki text has been copied to the clipboard");},publish:function(type){if(type==null)type="wikipage";var args=[];var name=prompt("Name","");if(name==null)return;args.push("name");args.push(name);args.push("type");args.push(type);var desc="";var wiki="";if(type=="wikipage"){wiki+="+section label=\"{{name}}\"\n${extra}\n";}else if(type=="blogentry"){wiki="<wiki>\n";}
wiki+=desc;wiki+=this.assembleWikiText();if(type=="wikipage"){wiki+="-section\n\n";}else if(type=="blogentry"){}
var from="";var entries=this.getChildEntries();for(var i=0;i<entries.length;i++){var entry=entries[i];from+=entry.getId()+",";}
if(entries.length>0){args.push("entries");args.push(from);}
if(type=="media_photoalbum"){wiki="";}
args.push("description_encoded");console.log(wiki);args.push(window.btoa(wiki));var url=HU.getUrl(ramaddaBaseUrl+"/entry/publish",args);window.open(url,'_blank');},getChildEntries:function(includeFixed){var seen={};var allEntries=[];for(var i=0;i<this.displays.length;i++){var display=this.displays[i];if(!includeFixed&&display.getIsLayoutFixed()){continue;}
if(display.getEntries){var entries=display.getEntries();if(entries){for(var entryIdx=0;entryIdx<entries.length;entryIdx++){if(seen[entries[entryIdx].getId()]!=null){continue;}
seen[entries[entryIdx].getId()]=true;allEntries.push(entries[entryIdx]);}}}}
return allEntries;},copyDisplayedEntries:function(){var allEntries=[];for(var i=0;i<this.displays.length;i++){var display=this.displays[i];if(display.getIsLayoutFixed()){continue;}
if(display.getEntries){var entries=display.getEntries();if(entries){for(var entryIdx=0;entryIdx<entries.length;entryIdx++){allEntries.push(entries[entryIdx]);}}}}
return this.copyEntries(allEntries);},defineWikiAttributes:function(list){for(var i=0;i<list.length;i++){if(this.wikiAttrs.indexOf(list[i])<0){this.wikiAttrs.push(list[i]);}}},getWikiAttributes:function(attrs){for(var i=0;i<this.wikiAttrs.length;i++){var v=this[this.wikiAttrs[i]];if(Utils.isDefined(v)){attrs.push(this.wikiAttrs[i]);attrs.push(v);}}},getWikiText:function(){var attrs=["layoutHere","false","type",this.type,"column",this.getColumn(),"row",this.getRow()];if(this.getProperty("entryId")){attrs.push("entry");attrs.push(this.getProperty("entryId"));}
this.getWikiAttributes(attrs);var entryId=null;if(this.getEntries){var entries=this.getEntries();if(entries&&entries.length>0){entryId=entries[0].getId();}}
if(!entryId){entryId=this.entryId;}
if(entryId){attrs.push("entry");attrs.push(entryId);}
var wiki="{{display "+HU.attrs(attrs)+"}}\n\n"
return wiki;},copyEntries:function(entries){var allEntries=[];var seen={};for(var entryIdx=0;entryIdx<entries.length;entryIdx++){var entry=entries[entryIdx];if(seen[entry.getId()]!=null)continue;seen[entry.getId()]=entry;allEntries.push(entry);}
var from="";for(var i=0;i<allEntries.length;i++){var entry=allEntries[i];from+=entry.getId()+",";}
var url=ramaddaBaseUrl+"/entry/copy?action.force=copy&from="+from;window.open(url,'_blank');},entryHtmlHasBeenDisplayed:async function(entry){if(entry.getIsGroup()){var theDisplay=this;var callback=function(entries){var html=HU.open(TAG_OL,[ATTR_CLASS,"display-entrylist-list",ATTR_ID,theDisplay.getDomId(ID_LIST)]);html+=theDisplay.getEntriesTree(entries);html+=HU.close(TAG_OL);theDisplay.jq(ID_GROUP_CONTENTS+entry.getIdForDom()).html(html);theDisplay.addEntrySelect();};await entry.getChildrenEntries(callback);}},getEntryHtml:function(entry,props){let dfltProps={showHeader:true,headerRight:false,showDetails:this.getShowDetails(),showImage:true,};$.extend(dfltProps,props);props=dfltProps;let menu=this.getEntryMenuButton(entry);let html="";if(props.showHeader){let left=menu+SPACE+entry.getLink(null,true,["target","_entries"]);if(props.headerRight)html+=HU.leftRight(left,props.headerRight);else html+=left;}
let divid=HU.getUniqueId("entry_");html+=HU.div([ID,divid],"");let metadata=entry.getMetadata();if(dfltProps.showImage){if(entry.isImage()){let img=HU.tag(TAG_IMG,["src",entry.getImageUrl(),ATTR_CLASS,"display-entry-image"]);html+=HU.href(entry.getResourceUrl(),img,["download",null])+"<br>";}else{for(var i=0;i<metadata.length;i++){if(metadata[i].type=="content.thumbnail"){let image=metadata[i].value.attr1;let url;if(image.indexOf("http")==0){url=image;}else{url=ramaddaBaseUrl+"/metadata/view/"+image+"?element=1&entryid="+entry.getId()+"&metadata_id="+metadata[i].id+"&thumbnail=false";}
html+=HU.image(url,[ATTR_CLASS,"display-entry-thumbnail"]);}}}}
if(entry.getIsGroup()){html+=HU.div([ATTR_ID,this.getDomId(ID_GROUP_CONTENTS+entry.getIdForDom())],"");}
html+=HU.formTable();if(props.showDetails){if(entry.url){html+=HU.formEntry("URL:",HU.href(entry.url,entry.url));}
if(entry.remoteUrl){html+=HU.formEntry("URL:",HU.href(entry.remoteUrl,entry.remoteUrl));}
if(entry.remoteRepository){html+=HU.formEntry("From:",HU.href(entry.remoteRepository.url,entry.remoteRepository.name));}}
var columns=entry.getAttributes();if(entry.getFilesize()>0){html+=HU.formEntry("File:",entry.getFilename()+" "+
HU.href(entry.getResourceUrl(),HU.image(ramaddaBaseUrl+"/icons/download.png"),["download",null])+" "+
entry.getFormattedFilesize());}
for(var colIdx=0;colIdx<columns.length;colIdx++){var column=columns[colIdx];var columnValue=column.value;if(column.getCanShow&&!column.getCanShow()){continue;}
if(Utils.isFalse(column.canshow)){continue;}
if(column.isUrl&&column.isUrl()){var tmp="";var toks=columnValue.split("\n");for(var i=0;i<toks.length;i++){var url=toks[i].trim();if(url.length==0)continue;tmp+=HU.href(url,url);tmp+="<br>";}
columnValue=tmp;}
html+=HU.formEntry(column.label+":",columnValue);}
html+=HU.close(TAG_TABLE);return html;},getEntriesTree:function(entries,props){if(!props)props={};let columns=this.getProperty("entryColumns",null);if(columns!=null){let columnNames=this.getProperty("columnNames",null);if(columnNames!=null){columnNames=columnNames.split(",");}
columns=columns.split(",");let ids=[];let names=[];for(let i=0;i<columns.length;i++){let toks=columns[i].split(":");let id=null,name=null;if(toks.length>1){if(toks[0]=="property"){name="property";id=columns[i];}else{id=toks[0];name=toks[1];}}else{id=columns[i];name=id;}
ids.push(id);names.push(name);}
columns=ids;if(columnNames==null){columnNames=names;}
return this.getEntriesTable(entries,columns,columnNames);}
let suffix=props.suffix;let domIdSuffix="";if(!suffix){suffix="null";}else{domIdSuffix=suffix;suffix="'"+suffix+"'";}
let handler=getHandler(props.handlerId);let showIndex=props.showIndex;let html="";let rowClass="entryrow_"+this.getId();let even=true;if(this.entriesMap==null)
this.entriesMap={};let doWorkbench=this.getProperty("doWorkbench");for(let i=0;i<entries.length;i++){even=!even;let entry=entries[i];this.entriesMap[entry.getId()]=entry;let toolbar=this.makeEntryToolbar(entry,handler,props.handlerId);let entryMenuButton=doWorkbench?this.getEntryMenuButton(entry):"";let entryName=entry.getDisplayName();if(entryName.length>100){entryName=entryName.substring(0,99)+"...";}
let icon=entry.getIconImage([ATTR_TITLE,"View entry"]);let link=HU.tag(TAG_A,["target","_entries",ATTR_HREF,entry.getEntryUrl()],icon+" "+entryName);entryName="";let entryIdForDom=entry.getIdForDom()+domIdSuffix;let entryId=entry.getId();let arrow=HU.image(icon_tree_closed,[ATTR_BORDER,"0","tree-open","false",ATTR_ID,this.getDomId(ID_TREE_LINK+entryIdForDom)]);let toggleCall=this.getGet()+".toggleEntryDetails(event, '"+entryId+"',"+suffix+",'"+props.handlerId+"');";let toggleCall2=this.getGet()+".entryHeaderClick(event, '"+entryId+"',"+suffix+"); ";let open=HU.onClick(toggleCall,arrow);let extra="";if(showIndex){extra="#"+(i+1)+" ";}
if(handler&&handler.getEntryPrefix){extra+=handler.getEntryPrefix(props.handlerId,entry);}
let left=HU.div([ATTR_CLASS,"display-entrylist-name"],entryMenuButton+" "+open+" "+extra+link+" "+entryName);let snippet="";snippet=HU.div([ATTR_CLASS,"display-entrylist-details-snippet",ATTR_ID,this.getDomId(ID_DETAILS_SNIPPET+entryIdForDom)],entry.getSnippet()||"");if(this.getProperty("showSnippetInList")){left+=snippet;snippet="";}
let inner=HU.div([ATTR_CLASS,"display-entrylist-details-inner",ATTR_ID,this.getDomId(ID_DETAILS_INNER+entryIdForDom)],"");let details=HU.div([ATTR_ID,this.getDomId(ID_DETAILS+entryIdForDom),ATTR_CLASS,"display-entrylist-details"],HU.div([ATTR_CLASS,"display-entrylist-details-ancestors",ATTR_ID,this.getDomId(ID_DETAILS_ANCESTORS+entryIdForDom)],"")+
snippet+
HU.div([ATTR_CLASS,"display-entrylist-details-tags",ATTR_ID,this.getDomId(ID_DETAILS_TAGS+entryIdForDom)],"")+
inner);let line;if(doWorkbench&&this.getProperty("showToolbar",true)){line=HU.leftCenterRight(left,"",toolbar,"80%","1%","19%");}else{line=left;}
let mainLine=HU.div(["onclick",toggleCall2,ATTR_ID,this.getDomId(ID_DETAILS_MAIN+entryIdForDom),ATTR_CLASS,"display-entrylist-entry-main"+" "+"entry-main-display-entrylist-"+(even?"even":"odd"),ATTR_ENTRYID,entryId],line);line=HU.div([CLASS,(even?"ramadda-row-even":"ramadda-row-odd"),ATTR_ID,this.getDomId("entryinner_"+entryIdForDom)],mainLine+details);html+=HU.div([ATTR_ID,this.getDomId("entry_"+entryIdForDom),ATTR_ENTRYID,entryId,ATTR_CLASS,"display-entrylist-entry"+rowClass],line);html+="\n";}
return html;},addEntrySelect:function(){var theDisplay=this;var entryRows=$("#"+this.getDomId(ID_DISPLAY_CONTENTS)+"  ."+this.getClass("entry-main"));entryRows.unbind();entryRows.mouseover(async function(event){var entryId=$(this).attr(ATTR_ENTRYID);var entry;await theDisplay.getEntry(entryId,e=>{entry=e});if(!entry){console.log("no entry:"+entryId);return;}
theDisplay.propagateEvent("entryMouseover",{entry:entry});if(true)return;var domEntryId=Utils.cleanId(entryId);var toolbarId=theDisplay.getEntryToolbarId(domEntryId);var toolbar=$("#"+toolbarId);toolbar.show();var myalign='right top+1';var atalign='right top';var srcId=theDisplay.getDomId(ID_DETAILS_MAIN+domEntryId);toolbar.position({of:$("#"+srcId),my:myalign,at:atalign,collision:"none none"});});entryRows.mouseout(async function(event){let entryId=$(this).attr(ATTR_ENTRYID);let entry;await theDisplay.getEntry(entryId,e=>{entry=e});if(!entry)return;theDisplay.propagateEvent("entryMouseout",{entry:entry});let domEntryId=Utils.cleanId(entryId);let toolbarId=theDisplay.getEntryToolbarId(entryId);let toolbar=$("#"+toolbarId);});if(this.madeList){}
this.madeList=true;if(false){this.jq(ID_LIST).selectable({cancel:'a',selected:async function(event,ui){var entryId=ui.selected.getAttribute(ATTR_ENTRYID);theDisplay.toggleEntryDetails(event,entryId);if(true)return;theDisplay.hideEntryDetails(entryId);var entry;await this.getEntry(entryId,e=>{entry=e});if(entry==null)return;var zoom=null;if(event.shiftKey){zoom={zoomIn:true};}
theDisplay.selectedEntries.push(entry);theDisplay.propagateEvent(DisplayEvent.entrySelection,{entry:entry,selected:true,zoom:zoom});theDisplay.lastSelectedEntry=entry;},unselected:async function(event,ui){if(true)return;var entryId=ui.unselected.getAttribute(ATTR_ENTRYID);var entry;await this.getEntry(entryId,e=>{entry=e});var index=theDisplay.selectedEntries.indexOf(entry);if(index>-1){theDisplay.selectedEntries.splice(index,1);theDisplay.propagateEvent(DisplayEvent.entrySelection,{entry:entry,selected:false});}},});}},getEntriesTable:function(entries,columns,columnNames){if(this.entriesMap==null)
this.entriesMap={};var columnWidths=this.getProperty("columnWidths",null);if(columnWidths!=null){columnWidths=columnWidths.split(",");}
var html=HU.open(TAG_TABLE,[ATTR_WIDTH,"100%","cellpadding","0","cellspacing","0"]);html+=HU.open(TAG_TR,["valign","top"]);for(var i=0;i<columnNames.length;i++){html+=HU.td([ATTR_ALIGN,"center",ATTR_CLASS,"display-entrytable-header"],columnNames[i]);}
html+=HU.close(TAG_TR);for(var i=0;i<entries.length;i++){html+=HU.open(TAG_TR,["valign","top"]);var entry=entries[i];this.entriesMap[entry.getId()]=entry;for(var j=0;j<columns.length;j++){var columnWidth=null;if(columnWidths!=null){columnWidth=columnWidths[j];}
var column=columns[j];var value="";if(column=="name"){value=HU.tag(TAG_A,[ATTR_HREF,entry.getEntryUrl()],entry.getName());}else if(column.match(".*property:.*")){var type=column.substring("property:".length);var metadata=entry.getMetadata();value="";for(var j=0;j<metadata.length;j++){var m=metadata[j];if(m.type==type){if(value!=""){value+="<br>";}
value+=m.value.attr1;}}}else if(column=="description"){value=entry.getDescription();}else if(column=="date"){value=entry.ymd;if(value==null){value=entry.startDate;}}else{value=entry.getAttributeValue(column);}
var attrs=[ATTR_CLASS,"display-entrytable-cell"];if(columnWidth!=null){attrs.push(ATTR_WIDTH);attrs.push(columnWidth);}
html+=HU.td(attrs,value);}
html+=HU.close(TAG_TR);}
html+=HU.close(TAG_TABLE);return html;},makeEntryToolbar:function(entry,handler,handlerId){var get=this.getGet();var toolbarItems=[];var props="{showMenu:true,showTitle:true}";if(entry.getType().getId()=="type_wms_layer"){toolbarItems.push(HU.tag(TAG_A,["onclick",get+".addMapLayer("+HU.sqt(entry.getId())+");"],HU.image(ramaddaBaseUrl+"/icons/map.png",["border",0,ATTR_TITLE,"Add Map Layer"])));}
if(entry.getType().getId()=="geo_shapefile"||entry.getType().getId()=="geo_geojson"){toolbarItems.push(HU.tag(TAG_A,["onclick",get+".addMapLayer("+HU.sqt(entry.getId())+");"],HU.image(ramaddaBaseUrl+"/icons/map.png",["border",0,ATTR_TITLE,"Add Map Layer"])));}
var jsonUrl=this.getPointUrl(entry);if(jsonUrl!=null){jsonUrl=jsonUrl.replace(/\'/g,"_");toolbarItems.push(HU.tag(TAG_A,["onclick",get+".createDisplay("+HU.sqt(entry.getFullId())+","+
HU.sqt("table")+","+HU.sqt(jsonUrl)+","+props+");"],HU.getIconImage("fa-table",[ATTR_TITLE,"Create Tabular Display"])));var x;toolbarItems.push(x=HU.tag(TAG_A,["onclick",get+".createDisplay("+HU.sqt(entry.getFullId())+","+
HU.sqt("linechart")+","+HU.sqt(jsonUrl)+","+props+");"],HU.getIconImage("fa-chart-line",[ATTR_TITLE,"Create Chart"])));}
toolbarItems.push(HU.tag(TAG_A,["onclick",get+".createDisplay("+HU.sqt(entry.getFullId())+","+
HU.sqt("entrydisplay")+","+HU.sqt(jsonUrl)+","+props+");"],HU.getIconImage("fa-file",["border",0,ATTR_TITLE,"Show Entry"])));if(entry.getFilesize()>0){toolbarItems.push(HU.tag(TAG_A,[ATTR_HREF,entry.getResourceUrl(),"download",null],HU.image(ramaddaBaseUrl+"/icons/download.png",["border",0,ATTR_TITLE,"Download ("+entry.getFormattedFilesize()+")"])));}
var entryMenuButton=this.getEntryMenuButton(entry);var tmp=[];if(handler&&handler.addToToolbar){handler.addToToolbar(handlerId,entry,toolbarItems);}
for(var i=0;i<toolbarItems.length;i++){tmp.push(HU.div([ATTR_CLASS,"display-entry-toolbar-item"],toolbarItems[i]));}
toolbarItems=tmp;return HU.div([ATTR_CLASS,"display-entry-toolbar",ATTR_ID,this.getEntryToolbarId(entry.getIdForDom())],HU.join(toolbarItems,""));},getEntryToolbarId:function(entryId){var id=entryId.replace(/:/g,"_").replace(/\//g,"_").replace(/[\(\)]/g,"_");id=id.replace(/=/g,"_");return this.getDomId(ID_TOOLBAR+"_"+id);},hideEntryDetails:function(entryId){},entryHeaderClick:function(event,entryId,suffix){var target=event.target;if(target.outerHTML){if(target.outerHTML.indexOf("<div")!=0){return;}}
this.toggleEntryDetails(event,entryId);},makeEntryTags:function(entry,groupThem,prefix,metadataMap){prefix=prefix||"";let metadata="";let map={};let list=[];entry.getMetadata().forEach(m=>{if(["content.pagestyle","content.pagetemplate","content.thumbnail","content.attachment"].includes(m.type))return;if(m.type.startsWith("map"))return;if(m.type.startsWith("spatial"))return;let tt=m.label+": "+m.value.attr1;let label=String(m.value.attr1);if(m.type=="property"){tt+=":"+m.value.attr2;label+=":"+m.value.attr2;}
if(label.length>20)label=label.substring(0,19)+"...";label=prefix+label;let id=Utils.getUniqueId("metadata_");let tag=HU.div(["metadata-type",m.type,"metadata-value",m.value.attr1,ID,id,CLASS,"display-search-tag",TITLE,tt,STYLE,HU.css("background",getMetadataColor(m.type))],label);if(!groupThem)
metadata+=tag;else{if(!map[m.type]){map[m.type]=[];list.push(m);}
map[m.type].push(tag);}
if(metadataMap)
metadataMap[id]=m;});if(groupThem){list.forEach(m=>{metadata+=m.label+": "+map[m.type].join(" ");metadata+="<br>";});}
return metadata;},toggleEntryDetails:async function(event,entryId,suffix,handlerId,entry){if(!entry){await this.getEntry(entryId,e=>{this.toggleEntryDetails(event,entryId,suffix,handlerId,e);});return;}
if(suffix==null)suffix="";let link=this.jq(ID_TREE_LINK+entry.getIdForDom()+suffix);let id=ID_DETAILS+entry.getIdForDom()+suffix;let details=this.jq(id);if(event&&event.shiftKey){let id=Utils.cleanId(entryId);let line=this.jq(ID_DETAILS_MAIN+id);if(!this.selectedEntriesFromTree){this.selectedEntriesFromTree={};}
let selected=line.attr("ramadda-selected")=="true";if(selected){line.removeClass("display-entrylist-entry-main-selected");line.attr("ramadda-selected","false");this.selectedEntriesFromTree[entry.getId()]=null;}else{line.addClass("display-entrylist-entry-main-selected");line.attr("ramadda-selected","true");this.selectedEntriesFromTree[entry.getId()]=entry;}
this.propagateEvent(DisplayEvent.entrySelection,{"entry":entry,"selected":!selected});return;}
let open=link.attr("tree-open")=="true";if(open){link.attr("src",icon_tree_closed);}else{link.attr("src",icon_tree_open);}
link.attr("tree-open",open?"false":"true");let handleContent=()=>{if(open){details.hide();}else{details.show();}
if(event&&event.stopPropagation){event.stopPropagation();}}
let _this=this;let hereBefore=details.attr("has-content")!=null;details.attr("has-content","true");if(hereBefore){handleContent();return;}
let detailsInner=this.jq(ID_DETAILS_INNER+entry.getIdForDom()+suffix);if(!entry.isSynth()&&entry.getIsGroup()){detailsInner.html(HU.image(icon_progress));let callback=function(entries){_this.displayChildren(entry,entries,suffix,handlerId);};let entries=entry.getChildrenEntries(callback);}else{detailsInner.html(this.getEntryHtml(entry,{showHeader:false}));}
handleContent();let metadataMap={};let prefix=entry.isSynth()?"":HU.getIconImage("fas fa-search")+SPACE;let metadata=this.makeEntryTags(entry,false,prefix,metadataMap);let bar=this.jq(ID_DETAILS_TAGS+entry.getIdForDom()+suffix);let typeTag=$(HU.span([CLASS,"display-search-tag"],prefix+"Type: "+entry.getType().getLabel())).appendTo(bar);if(!entry.isSynth()){typeTag.click(function(){_this.typeTagClicked(entry.getType());});}
let tags=$(metadata).appendTo(bar);if(!entry.isSynth()){tags.click(function(){_this.metadataTagClicked(metadataMap[$(this).attr("id")]);});}
if(!entry.isSynth()&&this.getProperty("showEntryBreadcrumbs",true)){let ancestorContent="";let handleAncestor=ancestor=>{if(!ancestor){this.jq(ID_DETAILS_ANCESTORS+entry.getIdForDom()+suffix).html(ancestorContent);}else{let href=ancestor.getLink(null,false,["target","_entries"]);if(ancestorContent!="")
href=href+HU.div([CLASS,"breadcrumb-delimiter"]);ancestorContent=href+ancestorContent;ancestor.getParentEntry(handleAncestor);}};entry.getParentEntry(handleAncestor);}},metadataTagClicked:function(metadata){},typeTagClicked:function(metadata){},getSelectedEntriesFromTree:function(){var selected=[];if(this.selectedEntriesFromTree){for(var id in this.selectedEntriesFromTree){var entry=this.selectedEntriesFromTree[id];if(entry!=null){selected.push(entry);}}}
return selected;},displayChildren:function(entry,entries,suffix,handlerId){if(!suffix)suffix="";let detailsInner=this.jq(ID_DETAILS_INNER+entry.getIdForDom()+suffix);let details=this.getEntryHtml(entry,{showHeader:false,showImage:entries.length==0});if(entries.length==0){detailsInner.html(details);}else{let entriesHtml=details;if(this.showDetailsForGroup){entriesHtml+=details;}
entriesHtml+=this.getEntriesTree(entries,{handlerId:handlerId});detailsInner.html(entriesHtml);this.addEntrySelect();}},getEntryMenuButton:function(entry){var menuButton=HU.onClick(this.getGet()+".showEntryMenu(event, '"+entry.getId()+"');",HU.image(ramaddaBaseUrl+"/icons/menu.png",[ATTR_CLASS,"display-entry-toolbar-item",ATTR_ID,this.getDomId(ID_MENU_BUTTON+entry.getIdForDom())]));return menuButton;},setOriginalRamadda:function(e){this.originalRamadda=e;},setRamadda:function(e){this.ramadda=e;},getRamadda:function(){if(this.ramadda!=null){return this.ramadda;}
if(this.ramaddaBaseUrl!=null){this.ramadda=getRamadda(this.ramaddaBaseUrl);return this.ramadda;}
return getGlobalRamadda();},getEntry:async function(entryId,callback){if(this.entriesMap&&this.entriesMap[entryId]){return Utils.call(callback,this.entriesMap[entryId]);}
var ramadda=this.getRamadda();var toks=entryId.split(",");if(toks.length==2){entryId=toks[1];ramadda=getRamadda(toks[0]);}
var entry=null;if(this.entryList!=null){await this.entryList.getEntry(entryId,e=>entry=e);}
if(entry==null){await ramadda.getEntry(entryId,e=>entry=e);}
if(entry==null){await this.getRamadda().getEntry(entryId,e=>entry=e);}
return Utils.call(callback,entry);},addMapLayer:async function(entryId){var entry;await this.getEntry(entryId,e=>{entry=e});if(entry==null){console.log("No entry:"+entryId);return;}
this.getDisplayManager().addMapLayer(this,entry);},doit:function(){console.log("doit");},createDisplay:async function(entryId,displayType,jsonUrl,displayProps){var entry;await this.getEntry(entryId,e=>{entry=e});if(entry==null){console.log("No entry:"+entryId);return null;}
var props={sourceEntry:entry,entryId:entry.getId(),showDetails:true,title:entry.getName(),layoutHere:false,};if(displayProps){$.extend(props,displayProps);}
if(displayType!=DISPLAY_ENTRYLIST){if(jsonUrl==null){jsonUrl=this.getPointUrl(entry);}
var pointDataProps={entry:entry,entryId:entry.getId()};props.data=new PointData(entry.getName(),null,null,jsonUrl,pointDataProps);}
if(this.lastDisplay!=null){props.column=this.lastDisplay.getColumn();props.row=this.lastDisplay.getRow();}else{props.column=this.getProperty("newColumn",this.getColumn());props.row=this.getProperty("newRow",this.getRow());}
this.lastDisplay=this.getDisplayManager().createDisplay(displayType,props);},getPointUrl:function(entry){let service=entry.getService("points.json");if(service!=null){return service.url;}
service=entry.getService("grid.point.json");if(service!=null){return service.url;}
return null;},getEntryMenu:async function(entryId,callback){var entry;await this.getEntry(entryId,e=>{entry=e});if(entry==null){return Utils.call(callback,"null entry");}
var get=this.getGet();var menus=[];var fileMenuItems=[];var viewMenuItems=[];var newMenuItems=[];viewMenuItems.push(HU.tag(TAG_LI,[],HU.tag(TAG_A,["href",entry.getEntryUrl(),"target","_"],"View Entry")));if(entry.getFilesize()>0){fileMenuItems.push(HU.tag(TAG_LI,[],HU.tag(TAG_A,["download",null,"href",entry.getResourceUrl()],"Download "+entry.getFilename()+" ("+entry.getFormattedFilesize()+")")));}
if(this.jsonUrl!=null){fileMenuItems.push(HU.tag(TAG_LI,[],"Data: "+HU.onClick(get+".fetchUrl('json');","JSON")+
HU.onClick(get+".fetchUrl('csv');","CSV")));}
var props="{showMenu:true,showTitle:true}";var newMenu="<a>New</a><ul>";newMenu+=HU.tag(TAG_LI,[],HU.onClick(get+".createDisplay('"+entry.getFullId()+"','entrydisplay',null,null,"+props+");","New Entry Display"));newMenuItems.push(HU.tag(TAG_LI,[],HU.onClick(get+".createDisplay('"+entry.getFullId()+"','entrydisplay',null,null,"+props+");","New Entry Display")));var pointUrl=this.getPointUrl(entry);if(pointUrl!=null){var types=window.globalDisplayTypes;var catMap={};if(types){for(var i=0;i<types.length;i++){var type=types[i];if(!type.requiresData||!type.forUser)continue;if(!Utils.isDefined(catMap[type.category])){catMap[type.category]="<li> <a>"+type.category+"</a><ul>\n";}
pointUrl=pointUrl.replace(/\'/g,"_");var call=get+".createDisplay("+HU.sqt(entry.getFullId())+","+HU.sqt(type.type)+","+HU.sqt(pointUrl)+",null,"+props+");";var li=HU.tag(TAG_LI,[],HU.tag(TAG_A,["onclick",call],type.label));catMap[type.category]+=li+"\n";newMenuItems.push(li);}}
for(a in catMap){newMenu+=catMap[a]+"</li></ul>";}}
if(fileMenuItems.length>0)
menus.push("<a>File</a>"+HU.tag(TAG_UL,[],HU.join(fileMenuItems)));if(viewMenuItems.length>0)
menus.push("<a>View</a>"+HU.tag(TAG_UL,[],HU.join(viewMenuItems)));if(newMenuItems.length>0)
menus.push(newMenu);var topMenus="";for(var i=0;i<menus.length;i++){topMenus+=HU.tag(TAG_LI,[],menus[i]);}
var menu=HU.tag(TAG_UL,[ATTR_ID,this.getDomId(ID_MENU_INNER+entry.getIdForDom()),ATTR_CLASS,"sf-menu"],topMenus);callback(menu);},showEntryMenu:async function(event,entryId){var menu;await this.getEntryMenu(entryId,m=>{menu=m});this.writeHtml(ID_MENU_OUTER,menu);var srcId=this.getDomId(ID_MENU_BUTTON+Utils.cleanId(entryId));this.dialog=HU.makeDialog({content:menu,anchor:srcId,draggable:false,header:false});$("#"+this.getDomId(ID_MENU_INNER+Utils.cleanId(entryId))).superfish({speed:'fast',delay:300});},fetchUrl:function(as,url){if(url==null){url=this.jsonUrl;}
url=this.getDisplayManager().getJsonUrl(url,this);if(url==null)return;if(as!=null&&as!="json"){url=url.replace("points.json","points."+as);}
window.open(url,'_blank');},getMenuItems:function(menuItems){},getDisplayMenuSettings:function(){var get="getRamaddaDisplay('"+this.getId()+"')";var moveRight=HU.onClick(get+".moveDisplayRight();","Right");var moveLeft=HU.onClick(get+".moveDisplayLeft();","Left");var moveTop=HU.onClick(get+".moveDisplayTop();","Top");var moveUp=HU.onClick(get+".moveDisplayUp();","Up");var moveDown=HU.onClick(get+".moveDisplayDown();","Down");var menu=HU.open(TABLE,[CLASS,'formtable'])+
"<tr><td align=right><b>Move:</b></td><td>"+moveTop+" "+moveUp+" "+moveDown+" "+moveRight+" "+moveLeft+"</td></tr>"+
"<tr><td align=right><b>Row:</b></td><td> "+HU.input("",this.getProperty("row",""),["size","7",ATTR_ID,this.getDomId("row")])+" &nbsp;&nbsp;<b>Col:</b> "+HU.input("",this.getProperty("column",""),["size","7",ATTR_ID,this.getDomId("column")])+"</td></tr>"+
"<tr><td align=right><b>Width:</b></td><td> "+HU.input("",this.getProperty("width",""),["size","7",ATTR_ID,this.getDomId("width")])+"  "+"<b>Height:</b> "+HU.input("",this.getProperty("height",""),["size","7",ATTR_ID,this.getDomId("height")])+"</td></tr>"+
"</table>";var tmp=HU.checkbox(this.getDomId("showtitle"),[],this.getProperty("showTitle"))+" Title  "+
HU.checkbox(this.getDomId("showdetails"),[],this.getProperty("showDetails"))+" Details "+
"&nbsp;&nbsp;&nbsp;"+
HU.onClick(get+".askSetTitle();","Set Title");menu+=HU.formTable()+HU.formEntry("Show:",tmp)+HU.close(TABLE);return menu;},loadInitialData:function(){if(!this.getProperty("okToLoadData",true))return;if(!this.needsData()||this.properties.theData==null){return;}
if(this.getProperty("latitude")){this.properties.theData.lat=this.getProperty("latitude");this.properties.theData.lon=this.getProperty("longitude","-105");}
if(this.properties.theData.hasData()){this.addData(this.properties.theData);return;}
this.properties.theData.loadData(this);},getData:function(){if(!this.hasData()){if(this.properties.dataSrc){this.addData(makeInlineData(this,this.properties.dataSrc));}else{return null;}}
var dataList=this.dataCollection.getList();return dataList[0];},hasData:function(){if(this.dataCollection==null)return false;return this.dataCollection.hasData();},getCreatedInteractively:function(){return this.createdInteractively==true;},needsData:function(){return false;},askSetTitle:function(){var t=this.getTitle(false);var v=prompt(TITLE,t);if(v!=null){this.title=v;this.setProperty(ATTR_TITLE,v);this.setDisplayTitle(this.title);}},getShowDetails:function(){return this.getSelfProperty("showDetails",true);},setShowDetails:function(v){this.showDetails=v;if(this.showDetails){this.jq(ID_DETAILS).show();}else{this.jq(ID_DETAILS).hide();}},setShowTitle:function(v){if(v==="true")v=true;else if(v==="false")v=true;this.setProperty("showTitle",v);if(v){this.jq(ID_TITLE).show();}else{this.jq(ID_TITLE).hide();}},setDisplayProperty:function(key,value){this.setProperty(key,value);$("#"+this.getDomId(key)).val(value);},deltaColumn:function(delta){var column=parseInt(this.getProperty("column",0));column+=delta;if(column<0)column=0;this.setDisplayProperty("column",column);this.getLayoutManager().layoutChanged(this);this.jq("col").val(column);},deltaRow:function(delta){var row=parseInt(this.getProperty("row",0));if(isNaN(row))row=0;row+=delta;if(row<0)row=0;this.setDisplayProperty("row",row);this.getLayoutManager().layoutChanged(this);this.jq("row").val(row);},moveDisplayRight:function(){if(this.getLayoutManager().isLayoutColumns()){this.deltaColumn(1);}else{this.getLayoutManager().moveDisplayDown(this);}},moveDisplayLeft:function(){if(this.getLayoutManager().isLayoutColumns()){this.deltaColumn(-1);}else{this.getLayoutManager().moveDisplayUp(this);}},moveDisplayUp:function(){if(this.getLayoutManager().isLayoutRows()){this.deltaRow(-1);}else{this.getLayoutManager().moveDisplayUp(this);}},moveDisplayDown:function(){if(this.getLayoutManager().isLayoutRows()){this.deltaRow(1);}else{this.getLayoutManager().moveDisplayDown(this);}},moveDisplayTop:function(){this.getLayoutManager().moveDisplayTop(this);},getDialogContents:function(tabTitles,tabContents){this.getDisplayDialogContents(tabTitles,tabContents);},getDisplayDialogContents:function(tabTitles,tabContents){var get=this.getGet();var menuItems=[];this.getMenuItems(menuItems);var form="<form>";form+=this.getDisplayMenuSettings();for(var i=0;i<menuItems.length;i++){form+=HU.div([ATTR_CLASS,"display-menu-item"],menuItems[i]);}
form+="</form>";tabTitles.push("Display");tabContents.push(form);},checkLayout:function(){},displayData:function(){},setDisplayReady:function(){var callUpdate=!this.displayReady;this.displayReady=true;if(callUpdate){this.callUpdateUI({force:true});}},getDisplayReady:function(){return this.displayReady;},pageHasLoaded:function(){if(!this.displayReady){this.setDisplayReady(true);}},doFinalInitialization:function(){},initDisplay:function(){if(this.inError)return
this.createUI();if(this.getAnimation().getEnabled()){this.getAnimation().makeControls();}
this.checkSearchBar();this.callUpdateUI({force:true});if(this.getProperty("reloadSeconds")){this.runReload();}},runReload:function(){setTimeout(()=>{this.reloadData();this.runReload();},this.getProperty("reloadSeconds")*1000);},getMainDiv:function(){let divId=this.getProperty("targetDiv",this.getProperty(PROP_DIVID,null,null,true),null,true);return $("#"+divid);},getGroupDiv:function(){return $("#"+this.getProperty("groupDiv"));},createUI:function(){let divId=this.getProperty("targetDiv",this.getProperty(PROP_DIVID,null,null,true),null,true);if(divId!=null){var html=this.getHtml();let div=$("#"+divId);let inline=this.getProperty("displayInline");if(inline){div.css("display","inline-block");div.css("vertical-align","bottom");}
let width=this.getWidth("100%");if(width&&width!="-1"){div.css("width",HU.getDimension(width));}
div.html(html);}else{console.log("error: no div defined for display:"+this.getType());}},getHtml:function(){let get=this.getGet();let button="";if(this.getShowMenu()){button=HU.onClick(get+".showDialog();",HU.image(ramaddaBaseUrl+"/icons/downdart.png",[ATTR_CLASS,"display-dialog-button",ATTR_ID,this.getDomId(ID_MENU_BUTTON)]));button+=" ";}
if(this.getShowProgress(false)){}
let title="";if(this.getShowTitle()){title=this.getTitle(false).trim();}
let topLeft="";if(button!=""||title!=""){let titleDiv=this.getTitleHtml(title);if(button==""){topLeft=titleDiv;}else{topLeft=HU.div(["class","display-header"],button+SPACE+titleDiv);}}
topLeft=HU.div([ID,this.getDomId(ID_TOP_LEFT),CLASS,"display-header-block"],topLeft);let h2Separate=this.getAnimationEnabled();let h1=HU.div([ID,this.getDomId(ID_HEADER1),CLASS,"display-header-block display-header1"],"");let h2=HU.div([ID,this.getDomId(ID_HEADER2),CLASS,"display-header-block display-header2"],"");let topCenter=HU.div([ID,this.getDomId(ID_TOP),CLASS,"display-header-block"],h2Separate?"":h2);let topRight=HU.div([ID,this.getDomId(ID_TOP_RIGHT)],"");let top=this.getProperty("showHeader",true)?HU.leftCenterRight(topLeft,topCenter,topRight,null,null,null,{valign:"bottom"}):"";let header=h1;if(h2Separate)header+=h2;top=header+top;let colorTable=HU.div([ID,this.getDomId(ID_COLORTABLE)]);let rightInner="";let leftInner="";let bottom=HU.div([ATTR_CLASS,"",ATTR_ID,this.getDomId(ID_BOTTOM)]);let legend=HU.div([ID,this.getDomId(ID_LEGEND)]);let ctSide=this.getProperty("colorTableSide","bottom");if(ctSide=="top"){top+=colorTable;}else if(ctSide=="right"){rightInner+=colorTable;}else if(ctSide=="left"){leftInner+=colorTable;}else{bottom+=colorTable;}
bottom+=legend;let leftStyle="";if(this.getProperty("leftSideWidth"))
leftStyle=HU.css("width",HU.getDimension(this.getProperty("leftSideWidth")));let left=HU.div([ATTR_ID,this.getDomId(ID_LEFT),STYLE,leftStyle],leftInner);let right=HU.div([ATTR_ID,this.getDomId(ID_RIGHT)],rightInner);let sideWidth="1%";let contents=this.getContentsDiv();let table=HU.open('table',[STYLE,"border:1px solid transparent;",CLASS,'display-ui-table','width','100%','border','0','cellpadding','0','cellspacing','0']);if(this.getProperty('showDisplayTop',true)){table+=HU.tr([],HU.td(['width',sideWidth])+HU.td(['width','99%'],top)+HU.td(['width',sideWidth]));}
table+=HU.tr(["valign","top"],HU.td(['width',sideWidth],left)+HU.td(['width','99%'],contents)+HU.td(['width',sideWidth],right));if(this.getProperty('showDisplayBottom',true)){table+=HU.tr([],HU.td(['width',sideWidth])+HU.td(['width','99%'],bottom)+HU.td(['width',sideWidth]));}
table+=HU.close('table');let message=HU.div([ID,this.domId(ID_DISPLAY_MESSAGE),CLASS,"display-output-message",STYLE,HU.css("display","none","position","absolute","top","10px","left","50%","-webkit-transform","translateX(-50%)","transform","translateX(-50%)")],"message");let html=HU.div([ATTR_CLASS,'ramadda-popup',STYLE,"display:none;",ATTR_ID,this.getDomId(ID_MENU_OUTER)],'');let style=this.getProperty('displayStyle','');html+=HU.div([CLASS,'display-contents',STYLE,HU.css('position','relative')+style],table+message);return html;},getWidthForStyle:function(dflt){var width=this.getProperty("width",-1);if(width==-1)return dflt;return HU.getDimension(width);},getHeightForStyle:function(dflt){let height=this.getProperty("height",-1);if(height==-1)return dflt;if(new String(height).match("^[0-9]+$")){height=height+"px";}
return height;},getContentsStyle:function(){let style="";let height=this.getHeightForStyle();if(height){style+=HU.css(HEIGHT,height);}
let maxheight=this.getProperty("maxHeight");if(maxheight){style+=HU.css("max-height",HU.getDimension(maxheight),"overflow-y","auto");}
return style;},getContentsClass:function(){return"ramadda-expandable-target display-contents-inner display-"+this.type;},getContentsDiv:function(){let style=this.getContentsStyle();style+=this.getProperty("contentsStyle","");let image=this.getProperty("backgroundImage");if(image){image=HU.getEntryImage(this.entryId,image);style+=HU.css("background-attachment","auto","background-size","100% auto","background-image","url('"+image+"')");}
let background=this.getProperty("background");if(background)
style+=HU.css("background",background);let topBottomStyle="";let top=HU.div([STYLE,topBottomStyle,ATTR_ID,this.getDomId(ID_DISPLAY_TOP)],"");let bottom=HU.div([STYLE,topBottomStyle,ATTR_ID,this.getDomId(ID_DISPLAY_BOTTOM)],"");let expandedHeight=this.getProperty("expandedHeight");if(expandedHeight)
style+=HU.css(HEIGHT,expandedHeight);let contentsAttrs=[ATTR_CLASS,this.getContentsClass(),STYLE,style,ATTR_ID,this.getDomId(ID_DISPLAY_CONTENTS)];if(this.getProperty("expandableHeight")){contentsAttrs.push("expandable-height");contentsAttrs.push(this.getProperty("expandableHeight"));}
let contents=top+"\n"+HU.div(contentsAttrs,"")+"\n"+bottom;return contents;},prepareToLayout:function(){this.getColumn();this.getWidth();this.getHeight();this.getName();this.getEventSource();},getColumn:function(){return this.getFormValue("column",0);},getRow:function(){return this.getFormValue("row",0);},getWidth:function(dflt){return this.getFormValue("width",dflt);},getHeight:function(){return this.getFormValue("height",0);},getDisplayTitle:function(title){if(!title)title=this.title!=null?this.title:"";var text=title;var fields=this.lastSelectedFields;if(fields&&fields.length>0)
text=text.replace("{field}",fields[0].getLabel());else
text=text.replace("{field}",HU.span([ID,this.getDomId(ID_TITLE_FIELD)],"&nbsp;"));return text;},setDisplayTitle:function(title){if(!Utils.stringDefined(title)){title=this.getTitle(false).trim();}
var text=this.getTitleHtml(title);if(this.getShowTitle()){this.jq(ID_TITLE).show();}else{this.jq(ID_TITLE).hide();}
this.writeHtml(ID_TITLE,text);},getTitle:function(showMenuButton){var prefix="";if(showMenuButton&&this.hasEntries()){prefix=this.getEntryMenuButton(this.getEntries()[0])+" ";}
var title=this.getProperty(ATTR_TITLE);if(title!=null){return prefix+title;}
if(this.dataCollection==null){return prefix;}
var dataList=this.dataCollection.getList();title="";for(var collectionIdx=0;collectionIdx<dataList.length;collectionIdx++){var pointData=dataList[collectionIdx];if(collectionIdx>0)title+="/";title+=pointData.getName();}
return prefix+title;},getIsLayoutFixed:function(){return this.getProperty(PROP_LAYOUT_HERE,true);},makeToolbar:function(props){var toolbar="";var get=this.getGet();var addLabel=props.addLabel;var images=[];var calls=[];var labels=[];if(!this.getIsLayoutFixed()){calls.push("removeRamaddaDisplay('"+this.getId()+"')");images.push("fa-cut");labels.push("Delete display");}
calls.push(get+".copyDisplay();");images.push("fa-copy");labels.push("Copy Display");if(this.jsonUrl!=null){calls.push(get+".fetchUrl('json');");images.push(ramaddaBaseUrl+"/icons/json.png");labels.push("Download JSON");calls.push(get+".fetchUrl('csv');");images.push(ramaddaBaseUrl+"/icons/csv.png");labels.push("Download CSV");}
for(var i=0;i<calls.length;i++){var inner=HU.getIconImage(images[i],[ATTR_TITLE,labels[i],ATTR_CLASS,"display-dialog-header-icon"]);if(addLabel)inner+=" "+labels[i]+"<br>";toolbar+=HU.onClick(calls[i],inner);}
return toolbar;},getHeader2:function(){return"";},initHeader2:function(){},writeHeader:function(header,html){if(html==""){this.jq(header).css("display","none");}else{this.jq(header).css("display","inline-block");}
this.jq(header).html(html);},checkLayout:function(){let d=this.jq(ID_DISPLAY_CONTENTS);let w=d.width();if(this.lastWidth!=w){this.lastWidth=w;this.displayData();}},forceUpdateUI:function(){this.haveCalledUpdateUI=false;this.callUpdateUI();},callUpdateUI:function(args){args=args||{};try{if(args.force)
this.haveCalledUpdateUI=false;this.updateUI(args);}catch(err){this.setContents(this.getMessage(err));console.log("Error:"+err);console.log(err.stack);}},updateUI:function(args){},getFilterId:function(id){return this.getDomId("filterby_"+id);},getRequestMacros:function(){if(!this.requestMacros){this.requestMacros=this.getRequestMacrosInner();}
return this.requestMacros;},getRequestMacrosInner:function(){let macros=[];let p=this.getProperty("requestFields","");let e1=this.getProperty("extraFields1","");let e2=this.getProperty("extraFields2","");let list=Utils.mergeLists(e1.split(","),p.split(","),e2.split(","));if(p!="")
console.log("requestFields="+p);list.forEach(macro=>{if(macro=="")return;macros.push(new RequestMacro(this,macro));});return macros;},applyRequestProperties:function(props){if(!props)return;this.requestMacros=null;this.dynamicProperties=props;this.createRequestProperties();},createRequestProperties:function(){let requestProps="";let macros=this.getRequestMacros();let macroDateIds=[];macros.forEach(macro=>{requestProps+=macro.getWidget(macroDateIds)+"&nbsp;&nbsp;";if(macro.isVisible()){requestProps+=SPACE2;}});this.writeHeader(ID_REQUEST_PROPERTIES,requestProps);let macroChange=(macro,value,what)=>{if(this.settingMacroValue)return;if(macro.triggerReload){this.macroChanged();this.reloadData();}
if(!macro.name)return;this.settingMacroValue=true;let args={entryId:this.entryId,property:"macroValue",id:macro.name,what:what,value:value};this.propagateEvent(DisplayEvent.propertyChanged,args);this.settingMacroValue=false;};let sliderFunc=function(){};macroDateIds.forEach(id=>{HU.datePickerInit(id);});this.jq(ID_HEADER2).find(".display-request-reload").click(()=>{macroChange({triggerReload:true});});macros.every(macro=>{$("#"+this.getDomId(macro.getId())+","+
"#"+this.getDomId(macro.getId()+"_min")+","+
"#"+this.getDomId(macro.getId()+"_max")+","+
"#"+this.getDomId(macro.getId()+"_from")+","+
"#"+this.getDomId(macro.getId()+"_to")).keyup(function(e){var keyCode=e.keyCode||e.which;if(keyCode==13){macroChange(macro,$(this).val());}});if(macro.type=="bounds"){this.jq(macro.getId()).change(function(e){macroChange(macro,$(this).is(':checked'));});}
if(macro.type=="enumeration"){this.jq(macro.getId()).change(function(e){macroChange(macro,$(this).val());});}
this.jq(macro.getId()+"_min").change(function(e){});this.jq(macro.getId()+"_max").change(function(e){});this.jq(macro.getId()+"_from").change(function(e){macroChange(macro,$(this).val(),"from");});this.jq(macro.getId()+"_to").change(function(e){macroChange(macro,$(this).val(),"to");});return true;});},makeFilterWidget:function(label,widget,title){if(!label)
return HU.div([CLASS,"display-filter-widget"],widget);return HU.div([CLASS,"display-filter-widget"],this.makeFilterLabel(label,title)+(label.trim().length==0?" ":": ")+
widget);},makeFilterLabel:function(label,tt,vertical){let clazz="display-filter-label";if(vertical)
clazz+=" display-filter-label-vertical ";let attrs=[CLASS,clazz];if(tt){attrs.push(TITLE);attrs.push(tt);}
return HU.span(attrs,label);},stepFilterDateAnimation:function(inputFunc,dir){let select=$("#"+this.getFilterId(ID_FILTER_DATE));let index=select[0].selectedIndex;let length=select.find('option').length;index+=dir;if(index>=length){return;index=0;}else if(index<0){return;index=length-1;}
select[0].selectedIndex=index;inputFunc(select);if(this.filterDatePlayingAnimation){setTimeout(()=>{this.stepFilterDateAnimation(inputFunc,1);},this.getProperty("filterDateAnimationSleep",1000));}},addFilters:function(filters){},initializeRangeSlider:function(jq,inputFunc,immediate){let _this=this;jq.mousedown(function(){let id=$(this).attr(ID);id=id.replace(/_min$/,"").replace(/_max$/,"");let min=$("#"+id+"_min");let max=$("#"+id+"_max");let range={min:parseFloat(min.attr("data-min")),max:parseFloat(max.attr("data-max"))};let smin=String(min.attr("data-min")).replace(/.*\./,"");let smax=String(max.attr("data-max")).replace(/.*\./,"");let numDecimals=Math.max(smin.length,smax.length);let minValue=parseFloat(min.val());let maxValue=parseFloat(max.val());let html=HU.div([ID,"filter-range",STYLE,HU.css("width","200px")],"");let popup=HtmlUtils.getTooltip();popup.html(html);popup.show();popup.position({of:min,my:"left top",at:"left bottom+2",collision:"fit fit"});if(isNaN(minValue))minValue=range.min;if(isNaN(maxValue))maxValue=range.max;var step=1;if(parseInt(range.max)!=range.max||parseInt(range.min)!=range.min)
step=(range.max-range.min)/100000;$("#filter-range").slider({range:true,min:range.min,max:range.max,step:step,values:[minValue,maxValue],slide:function(event,ui){let minv=String(Utils.roundDecimals(ui.values[0],numDecimals));let maxv=String(Utils.roundDecimals(ui.values[1],numDecimals));if(minv.endsWith("."))minv=minv.replace(/\./,"");if(maxv.endsWith("."))maxv=maxv.replace(/\./,"");min.val(minv);max.val(maxv);min.attr("data-value",min.val());max.attr("data-value",max.val());if(immediate){inputFunc(min,max);}},stop:function(){var popup=HtmlUtils.getTooltip();popup.hide();_this.checkFilterField(max);inputFunc(min,max);}});});},getRecordFilter:function(fieldId){if(this.filters){for(let i=0;i<this.filters.length;i++){let filter=this.filters[i];if(filter.field&&filter.field.getId()==fieldId)return this.filters[i];}}
return null;},checkSearchBar:function(){let hideFilterWidget=this.getProperty("hideFilterWidget",false,true);let vertical=this.getProperty("headerOrientation","horizontal")=="vertical";let filterClass="display-filter";let debug=displayDebug.checkSearchBar;if(debug)console.log("checkSearchBar");let _this=this;let colorBy=this.getFieldById(null,this.getProperty("colorBy",""));this.colorByFields=this.getFieldsByIds(null,this.getProperty("colorByFields","",true));this.sizeByFields=this.getFieldsByIds(null,this.getProperty("sizeByFields","",true));this.sortByFields=this.getFieldsByIds(null,this.getProperty("sortByFields","",true));let pointData=this.getData();if(pointData==null)return;let fields=pointData.getRecordFields();let records=pointData.getRecords();records=this.sortRecords(records);let header2="";if(this.getShowProgress(false)){header2+=HU.div([ID,this.getDomId(ID_DISPLAY_PROGRESS),STYLE,HU.css("display","inline-block","margin-right","4px","min-width","20px")]);}
header2+=HU.div([CLASS,"display-header-span"],"");header2+=HU.div([ID,this.getDomId(ID_HEADER2_PREPREPREFIX),CLASS,"display-header-span"],"");header2+=HU.div([ID,this.getDomId(ID_HEADER2_PREPREFIX),CLASS,"display-header-span"],"");header2+=HU.div([ID,this.getDomId(ID_HEADER2_PREFIX),CLASS,"display-header-span"],"");header2+=this.getHeader2();if(this.getProperty("pageRequest",false)||this.getProperty("filterPaginate")){header2+=HU.div([CLASS,"display-header-span display-filter",ID,this.getDomId(ID_PAGE_COUNT)]);}
header2+=HU.div([ID,this.getDomId(ID_REQUEST_PROPERTIES),CLASS,"display-header-span"],"");if(this.getProperty("legendFields")||this.getProperty("showFieldLegend",false)){let colors=this.getColorList();let fields=this.getFieldsByIds(null,this.getProperty("legendFields",this.getPropertyFields(this.getProperty("sumFields"))));let html="";let colorCnt=0;fields.forEach((f)=>{if(colorCnt>=colors.length)colorCnt=0;let color=colors[colorCnt];html+=HU.div([STYLE,HU.css("display","inline-block","width","8px","height","8px","background",color)])+" "+f.getLabel()+"&nbsp;&nbsp; ";colorCnt++;});header2+=html;}
if(this.getProperty("showDisplayFieldsMenu",false)){let displayFields=pointData.getChartableFields();if(displayFields.length){let fields=this.getSelectedFields();let selected=[];fields.forEach(f=>selected.push(f.getId()));let enums=[];displayFields.forEach(field=>{if(field.isFieldGeo())return;enums.push([field.getId(),field.getLabel()]);});let attrs=[ID,this.getDomId("displayfields")];if(this.getProperty("displayFieldsMenuMultiple",false)){attrs.push("multiple");attrs.push("true");attrs.push("size");attrs.push("4");}
this.displayFieldsMenuEnums=enums;let html=HU.span([CLASS,filterClass],this.makeFilterLabel("Display: ")+HU.select("",attrs,enums,selected))+SPACE;let side=this.getProperty("displayFieldsMenuSide","top");if(side=="left"){this.jq(ID_LEFT).append(html);}else{header2+=html;}}}
let selectFields=this.getProperty("selectFields");let selectFieldProps=[];if(selectFields){selectFields.split(";").forEach(t=>{let[prop,label,fields]=t.split(":");if(fields==null){fields=label;label=Utils.makeLabel(prop);}
let selectFields=this.getFieldsByIds(null,fields);let enums=[];selectFields.forEach(field=>{if(field.isFieldGeo())return;enums.push([field.getId(),field.getLabel()]);});header2+=HU.span([CLASS,filterClass],(label==""?"":this.makeFilterLabel(label+": "))+
HU.select("",[ID,this.getDomId("fieldselect_"+prop)],enums,this.getProperty(prop,"")))+SPACE;selectFieldProps.push(prop);});}
if(this.colorByFields.length>0){let enums=[];this.colorByFields.forEach(field=>{if(field.isFieldGeo())return;enums.push([field.getId(),field.getLabel()]);});let selected=colorBy?colorBy.getId():"";header2+=HU.span([CLASS,filterClass],this.makeFilterLabel("Color by: ")+HU.select("",[ID,this.getDomId("colorbyselect")],enums,selected))+SPACE;}
let sortAscending=this.getProperty("sortAscending",true);if(this.sortByFields.length>0){let enums=[];this.sortByFields.forEach(field=>{if(field.isFieldGeo())return;let id=field.getId();let label=field.getLabel();let suffix1=" &uarr;";let suffix2=" &darr;";if(field.isFieldString()){suffix1="A-Z";suffix2="Z-A";}
if(sortAscending||field.isFieldString()){enums.push([id+"_up",label+" "+suffix1]);enums.push([id+"_down",label+" "+suffix2]);}else{enums.push([id+"_down",label+" "+suffix2]);enums.push([id+"_up",label+" "+suffix1]);}});header2+=HU.span([CLASS,filterClass],this.makeFilterLabel("Order: ")+HU.select("",[ID,this.getDomId("sortbyselect")],enums,this.getProperty("sortFields","")))+SPACE;}
if(this.getProperty("showSortDirection")){header2+=HU.select("",[ID,this.getDomId("sortdirection")],[["up","Sort Up"],["down","Sort Down"]],sortAscending?"up":"down")+SPACE;}
if(this.sizeByFields.length>0){let enums=[];this.sizeByFields.forEach(field=>{enums.push([field.getId(),field.getLabel()]);});header2+=HU.span([CLASS,filterClass],this.makeFilterLabel("Size by: ")+HU.select("",[ID,this.getDomId("sizebyselect")],enums,this.getProperty("sizeBy","")))+SPACE;}
let highlight=this.getFilterHighlight();if(this.getProperty("showFilterHighlight")){let enums=[["filter","Filter"],["highlight","Highlight"]];let select=HU.select("",["fieldId","_highlight",ID,this.getDomId(ID_FILTER_HIGHLIGHT)],enums,!highlight?"filter":"highlight")+SPACE2;if(hideFilterWidget){select=HU.div([STYLE,HU.css("display","none")],select);}
header2+=select;}
let dataFilterIds=[];this.getDataFilters().forEach(f=>{if(!f.label)return;let cbxid=this.getDomId("datafilterenabled_"+f.id);dataFilterIds.push(cbxid);header2+=HU.checkbox("",[ID,cbxid],f.enabled)+" "+
this.makeFilterLabel(f.label+"&nbsp;&nbsp;")});if(this.getProperty("filterDate")){let type=this.getProperty("filterDate");let enums=[];if(this.getProperty("filterDateIncludeAll")){enums.push(["all","All"]);}
let selected=null;let seen={};let dates=[];records.forEach(record=>dates.push(record.getDate()));dates.sort(function(a,b){return a.getTime()-b.getTime();});dates.forEach(dttm=>{let value=null;if(type=="year"){value=dttm.getFullYear();}else if(type=="day"){value=Utils.formatDateMonthDayYear(dttm);}
if(!seen[value]){selected=String(dttm);enums.push([String(dttm),value]);seen[value]=true;}});let label=type=="year"?"Year":type=="month"?"Month":type=="day"?"Day":type;let style="";if(!this.getProperty("filterDateShow",true))
style+="display:none;";let selectId=this.getFilterId(ID_FILTER_DATE);label=this.makeFilterLabel("Select "+label+": ");let prefix="";prefix+=HU.div([ID,this.getDomId("filterDateStepBackward"),STYLE,HU.css("display","inline-block"),TITLE,"Step Back"],HU.getIconImage("fa-step-backward",[STYLE,HU.css("cursor","pointer")]))+SPACE1;prefix+=HU.div([ID,this.getDomId("filterDatePlay"),STYLE,HU.css("display","inline-block"),TITLE,"Play/Stop Animation"],HU.getIconImage("fa-play",[STYLE,HU.css("cursor","pointer")]))+SPACE1;prefix+=HU.div([ID,this.getDomId("filterDateStepForward"),STYLE,HU.css("display","inline-block"),TITLE,"Step Forward"],HU.getIconImage("fa-step-forward",[STYLE,HU.css("cursor","pointer")]))+SPACE1;let widget=HU.span([CLASS,filterClass,STYLE,style],prefix+
HU.select("",["fieldId","filterDate",ATTR_ID,selectId],enums,selected))+SPACE;if(hideFilterWidget){widget=HU.div([STYLE,HU.css("display","none")],widget);}
header2+=widget;}
let filterBy=this.getProperty("filterFields","").split(",").map(tok=>{return tok.trim();});let fieldMap={};let displayType="";this.filters=[];this.filterMap={};this.addFilters(this.filters);if(filterBy.length>0){let group=null;for(let i=0;i<filterBy.length;i++){if(filterBy[i]=="")continue;if(filterBy[i].startsWith("group:")){group=filterBy[i].substring(6);if(group=="none")group=null;continue;}
let filter=new RecordFilter(this,filterBy[i]);filter.group=group;this.filters.push(filter);this.filterMap[filter.getId()]=filter;}
let searchBar="";let bottom=[""];group=null;groupHtml=null;this.filters.forEach(filter=>{let widget=filter.getWidget(fieldMap,bottom,records,vertical);if(!vertical)
widget=HU.span([ID,this.domId("filtercontainer_"+filter.id)],widget);if(filter.group!=null){if(filter.group!=group&&groupHtml!=null){searchBar+=HU.toggleBlock(group,groupHtml,false);groupHtml=null;}
group=filter.group;if(groupHtml==null){groupHtml="";}
groupHtml+=widget;return;}
if(groupHtml!=null){searchBar+=HU.toggleBlock(group,groupHtml,false);groupHtml=null;}
searchBar+=widget;});if(groupHtml!=null)searchBar+=HU.toggleBlock(group,groupHtml,false);style=(hideFilterWidget?"display:none;":"")+this.getProperty("filterByStyle","");if(this.getProperty("showFilterTotal",false)){searchBar+=HU.span([CLASS,"display-filter-label",ID,this.getDomId(ID_FILTER_COUNT)],"");}
let filterBar=searchBar+bottom[0]+HU.div([ID,this.domId(ID_TAGBAR)],"");header2+=HU.div([CLASS,"display-header-span "+filterClass,STYLE,style,ID,this.getDomId(ID_FILTERBAR)],filterBar);}
if(vertical){header2=HU.div([CLASS,"display-header-vertical"],header2);}else{header2=HU.div([STYLE,"line-height:0;"],header2);}
let headerSide=this.getDisplayHeaderSide();if(headerSide=="left")
this.jq(ID_LEFT).html(header2);else if(headerSide=="right")
this.jq(ID_RIGHT).html(header2);else
this.jq(ID_HEADER2).html(header2);this.initHeader2();this.jq("test").button().click(()=>{this.haveCalledUpdateUI=false;this.callUpdateUI();});this.createRequestProperties();let inputFunc=(input,input2,value)=>{let debug=false;if(this.ignoreFilterChange)return;let id=input.attr(ID);if(!id){console.log("No ID attribute");return;}
if(debug)
console.log(this.type+" filter change");let changedFilter;let changedFilterId;this.filters.every(filter=>{if(filter.widgetId==id){changedFilter=filter;changedFilterId=filter.id;return false;}
return true;});if(debug)
console.log("changed filter:"+changedFilter)
let dependentFilters=[];if(changedFilter){this.filters.forEach(filter=>{if(filter.depends==changedFilter.id){dependentFilters.push(filter);let widget=$("#"+filter.widgetId);this.ignoreFilterChange=true;filter.lastValue=widget.val();widget.val(FILTER_ALL);this.ignoreFilterChange=false;}});}
if(!input2){if(id.endsWith("_min")){input2=$("#"+id.replace(/_min$/,"_max"));}else if(id.endsWith("_max")){let tmp=input;input=$("#"+id.replace(/_max$/,"_min"));input2=tmp;}}
if(input.attr("isCheckbox")){let on=input.attr("onValue")||true;let off=input.attr("offValue")||false;if(input.is(':checked')){value=on;console.log(_this.type+" cbx is checked value:"+value+" on:"+on+" off:"+off);}else{value=off;console.log(_this.type+" cbx is not checked value:"+value+" on:"+on+" off:"+off);}}
if(!value){value=input.val();}
if(value===null||value===""){value=input.attr("data-value")||input.val();}
if(value==null){if(debug)
console.log("no value:"+value);return;}
if(!Array.isArray(value)&&input.attr("isButton")){var tmp=[];value.split(",").forEach(v=>{tmp.push(v.replace(/_comma_/g,","));});value=tmp;}
let fieldId=input.attr("fieldId");_this.checkFilterField(input);_this.haveCalledUpdateUI=false;if(_this.settingFilterValue){return;}
_this.settingFilterValue=true;this.filteredRecords=null;if(debug)
console.log("calling dataFilterChanged");_this.dataFilterChanged();let records=[];let predecessorChanged=false;dependentFilters.forEach(filter=>{if(this.filteredRecords==null)
this.filteredRecords=this.filterRecords();let widget=filter.getWidget({},[],this.filteredRecords);this.jq("filtercontainer_"+filter.id).html(widget);if(filter.initWidget)
filter.initWidget(inputFunc);if(filter.widgetId){let widget=$("#"+filter.widgetId);if(!widget.length){console.log("Could not find dependent widget:"+filter.id);return;}
if(filter.lastValue){if(widget[0].options){let values=$.map(widget[0].options,(option)=>{return option.value});if(!values.includes(filter.lastValue))filter.lastValue=FILTER_ALL;}
widget.val(filter.lastValue);}
widget.change(function(){inputFunc($(this));});}
return true;});this.addToDocumentUrl(fieldId+".filterValue",value);let args={id:id,fieldId:fieldId,value:value};if(input2){args.value2=input2.val();}
_this.propagateEvent(DisplayEvent.filterChanged,args);_this.settingFilterValue=false;};dataFilterIds.forEach(id=>{$("#"+id).click(function(e){inputFunc($(this));});});this.filters.forEach(f=>{if(f.initWidget)
f.initWidget(inputFunc);});this.jq(ID_FILTERBAR).find(".display-filter-items").each(function(){let parent=$(this);$(this).find(".display-filter-item").click(function(event){var isAll=$(this).hasClass("display-filter-item-all");var selectClazz="display-filter-item-"+displayType+"-selected"
var wasSelected=$(this).hasClass(selectClazz);var fieldId=$(this).attr("fieldId");var multiples=_this.getProperty(fieldId+".filterMultiple",false);if(!event.metaKey||isAll||!multiples){parent.find(".display-filter-item").removeClass(selectClazz);}else{parent.find(".display-filter-item-all").removeClass(selectClazz);}
if(wasSelected&&event.metaKey){$(this).removeClass(selectClazz);}else{$(this).addClass(selectClazz);}
var values=[];parent.find("."+selectClazz).each(function(){values.push($(this).attr("data-value").replace(/,/g,"_comma_"));});if(values.length==0){parent.find(".display-filter-item-all").addClass(selectClazz);values.push(FILTER_ALL);}
var value=Utils.join(values,",");parent.attr("data-value",value);$("#"+parent.attr(ID)+"_label").html(values.includes(FILTER_ALL)?SPACE:value);inputFunc(parent,null,values);});});this.jq(ID_FILTERBAR).find(".display-filter-input").keyup(function(e){let keyCode=e.keyCode||e.which;if(keyCode==13){return;}
HtmlUtils.hidePopupObject();let input=$(this);let val=$(this).val().trim();if(val=="")return;let fieldId=$(this).attr("fieldId");let field=fieldMap[fieldId].field;let values=fieldMap[fieldId].values;let items=[];let regexp=null;try{val=val.replace(/\./g,"\\.");regexp=new RegExp("("+val+")",'i');}catch(ignore){}
for(let i=0;i<values.length;i++){let text=values[i].toString();let match=regexp?text.match(regexp):text.indexOf(val)>=0;if(match){items.push([match[1],values[i]]);}
if(items.length>30)break;}
if(items.length>0){let html="";let itemCnt=0;items.forEach(item=>{let match=item[0];item=item[1];let label=item.replace(regexp,"<span style='background:"+TEXT_HIGHLIGHT_COLOR+";'>"+match+"</span>");item=item.replace(/\'/g,"\'");html+=HU.div([TITLE,item,CLASS,"ramadda-hoverable ramadda-clickable display-filter-popup-item","item",item],label)+"\n";itemCnt++;});if(itemCnt>0){let popup=HtmlUtils.setPopupObject(HtmlUtils.getTooltip());popup.html(HU.div([STYLE,HU.css("margin","5px"),CLASS,"ramadda-popup-inner ramadda-snippet-popup"],html));popup.show();popup.position({of:$(this),my:"left top",at:"left bottom",});$(".display-filter-popup-item").click(function(){HtmlUtils.hidePopupObject();input.val($(this).attr("item"));inputFunc(input);});}}});this.initializeRangeSlider(this.jq(ID_FILTERBAR).find(".display-filter-range"),inputFunc,this.getProperty("filterSliderImmediate"));this.jq(ID_FILTER_HIGHLIGHT).change(function(){_this.setProperty("filterHighlight",$(this).val()=="highlight");_this.haveCalledUpdateUI=false;inputFunc($(this));});$("#"+this.getFilterId(ID_FILTER_DATE)).change(function(){inputFunc($(this));});this.jq("filterDatePlay").click(function(){_this.filterDatePlayingAnimation=!_this.filterDatePlayingAnimation;let icon=_this.filterDatePlayingAnimation?"fa-stop":"fa-play";$(this).html(HU.getIconImage(icon,[STYLE,HU.css("cursor","pointer")]));if(_this.filterDatePlayingAnimation){_this.stepFilterDateAnimation(inputFunc,1);}});this.jq("filterDateStepBackward").click(function(){_this.filterDatePlayingAnimation=false;let icon=_this.filterDatePlayingAnimation?"fa-stop":"fa-play";_this.jq("filterDatePlay").html(HU.getIconImage(icon,[STYLE,HU.css("cursor","pointer")]));_this.stepFilterDateAnimation(inputFunc,-1);});this.jq("filterDateStepForward").click(function(){_this.filterDatePlayingAnimation=false;let icon=_this.filterDatePlayingAnimation?"fa-stop":"fa-play";_this.jq("filterDatePlay").html(HU.getIconImage(icon,[STYLE,HU.css("cursor","pointer")]));_this.stepFilterDateAnimation(inputFunc,1);});this.jq("displayfields").change(function(){let val=$(this).val();if(Array.isArray(val)){val=val.join(",");}
_this.displayFieldsChanged(val);_this.propagateEvent(DisplayEvent.propertyChanged,{property:'displayFields',value:val});});selectFieldProps.forEach(prop=>{this.jq("fieldselect_"+prop).change(function(){_this.fieldSelectedChanged(prop,$(this).val());});});this.jq("colorbyselect").change(function(){_this.colorByFieldChanged($(this).val());});this.jq("sortbyselect").change(function(){let val=$(this).val();if(val.endsWith("_up")){_this.setProperty("sortAscending",true);val=val.replace(/_up$/,"");}else{val=val.replace(/_down$/,"");_this.setProperty("sortAscending",false);}
_this.sortByFieldChanged(val);});this.jq("sortdirection").change(function(){let val=$(this).val();_this.setProperty("sortAscending",val=="up");_this.forceUpdateUI();});this.jq("sizebyselect").change(function(){_this.sizeByFieldChanged($(this).val());});this.jq(ID_FILTERBAR).find("input").keyup(function(e){let keyCode=e.keyCode||e.which;if(keyCode==13){inputFunc($(this));}});this.jq(ID_FILTERBAR).find("input:radio,select").change(function(){inputFunc($(this));});this.jq(ID_FILTERBAR).find("input:checkbox").change(function(){inputFunc($(this));});let dates=[];if(debug)console.log("checkSearchBar-getting filtered data");let filteredRecords=this.filterData();if(debug)console.log("checkSearchBar-done getting filtered data");let dateInfo=this.getDateInfo(filteredRecords);if(debug)console.log("checkSearchBar-11");if(dateInfo.dateMax){if(debug)console.log("checkSearchBar-getAnimation");let animation=this.getAnimation();if(animation.getEnabled()){if(debug)console.log("checkSearchBar-calling animation.init");animation.init(dateInfo.dateMin,dateInfo.dateMax,filteredRecords);if(debug)console.log("checkSearchBar-done calling animation.init");if(!this.minDateObj){if(debug)console.log("checkSearchBar-calling setDateRange");if(this.getProperty("animationFilter",true)){this.setDateRange(animation.begin,animation.end);}
if(debug)console.log("checkSearchBar-done calling setDateRange");}}}
if(debug)console.log("checkSearchBar-done");},getDateInfo:function(records){let dateMin=null;let dateMax=null;let dates=[];records.every(record=>{if(dateMin==null){dateMin=record.getDate();dateMax=record.getDate();}else{let date=record.getDate();if(date){dates.push(date);if(date.getTime()<dateMin.getTime())
dateMin=date;if(date.getTime()>dateMax.getTime())
dateMax=date;}}
return true;});return{dateMin:dateMin,dateMax:dateMax,dates:dates};},getHighlightColor:function(){return this.getProperty("highlightColor",HIGHLIGHT_COLOR);},checkFilterField:function(f){let min=f.attr("data-min");let max=f.attr("data-max");let value=f.val();if(Utils.isDefined(min)){if(value!=min){f.css("background",TEXT_HIGHLIGHT_COLOR);}else{f.css("background","white");}}else if(Utils.isDefined(max)){if(value!=max){f.css("background",TEXT_HIGHLIGHT_COLOR);}else{f.css("background","white");}}},fieldSelectedChanged:function(prop,val){this.setProperty(prop,val);this.haveCalledUpdateUI=false;this.callUpdateUI();},colorByFieldChanged:function(field){this.setProperty("colorBy",field);this.callUpdateUI();},sortByFieldChanged:function(field){this.setProperty("sortFields",field);this.callUpdateUI();},sizeByFieldChanged:function(field){},someFieldChanged:function(type,field){},macroChanged:function(){this.pageSkip=0;},dataFilterChanged:function(args){args=args||{};args.dataFilterChanged=true;console.log("DF");this.callUpdateUI(args);},addFieldClickHandler:function(jq,records,addHighlight){let _this=this;if(records){if(!jq)jq=this.jq(ID_DISPLAY_CONTENTS);let map=this.makeIdToRecords(records);let func=function(){if(addHighlight){$(this).parent().find(".display-row-highlight").removeClass("display-row-highlight");$(this).addClass("display-row-highlight");}
let record=records[$(this).attr(RECORD_INDEX)];if(!record)record=map[$(this).attr(RECORD_ID)];if(record)
_this.propagateEventRecordSelection({record:record});};let children=jq.find("["+RECORD_INDEX+"]");if(!children.length)children=jq.find("["+RECORD_ID+"]");if(!children.length)children=jq;children.click(func);}
if(this.getProperty("propagateValueClick",true)){let _this=this;if(!jq)jq=this.jq(ID_DISPLAY_CONTENTS);jq.find("[field-id]").click(function(){let args={id:$(this).attr("field-id"),fieldId:fieldId,value:$(this).attr("field-value")};_this.propagateEvent(DisplayEvent.filterChanged,args);});}},makeIdToRecords:function(records){let idToRecord={};records.forEach(r=>idToRecord[r.getId()]=r);return idToRecord;},makeTooltipClick:function(selector,records){let tooltipClick=this.getProperty("tooltipClick");if(!tooltipClick)return;selector.css("cursor","pointer");let idToRecord=this.makeIdToRecords(records);let _this=this;selector.click(function(){let record=idToRecord[$(this).attr(RECORD_ID)];if(!record)return;if(_this.tooltipDialog){_this.tooltipDialog.remove();_this.tooltipDialog=null;}
let tt=_this.getRecordHtml(record,null,tooltipClick);tt=HU.div([STYLE,HU.css("width","600px")],tt);_this.tooltipDialog=HU.makeDialog({content:tt,anchor:$(this),draggable:true,header:true});if(_this.getProperty("dialogListener"))
_this.getProperty("dialogListener")(this,_this.tooltipDialog);_this.initTemplatePopup(_this.tooltipDialog);});},initTemplatePopup:function(dialog){let _this=this;dialog.find(".display-search-tag").click(function(){let type=$(this).attr("metadata-type");if(type==null)return;let filter=_this.filterMap[type];if(filter==null)return;let value=$(this).attr("metadata-value");filter.toggleTag(value,true,null,true);});},makeTooltips:function(selector,records,callback,tooltipArg,propagateHighlight){let tooltipClick=this.getProperty("tooltipClick");if(tooltipClick){this.makeTooltipClick(selector,records);}
if(!Utils.isDefined(propagateHighlight)||propagateHighlight==null)
propagateHighlight=this.shareEvent(DisplayEvent.recordHighlight,this.getProperty("propagateEventRecordHighlight",false));if(!this.getProperty("showTooltips",true)){return;}
let tooltip=tooltipArg||this.getProperty("tooltip");if(tooltip==null){return;}
let _this=this;let idToRecord=this.makeIdToRecords(records);let tooltipFunc={content:function(){let record=idToRecord[$(this).attr(RECORD_ID)];if(!record)record=records[parseFloat($(this).attr(RECORD_INDEX))];if(!record)return null;let propagateOk=true;if(callback&&callback(true,record)===false){propagateOk=false;}
if(propagateOk&&propagateHighlight){_this.getDisplayManager().notifyEvent(DisplayEvent.recordHighlight,_this,{highlight:true,record:record});}
if(tooltip==""||tooltip=="none")return null;let style=_this.getProperty("tooltipStyle");let tt=_this.getRecordHtml(record,null,tooltip);if(style)tt=HU.div([STYLE,style],tt);return tt;},close:function(event,ui){let record=idToRecord[$(this).attr(RECORD_ID)];if(!record)
record=records[parseFloat($(this).attr(RECORD_INDEX))];let propagateOk=true;if(callback&&callback(false,record)===false){propagateOk=false;}
if(propagateOk&&propagateHighlight)
_this.getDisplayManager().notifyEvent(DisplayEvent.recordHighlight,_this,{highlight:false,record:record});},position:{my:_this.getProperty("tooltipPositionMy","left top"),at:_this.getProperty("tooltipPositionAt","left bottom+2"),collision:_this.getProperty("tooltipCollision","flip")},show:{delay:parseFloat(_this.getProperty("tooltipDelay",1000)),duration:parseFloat(_this.getProperty("tooltipDuration",500)),},classes:{"ui-tooltip":_this.getProperty("tooltipClass","ramadda-shadow-box  display-tooltip")}};if(selector.length>500){selector.mouseenter(function(){let tooltip=$(this).tooltip(tooltipFunc);tooltip.tooltip('open');});selector.mouseleave(function(){let tooltip=$(this).tooltip({});tooltip.tooltip('close');});}else{selector.tooltip(tooltipFunc);}},makeRecordSelect:function(selector,idToRecords,callback){let _this=this;selector.click(function(event){let record=idToRecords[$(this).attr(RECORD_ID)];if(!record)return;if(callback)callback(record);_this.propagateEventRecordSelection({select:true,record:record});});},makePopups:function(selector,records,callback,popupTemplate){if(!popupTemplate)
popupTemplate=this.getProperty("popupTemplate");if(!popupTemplate)return;let _this=this;selector.click(function(event){let record=records[parseFloat($(this).attr(RECORD_INDEX))];if(!record)return;if(callback)callback(record);_this.propagateEventRecordSelection({select:true,record:record});_this.showRecordPopup($(this),record,callback,popupTemplate);});},showRecordPopup:function(element,record,popupTemplate){if(!record)return;if(!popupTemplate)
popupTemplate=this.getProperty("popupTemplate");if(!popupTemplate)return;let _this=this;HtmlUtils.hidePopupObject();let html=_this.getRecordHtml(record,null,popupTemplate);html=HU.div([CLASS,"display-popup "+_this.getProperty("popupClass",""),STYLE,_this.getProperty("popupStyle","")],html);let popup=HtmlUtils.setPopupObject(HtmlUtils.getTooltip());popup.html(html);popup.show();popup.position({of:element,my:_this.getProperty("popupPositionMy","left top"),at:_this.getProperty("popupPositionAt","left bottom+2"),collision:_this.getProperty("popupCollision","none none")});},animationStart:function(animation){},animationApply:function(animation,skipUpdateUI){if(this.getProperty("animationFilter",true))
this.setDateRange(animation.begin,animation.end);if(!skipUpdateUI){this.haveCalledUpdateUI=false;this.dataFilterChanged({source:"animation"});}
this.propagateEvent(DisplayEvent.propertyChanged,{property:"dateRange",minDate:animation.begin,maxDate:animation.end});},makeDialog:function(text){var html="";if(!text){var tabTitles=[];var tabContents=[];this.getDialogContents(tabTitles,tabContents);tabTitles.push("Edit");tabContents.push(this.makeToolbar({addLabel:true}));var tabLinks="<ul>";var tabs="";for(var i=0;i<tabTitles.length;i++){var id=this.getDomId("tabs")+i;tabLinks+=HU.tag("li",[],HU.tag("a",["href","#"+id],tabTitles[i]));tabLinks+="\n";var contents=HU.div([ATTR_CLASS,"display-dialog-tab"],tabContents[i]);tabs+=HU.div([ID,id],contents);tabs+="\n";}
tabLinks+="</ul>\n";text=HU.div([ID,this.getDomId(ID_DIALOG_TABS)],tabLinks+tabs);}
return text;},initDialog:function(){var _this=this;var updateFunc=function(e){if(e&&e.which!=13&&e.which!=0){return;}
var changed=false;["column","row","width","height"].forEach(f=>{if(_this[f]!=_this.jq(f).val()&&(_this[f]||_this.jq(f).val().trim()!="")){changed=true;_this[f]=_this.jq(f).val();}});if(changed){_this.getLayoutManager().doLayout();}};["column","row","width","height"].forEach(f=>{this.jq(f).blur(updateFunc);this.jq(f).keypress(updateFunc);});this.jq("showtitle").change(function(){_this.setShowTitle(_this.jq("showtitle").is(':checked'));});this.jq("showdetails").change(function(){_this.setShowDetails(_this.jq("showdetails").is(':checked'));});this.jq(ID_DIALOG_TABS).tabs();},showDialog:function(text,from,initDialog,title){if(this.dialog)this.dialog.remove();if(!this.dialogElement){}
let html=this.makeDialog(text);this.dialog=HU.makeDialog({content:html,title:title||this.getTitle(),anchor:from||this.jq(ID_MENU_BUTTON),draggable:true,header:true});if(initDialog)initDialog();else this.initDialog();return this.dialog;},copyDisplay:function(){let newOne={};$.extend(true,newOne,this);newOne.setId(newOne.getId()+this.getUniqueId("display"));addRamaddaDisplay(newOne);this.getDisplayManager().addDisplay(newOne);},removeDisplay:function(){this.getDisplayManager().removeDisplay(this);if(this.dialogElement)this.dialogElement.remove();},doingQuickEntrySearch:false,doQuickEntrySearch:function(request,callback){if(this.doingQuickEntrySearch)return;var text=request.term;if(text==null||text.length<=1)return;this.doingQuickEntrySearch=true;var searchSettings=new EntrySearchSettings({name:text,max:10,});if(this.searchSettings){searchSettings.clearAndAddType(this.searchSettings.entryType);}
let _this=this;var jsonUrl=this.getRamadda().getSearchUrl(searchSettings,OUTPUT_JSON);var handler={entryListChanged:function(entryList){_this.doneQuickEntrySearch(entryList,callback);}};var entryList=new EntryList(this.getRamadda(),jsonUrl,handler,true);},doneQuickEntrySearch:function(entryList,callback){var names=[];var entries=entryList.getEntries();for(var i=0;i<entries.length;i++){names.push(entries[i].getName());}
callback(names);this.doingQuickEntrySearch=false;},addData:async function(pointData){var records=pointData.getRecords();if(records&&records.length>0){this.hasElevation=records[0].hasElevation();}else{this.hasElevation=false;}
pointData=this.convertPointData(pointData);this.dataCollection.addData(pointData);var entry=pointData.entry;if(entry==null&&pointData.entryId){await this.getRamadda().getEntry(pointData.entryId,e=>{entry=e});}
if(entry){pointData.entry=entry;this.addEntry(entry);}},setErrorMessage:function(msg){this.setContents(this.getMessage(msg));},clearProgress:function(){this.jq(ID_DISPLAY_PROGRESS).html("");},startProgress:function(){if(this.jq(ID_DISPLAY_PROGRESS).length>0)
this.jq(ID_DISPLAY_PROGRESS).html(HU.image(icon_progress));else{if(this.useDisplayMessage()){this.setDisplayMessage(this.getLoadingMessage());}else{this.setContents(this.getLoadingMessage());}}},handleNoData:function(pointData,reload){let debug=displayDebug.handleNoData;this.jq(ID_PAGE_COUNT).html("");if(!reload){if(debug)console.log("\tno reload");this.addData(pointData);this.checkSearchBar();}else{if(!this.dataCollection)
this.dataCollection=new DataCollection();this.dataCollection.setData(pointData);}
this.setContents(this.getMessage(this.getNoDataMessage()));},pointDataLoadFailed:function(data){this.clearProgress();this.inError=true;errorMessage=this.getProperty("errorMessage",null);if(errorMessage!=null){this.setContents(errorMessage);return;}
var msg="";if(data&&data.error){msg=data.error;}else if(data&&data.errorcode&&data.errorcode=="warning"){msg=data.error;}else{msg="<b>An error has occurred:</b>";if(!data)data=this.getNoDataMessage();var error=data.error?data.error:data;error=error.replace(/<[^>]*>/g,"");var tmp="";var lines=error.split("\n");var seen={};for(var i=0;i<lines.length;i++){var line=lines[i].trim();if(line=="")continue;if(seen[line])continue;seen[line]=true;tmp+=line+"\n";}
error=tmp;error=HU.tag("pre",[STYLE,HU.css("max-height","300px","overflow-y","auto","max-width","100%","overflow-x","auto")],error);msg+=error;}
this.setErrorMessage(msg);},clearCache:function(){},handleEventDataSelection:function(source,args){if(this.getAcceptEventDataSelection()){this.pointDataLoaded(args.data,"",true);}},getRequirement:function(){return null;},updatePaginateLabel:function(skip,count,max){let paginate=this.getProperty("filterPaginate");let label=count;if(skip!=null&&skip>0)
label=String(skip+1)+"-"+(count+skip);else if(count<max)
label="1"+"-"+count;label=this.getProperty("pageRequestLabel","Showing: ${count}").replace("${count}",label);this.jq(ID_PAGE_LABEL).html(label);let gotAll=false;if(paginate){}else{}
let buttons="";if(skip!=null&&skip>0){buttons+=HU.getIconImage("fa-step-backward",[ID,this.getDomId(ID_PAGE_PREV),CLASS,"display-page-button",TITLE,"View previous"])}else if(!gotAll){buttons+=HU.getIconImage("fa-step-backward",[CLASS,"display-page-button fa-disabled"])}
if(count<max){buttons+=HU.getIconImage("fa-step-forward",[ID,this.getDomId(ID_PAGE_NEXT),CLASS,"display-page-button",TITLE,"View next"])}else if(!gotAll){buttons+=HU.getIconImage("fa-step-forward",[CLASS,"display-page-button fa-disabled"])}
this.jq(ID_PAGE_BUTTONS).html(buttons);let _this=this;this.jq(ID_PAGE_NEXT).click(()=>{if(!this.pageSkip)
this.pageSkip=0;if(paginate){this.pageSkip+=+this.getProperty("pageCount",1000);_this.haveCalledUpdateUI=false;_this.dataFilterChanged();_this.updatePaginateLabel(this.pageSkip,count,max);}else{this.pageSkip+=max;this.reloadData();}});this.jq(ID_PAGE_PREV).click(()=>{if(!this.pageSkip)
this.pageSkip=0;if(paginate){this.pageSkip-=+this.getProperty("pageCount",1000);if(this.pageSkip<0)this.pageSkip=0;_this.haveCalledUpdateUI=false;_this.updatePaginateLabel(this.pageSkip,count,max);_this.dataFilterChanged();}else{this.pageSkip-=max;if(this.pageSkip<0)this.pageSkip=0;this.reloadData();}});},pointDataLoaded:function(pointData,url,reload){let debug=displayDebug.pointDataLoaded;this.clearProgress();this.inError=false;this.clearCache();if(debug)console.log(this.type+" pointDataLoad:"+this.getId()+" "+this.type+" #records:"+pointData.getRecords().length);if(debug)
console.log("\tclearing last selected fields");let records=pointData.getRecords();this.lastSelectedFields=null;if(!reload){if(debug)console.log("\tcalling addData");this.addData(pointData);this.checkSearchBar();}else{pointData=this.convertPointData(pointData);if(!this.dataCollection)
this.dataCollection=new DataCollection();if(debug)console.log("\tcalling setData");this.dataCollection.setData(pointData);}
let paginate=this.getProperty("filterPaginate");if(this.getProperty("pageRequest")||paginate){if(debug)console.log("\tupdating pageRequest");let count;let skip;let max;if(paginate){skip=this.pageSkip||0;count=+this.getProperty("pageCount",1000);max=records.length;}else{count=records.length;let skipToks=url?url.match(/skip=([0-9]+)/):null;if(skipToks)skip=+skipToks[1];max=+this.getProperty("max",5000);}
let pageInfo=HU.span([ID,this.domId(ID_PAGE_LABEL)])+" "+
HU.span([ID,this.domId(ID_PAGE_BUTTONS)]);this.jq(ID_PAGE_COUNT).html(pageInfo);this.updatePaginateLabel(skip,count,max);}
if(url!=null){this.jsonUrl=url;}else{this.jsonUrl=null;}
if(!this.getDisplayReady()){if(debug)console.log("pointDataLoaded: display not ready");return;}
if(!this.getProperty("dateFormat")){pointData.getRecordFields().forEach(f=>{if(f.isFieldDate()&&f.getId()=="year"){this.setProperty("dateFormat","yyyy");}});}
this.haveCalledUpdateUI=false;if(debug)console.log("\tcalling updateUI");try{let requirement=this.getRequirement();if(requirement){HU.waitForIt(requirement,()=>{this.updateUI({reload:reload});});}else{this.updateUI({reload:reload});}}catch(err){this.displayError("Error creating display:<br>"+err);console.log(err);return;}
if(!reload){this.lastPointData=pointData;this.propagateEvent(DisplayEvent.pointDataLoaded,pointData);}},getHasDate:function(records){var lastDate=null;this.hasDate=false;for(j=0;j<records.length;j++){var record=records[j];var date=record.getDate();if(date==null){continue;}
if(lastDate!=null&&lastDate.getTime()!=date.getTime()){this.hasDate=true;break}
lastDate=date;}
return this.hasDate;},dateInRange:function(date,debug){if(debug){console.log("dateInRange: date:"+date+" minDate:"+this.minDateObj+" maxDate:"+this.maxDateObj);}
if(date!=null){if(this.dateRangeDoDay&&this.minDateObj){if(date.getUTCFullYear()!=this.minDateObj.getUTCFullYear()||date.getUTCMonth()!=this.minDateObj.getUTCMonth()||date.getUTCDate()!=this.minDateObj.getUTCDate()){return false;}}else{if(this.minDateObj!=null&&date.getTime()<this.minDateObj.getTime()){if(debug){console.log("    minDate:\n\t"+date.getTime()+"\n\t"+this.minDateObj.getTime());}
return false;}
if(this.maxDateObj!=null&&date.getTime()>this.maxDateObj.getTime()){if(debug){console.log("    maxDate:\n\t"+date.getTime()+"\n\t"+this.minDateObj.getTime());}
return false;}}
if(this.startDateObject!=null&&date.getTime()<this.startDateObject.getTime()){if(debug){}
return false;}
if(this.endDateObject!=null&&date.getTime()>this.endDateObject.getTime()){if(debug){console.log("    endDate:\n\t"+date.getTime()+"\n\t"+this.endDateObject.getTime());}
return false;}}
return true;},getPointData:function(){if(this.dataCollection.getList().length==0)return null;return this.dataCollection.getList()[0];},getRecords:function(){let pointData=this.getData();if(pointData==null)return null;return pointData.getRecords();},getDataValues:function(obj){if(obj.tuple)return obj.tuple;else if(obj.getData)return obj.getData();return obj;},indexToRecord:{},recordToIndex:{},findMatchingDates:function(date,records,within){if(!Utils.isDefined(within))within=0;let good=[];let millis=date.getTime();records.forEach(r=>{let rd=r.getDate();if(!rd)return;let diff=Math.abs(rd.getTime()-millis);if(diff<=within){good.push(r);}});return good;},findMatchingIndex:function(record){if(!record)return{index:-1,record:null};var index=this.recordToIndex[record.getId()];if(Utils.isDefined(index)){return{index:index,record:this.indexToRecord[index]}}
if(!record.hasDate())return-1;let records=this.filteredRecords;if(!records){records=[];for(i in this.indexToRecord){records.push(this.indexToRecord[i]);}}
var closest;var min=0;records.forEach(r=>{if(!r.hasDate()){return-1;}
var diff=Math.abs(record.getDate().getTime()-r.getDate().getTime());if(!closest){min=diff;closest=r;}else{if(diff<min){min=diff;closest=r;}}});if(!closest)
return{index:-1,record:null}
return{index:this.recordToIndex[closest.getId()],record:closest};},makeDataArray:function(dataList){if(dataList.length==0)return dataList;var data=[];if(dataList[0].getData){for(var i=0;i<dataList.length;i++){data.push(dataList[i].getData()[0]);}}else if(dataList[0].tuple){for(var i=0;i<dataList.length;i++){data.push(dataList[i].tuple);}}else{data=dataList;}
return data;},printFields:function(label,fields){console.log(label);if(!fields){console.log("   null fields");return;}
for(a in fields)
console.log("   "+fields[a].getId());},makeIndexValue:function(indexField,value,offset){return value+offset;},getStandardData:function(fields,args){if(!args)args={};let debug=displayDebug.getStandardData;if(debug)console.log("getStandardData:"+this.type+"  fields:"+fields);let showUnit=this.getProperty("showUnit",this.getProperty("showUnitInSeries",true));this.recordToIndex={};this.indexToRecord={};var pointData=this.getPointData();var excludeZero=this.getProperty(PROP_EXCLUDE_ZERO,false);var excludeNan=this.getProperty(PROP_EXCLUDE_NAN,false);if(fields==null){fields=pointData.getRecordFields();if(debug)console.log("\tgetRecordFields: "+fields.length);}else{}
props={makeObject:true,includeIndex:true,includeIndexIfDate:false,groupByIndex:-1,raw:false,};if(args!=null){$.extend(props,args);}
let groupByIndex=props.groupByIndex;let groupByList=[];let groupByValues={};let groupByRecords=[];let groupByDate=this.getProperty("groupByDate");let groupByFill=this.getProperty("groupByFill");let groupByDateMap={};let groupByDates=[];var dataList=[];var fieldNames=[];var fieldsForTuple=[];if(this.getProperty("binDate")){if(debug)
console.log("binning date");var binType=this.getProperty("binType","total");var binCount=binType=="count";if(binCount){var f=[];fields.forEach((field)=>{f.push(new RecordField({index:0,id:field.getId(),label:this.getProperty("binDateLabel",this.getProperty("binCountLabel","Count")),type:"double",chartable:true}));});fields=f;}}
let seenDate=false;fields=fields.filter(f=>{if(f.isFieldDate()){if(seenDate&&f.isRecordDate())return null;seenDate=true;}
return f;});for(i=0;i<fields.length;i++){var field=fields[i];if(field.isFieldNumeric()&&field.isFieldDate()){}
var name=field.getLabel();if(showUnit&&field.getUnit()!=null){name+=" ("+field.getUnit()+")";}
name=name.replace(/!!/g," -- ")
fieldNames.push(name);fieldsForTuple.push(field);}
if(props.makeObject){dataList.push({tuple:fieldNames,fields:fieldsForTuple,record:null});}else{dataList.push(fieldNames);}
groupByList.push("");groupByRecords.push(null);if(!this.minDateObj){this.minDateObj=Utils.parseDate(this.minDate,false);if(debug)
console.log("getStandardData setting min date:"+this.minDateObj);}
if(!this.minDateObj){this.maxDateObj=Utils.parseDate(this.maxDate,true,this.minDateObj);if(debug)
console.log("getStandardData setting max date:"+this.maxDateObj);}
if(this.minDateObj==null&&this.maxDateObj!=null){this.minDateObj=Utils.parseDate(this.minDate,false,this.maxDateObj);}
let offset=0;if(Utils.isDefined(this.offset)){offset=parseFloat(this.offset);}
let nonNullRecords=0;let records=args.records?args.records:this.filterData();if(debug)
console.log("getStandardData #fields:"+fields.length+" #records:"+records.length);let allFields=pointData.getRecordFields();this.hasDate=this.getHasDate(records);let date_formatter=null;let rowCnt=-1;let indexField=this.getFieldById(null,this.getProperty("indexField"));var t1=new Date();for(let rowIdx=0;rowIdx<records.length;rowIdx++){let record=records[rowIdx];let date=record.getDate();if(!this.dateInRange(date)){continue;}
rowCnt++;this.recordToIndex[record.getId()]=rowCnt;this.indexToRecord[rowCnt]=record;let values=[];if(props&&(props.includeIndex||props.includeIndexIfDate)){var indexName=null;if(indexField){let value=this.makeIndexValue(indexField,record.getValue(indexField.getIndex()),rowIdx);values.push(value);indexName=indexField.getLabel();}else{if(this.hasDate){let dttm=this.getDateValue(date,date_formatter);values.push(dttm);indexName="Date";}else{if(!props.includeIndexIfDate){values.push(rowIdx);indexName=this.getProperty("indexName","Index");}}}
if(indexName!=null&&rowCnt==0){fieldNames.unshift(indexName);}}
let allNull=true;let allZero=true;let hasNumber=false;let hasNan=false;for(let fieldIdx=0;fieldIdx<fields.length;fieldIdx++){let field=fields[fieldIdx];if(field.isFieldNumeric()&&field.isFieldDate()){}
var value=record.getValue(field.getIndex());if(offset!=0){value+=offset;}
if(value!=null){allNull=false;}
if(typeof value=='number'){if(excludeNan&&isNaN(value)){hasNan=true;}
hasNumber=true;if(value!=0){allZero=false;}}
if(field.isFieldDate()){value=this.getDateValue(value,date_formatter);}
values.push(value);}
if(hasNan){continue;}
if(hasNumber&&allZero&&excludeZero){continue;}
if(groupByIndex>=0){var value=record.getValue(groupByIndex);if(!groupByValues[value])groupByValues[value]=true;if(groupByDate)
groupByList.push(record.getDate()+"-"+value);else
groupByList.push(value);groupByRecords.push(record);}
if(props.makeObject)
dataList.push({tuple:values,record:record});else
dataList.push(values);if(!allNull){nonNullRecords++;}}
var t2=new Date();if(nonNullRecords==0){console.log("no nonNull records");return[];}
if(groupByIndex>=0){var groupToTuple={};var groups=[];var agg=[];var title=[];let groupByCount=this.getProperty("groupByCount");title.push(props.groupByField.getLabel());if(groupByCount){title.push(this.getProperty("groupByCountLabel","Count"));}else{for(var fieldIdx=0;fieldIdx<fields.length;fieldIdx++){var field=fields[fieldIdx];if(field.getIndex()!=groupByIndex){title.push(field.getLabel());}}}
let groupByValueTuples={};for(var rowIdx=0;rowIdx<dataList.length;rowIdx++){var data=this.getDataValues(dataList[rowIdx]);if(rowIdx==0){continue;}
var groupBy=groupByList[rowIdx];var record=groupByRecords[rowIdx];var groupByValue=record.getValue(groupByIndex);var tuple=groupToTuple[groupBy];if(tuple==null){tuple=new Array();groups.push(groupBy);if(groupByDate){let dateList=groupByDateMap[record.getDate()];if(dateList==null){groupByDateMap[record.getDate()]=dateList=[];groupByDates.push(record.getDate());}
dateList.push(tuple);}
if(!groupByValueTuples[groupByValue])groupByValueTuples[groupByValue]=[];groupByValueTuples[groupByValue].push(tuple)
tuple.record=record;agg.push(tuple);tuple.push(groupByValue);if(groupByCount){tuple.push(0);}else{for(var fieldIdx=0;fieldIdx<fields.length;fieldIdx++){var field=fields[fieldIdx];if(field.getIndex()==groupByIndex){continue;}
tuple.push(0);}}
groupToTuple[groupBy]=tuple;}
var index=0;if(groupByCount){tuple[1]++;continue;}
for(var fieldIdx=0;fieldIdx<fields.length;fieldIdx++){var field=fields[fieldIdx];if(field.getIndex()==groupByIndex){continue;}
var dataValue=data[fieldIdx];index++;if(Utils.isNumber(dataValue)){if(typeof tuple[index]=="string"){tuple[index]=0;}
tuple[index]+=parseFloat(dataValue);}else{if(tuple[index]==0){tuple[index]="";}
var s=tuple[index];if(!Utils.isDefined(s)){s="";}
if(s.length<150){if(!Utils.isDefined(dataValue)){dataValue="";}
var sv=(""+dataValue);if(s.indexOf(sv)<0){if(s!=""){s+=", ";}
s+=sv;tuple[index]=s;}}}}}
if(groupByFill){groupByDates.forEach(date=>{let dateList=groupByDateMap[date];let seen={};dateList.forEach(tuple=>{seen[tuple[0]]=true;});for(v in groupByValues){if(!seen[v]){seen[v]=true;let tuple=[v,0];tuple.date=date;agg.push(tuple);}}});}
if(this.getProperty("groupBySort")){agg.sort(function(a,b){return b[1]-a[1]});}
if(this.getProperty("groupByMaxNumber")){let cnt=+this.getProperty("groupByMaxNumber");agg=agg.filter((t,idx)=>{return idx<cnt;});}
let tmp=[];tmp.push(title);agg.forEach(t=>tmp.push(t));return tmp;}
if(this.getProperty("movingAverageSteps")){let steps=+this.getProperty("movingAverageSteps");let tmp=[dataList[i]];let isNumeric=dataList[1].tuple.map((v,idx)=>{return Utils.isNumber(v);});dataList.forEach((o,rowIdx)=>{if(rowIdx==0)return;let tuple=Utils.mergeLists(o.tuple);tmp.push({record:o.record,tuple:tuple});tuple[0]="x";tuple[1]=5;tuple.forEach((v,colIdx)=>{if(!isNumeric[colIdx])return;tuple[colIdx]=5;});});dataList=tmp;}
return dataList;},isGoogleLoaded:function(){if((typeof google==='undefined')||(typeof google.visualization==='undefined')||(typeof google.visualization.DateFormat==='undefined')){return false;}
return true;},initDateFormats:function(){if(!this.isGoogleLoaded()){return false;}
if(this.fmt_yyyy)return true;var tz=0;this.timezone=this.getProperty("timezone");if(Utils.isDefined(this.timezone)){tz=parseFloat(this.timezone);}
this.fmt_yyyymmddhhmm=new google.visualization.DateFormat({pattern:"yyyy-MM-dd HH:mm Z",timeZone:tz});this.fmt_yyyymmdd=new google.visualization.DateFormat({pattern:"yyyy-MM-dd",timeZone:tz});this.fmt_yyyy=new google.visualization.DateFormat({pattern:"yyyy",timeZone:tz});return true;},getDateValue:function(arg){if(!this.initDateFormats()){return arg;}
if(!(typeof arg=="object")){date=new Date(arg);}else{date=arg;}
if(isNaN(date.getUTCFullYear()))return{v:date,f:"NA"};if(this.getProperty("dateFormatDaysAgo",false)){let now=new Date();let diff=Math.round((now.getTime()-date.getTime())/1000/60/60/24);return{v:date,f:diff+" days ago"};}
return{v:date,f:this.formatDate(date)};},applyFilters:function(record,values){for(var i=0;i<this.filters.length;i++){if(!this.filters[i].isRecordOk(record)){return false;}}
return true;}});let filter=this.getProperty(PROP_DISPLAY_FILTER);if(filter!=null){var filters=filter.split(";");for(var i=0;i<filters.length;i++){filter=filters[i];var toks=filter.split(":");var type=toks[0];if(type=="month"){this.filters.push(new MonthFilter(toks[1]));}else{console.log("unknown filter:"+type);}}}}
function DisplayGroup(argDisplayManager,argId,argProperties,type){const LAYOUT_TABLE="table";const LAYOUT_HTABLE="htable";const LAYOUT_TABS="tabs";const LAYOUT_COLUMNS="columns";const LAYOUT_ROWS="rows";const SUPER=new RamaddaDisplay(argDisplayManager,argId,type||"group",argProperties);RamaddaUtil.inherit(this,SUPER);RamaddaUtil.defineMembers(this,{displays:[],layout:this.getProperty(PROP_LAYOUT_TYPE,LAYOUT_TABLE),columns:this.getProperty(PROP_LAYOUT_COLUMNS,1),isLayoutColumns:function(){return this.layout==LAYOUT_COLUMNS;},getWikiText:function(){var attrs=["layoutType",this.layout,"layoutColumns",this.columns,"showMenu","false","groupDiv","$entryid_maindiv"];let wiki="";wiki+="<div id=\"{{entryid}}_maindiv\"></div>\n";wiki+="{{group "+HU.attrs(attrs)+"}}\n"
return wiki;},walkTree:function(func,data){for(var i=0;i<this.displays.length;i++){let display=this.displays[i];if(display.walkTree!=null){display.walkTree(func,data);}else{func.call(data,display);}}},collectEntries:function(entries){if(entries==null)entries=[];for(let i=0;i<this.displays.length;i++){let display=this.displays[i];if(display.collectEntries!=null){display.collectEntries(entries);}else{let displayEntries=display.getEntries();if(displayEntries!=null&&displayEntries.length>0){entries.push({source:display,entries:displayEntries});}}}
return entries;},isLayoutRows:function(){return this.layout==LAYOUT_ROWS;},getPosition:function(){for(let i=0;i<this.displays.length;i++){let display=this.displays[i];if(display.getPosition){return display.getPosition();}}},getDisplays:function(){return this.displays;},notifyEvent:function(event,source,data){let displays=this.getDisplays();let group=(source!=null&&source.getProperty?source.getProperty(event+".shareGroup"):"");if(displayDebug.notifyEvent)
console.log("displayManager.notifyEvent:"+event);for(let i=0;i<this.displays.length;i++){let display=this.displays[i];if(display==source){continue;}
let acceptGroup=(display!=null&&display.getProperty?display.getProperty(event.acceptGroup):"");if(group){if(acceptGroup!=group){if(displayDebug.notifyEvent)
console.log("\t"+display.type+" not in group:"+group);continue;}}else if(acceptGroup){if(displayDebug.notifyEvent)
console.log("\t"+display.type+" incoming not in accept group:"+acceptGroup);continue;}
if(!display.acceptEvent(event,true)){if(displayDebug.notifyEvent)
console.log("\t"+display.type+" not accepting");continue;}
let eventSource=display.getEventSource();if(eventSource!=null&&eventSource.length>0){if(eventSource!=source.getId()&&eventSource!=source.getName()){continue;}}
display.notifyEvent(event,source,data);}},getDisplaysToLayout:function(){let result=[];for(let i=0;i<this.displays.length;i++){if(this.displays[i].getIsLayoutFixed()){continue;}
result.push(this.displays[i]);}
return result;},pageHasLoaded:function(display){this.doLayout();},addDisplay:function(display){this.displays.push(display);if(display.getIsLayoutFixed()){display.initDisplay();}else{if(Utils.getPageLoaded()){this.doLayout();}}},layoutChanged:function(display){this.doLayout();},removeDisplay:function(display){let index=this.displays.indexOf(display);if(index>=0){this.displays.splice(index,1);}
this.doLayout();},doLayout:function(){let html="";let colCnt=100;let displaysToLayout=this.getDisplaysToLayout();let displaysToPrepare=this.displays;displaysToPrepare.forEach(display=>{if(display.prepareToLayout!=null){display.prepareToLayout();}});let weightIdx=0;let weights=null;if(typeof this.weights!="undefined"){weights=this.weights.split(",");}
for(let i=0;i<displaysToLayout.length;i++){let divId=HU.getUniqueId("divid_");let div=HU.div([CLASS," display-wrapper",ID,divId],"");displaysToLayout[i].setProperty(PROP_DIVID,divId);displaysToLayout[i].layoutDiv=div;}
let tabId=HU.getUniqueId("tabs_");if(this.layout==LAYOUT_TABLE){if(displaysToLayout.length==1){html+=displaysToLayout[0].layoutDiv;}else{let weight=12/this.columns;let i=0;let map={};for(;i<displaysToLayout.length;i++){let d=displaysToLayout[i];if(Utils.isDefined(d.column)&&Utils.isDefined(d.row)&&d.columns>=0&&d.row>=0){let key=d.column+"_"+d.row;if(map[key]==null)map[key]=[];map[key].push(d);}}
i=0;for(;i<displaysToLayout.length;i++){colCnt++;if(colCnt>=this.columns){if(i>0){html+=HU.close(TAG_DIV);}
html+=HU.open("div",[CLASS,"row"]);colCnt=0;}
let weightToUse=weight;if(weights!=null){if(weightIdx>=weights.length){weightIdx=0;}
weightToUse=weights[weightIdx];weightIdx++;}
html+=HU.div([CLASS,"col-md-"+weightToUse+" display-wrapper display-cell"],displaysToLayout[i].layoutDiv);html+="\n";}
if(i>0){html+=HU.close(TAG_DIV);}}}else if(this.layout==LAYOUT_HTABLE){if(displaysToLayout.length==1){html+=displaysToLayout[0].layoutDiv;}else{let percent=Math.round((100/this.columns))+"%";let i=0;html+=HU.open(TABLE,[WIDTH,'100%']);let colCnt=100;for(let i=0;i<displaysToLayout.length;i++){colCnt++;if(colCnt>=this.columns){if(i>0){html+=HU.close(TAG_TR);}
html+=HU.open("tr",["valign","top"]);html+="\n";colCnt=0;}
html+=HU.td(["width",percent],displaysToLayout[i].layoutDiv);html+="\n";}
if(i>0){html+=HU.close(TAG_TR);}}}else if(this.layout==LAYOUT_TABS){html+=HU.open(TAG_DIV,[ID,tabId,CLASS,"ui-tabs"]);html+=HU.open(TAG_UL,[]);let hidden="";let cnt=0;for(let i=0;i<displaysToLayout.length;i++){let display=displaysToLayout[i];let label=display.getTitle(false);if(label.length>20){label=label.substring(0,19)+"...";}
html+=HU.tag(TAG_LI,[],HU.tag(TAG_A,["href","#"+tabId+"-"+cnt],label));hidden+=HU.div([ID,tabId+"-"+cnt,CLASS,"ui-tabs-hide"],display.layoutDiv);cnt++;}
html+=HU.close(TAG_UL);html+=hidden;html+=HU.close(TAG_DIV);}else if(this.layout==LAYOUT_ROWS){let rows=[];for(let i=0;i<displaysToLayout.length;i++){let display=displaysToLayout[i];let row=display.getRow();if((""+row).length==0)row=0;while(rows.length<=row){rows.push([]);}
rows[row].push(display.layoutDiv);}
for(let i=0;i<rows.length;i++){let cols=rows[i];let width=Math.round(100/cols.length)+"%";html+=HU.open(TAG_TABLE,["border","0","width","100%","cellpadding","0","cellspacing","0"]);html+=HU.open(TAG_TR,["valign","top"]);for(let col=0;col<cols.length;col++){let cell=cols[col];cell=HU.div([CLASS,"display-cell"],cell);html+=HU.tag(TAG_TD,["width",width],cell);}
html+=HU.close(TAG_TR);html+=HU.close(TAG_TABLE);}}else if(this.layout==LAYOUT_COLUMNS){let cols=[];for(let i=0;i<displaysToLayout.length;i++){let display=displaysToLayout[i];let column=display.getColumn();if((""+column).length==0)column=0;while(cols.length<=column){cols.push([]);}
cols[column].push(display.layoutDiv);}
html+=HU.open(TAG_DIV,[CLASS,"row"]);let width=Math.round(100/cols.length)+"%";let weight=12/cols.length;for(let i=0;i<cols.length;i++){let rows=cols[i];let contents="";for(let j=0;j<rows.length;j++){contents+=rows[j];}
let weightToUse=weight;if(weights!=null){if(weightIdx>=weights.length){weightIdx=0;}
weightToUse=weights[weightIdx];weightIdx++;}
html+=HU.div([CLASS,"col-md-"+weightToUse],contents);}
html+=HU.close(TAG_DIV);}else{html+="Unknown layout:"+this.layout;}
if(!this.getShowMenu()&&displaysToLayout.length==0){}else{$("#"+this.getId()).show();}
let div=this.getGroupDiv();if(div.length>0){div.html(html);}else{this.writeHtml(ID_DISPLAYS,html);}
if(this.layout==LAYOUT_TABS){$("#"+tabId).tabs({activate:HtmlUtil.tabLoaded});}
this.initDisplays();},initDisplays:function(){this.getDisplaysToLayout().forEach(display=>{try{display.initDisplay();}catch(e){display.displayError("Error creating display:<br>"+e);console.log("error creating display: "+display.type);console.log(e.stack)}});},displayData:function(){},setLayout:function(layout,columns){this.layout=layout;if(columns){this.columns=columns;}
this.doLayout();},askMinZAxis:function(){let v=prompt("Minimum axis value","0");if(v!=null){v=parseFloat(v);for(let i=0;i<this.displays.length;i++){let display=this.displays[i];if(display.setMinZAxis){display.setMinZAxis(v);}}}},askMaxZAxis:function(){let v=prompt("Maximum axis value","0");if(v!=null){v=parseFloat(v);for(let i=0;i<this.displays.length;i++){let display=this.displays[i];if(display.setMaxZAxis){display.setMaxZAxis(v);}}}},askMinDate:function(){let d=this.minDate;if(!d)d="1950-0-0";this.minDate=prompt("Minimum date",d);if(this.minDate!=null){for(let i=0;i<this.displays.length;i++){let display=this.displays[i];if(display.setMinDate){display.setMinDate(this.minDate);}}}},askMaxDate:function(){let d=this.maxDate;if(!d)d="2020-0-0";this.maxDate=prompt("Maximum date",d);if(this.maxDate!=null){for(let i=0;i<this.displays.length;i++){let display=this.displays[i];if(display.setMaxDate){display.setMaxDate(this.maxDate);}}}},titlesOff:function(){for(let i=0;i<this.displays.length;i++){this.displays[i].setShowTitle(false);}},titlesOn:function(){for(let i=0;i<this.displays.length;i++){this.displays[i].setShowTitle(true);}},detailsOff:function(){for(let i=0;i<this.displays.length;i++){this.displays[i].setShowDetails(false);}
this.doLayout();},detailsOn:function(){for(let i=0;i<this.displays.length;i++){this.displays[i].setShowDetails(true);}
this.doLayout();},deleteAllDisplays:function(){this.displays=[];this.doLayout();},moveDisplayUp:function(display){let index=this.displays.indexOf(display);if(index<=0){return;}
this.displays.splice(index,1);this.displays.splice(index-1,0,display);this.doLayout();},moveDisplayDown:function(display){let index=this.displays.indexOf(display);if(index>=this.displays.length){return;}
this.displays.splice(index,1);this.displays.splice(index+1,0,display);this.doLayout();},moveDisplayTop:function(display){let index=this.displays.indexOf(display);if(index>=this.displays.length){return;}
this.displays.splice(index,1);this.displays.splice(0,0,display);this.doLayout();},});}
function RamaddaFieldsDisplay(displayManager,id,type,properties){const SUPER=new RamaddaDisplay(displayManager,id,type,properties);defineDisplay(this,SUPER,[],{needsData:function(){return true;},initDisplay:function(){SUPER.initDisplay.call(this);if(this.needsData()){if(this.useDisplayMessage()){this.setDisplayMessage(this.getLoadingMessage());}else{this.setContents(this.getLoadingMessage());}}
this.callUpdateUI();},updateUI:function(args){this.addFieldsCheckboxes();},getWikiAttributes:function(attrs){SUPER.getWikiAttributes.call(this,attrs);if(this.lastSelectedFields){attrs.push(PROP_FIELDS);var v="";for(var i=0;i<this.lastSelectedFields.length;i++){v+=this.lastSelectedFields[i].getId();v+=",";}
attrs.push(v);}},initDialog:function(){SUPER.initDialog.call(this);this.addFieldsCheckboxes();},getDialogContents:function(tabTitles,tabContents){var height="600";SUPER.getDialogContents.call(this,tabTitles,tabContents);},handleEventFieldsSelected:function(source,fields){if(fields.length>0&&(typeof fields[0]=="string")){var tmp=[];fields.forEach(f=>{f=this.getFieldById(null,f);if(f)tmp.push(f);});fields=tmp;}
this.userHasSelectedAField=true;this.overrideFields=null;this.removeProperty(PROP_FIELDS);this.setSelectedFields(fields);this.fieldSelectionChanged();},getFieldsToSelect:function(pointData){return pointData.getRecordFields();},canDoMultiFields:function(){return true;}})}
const PROP_LAYOUT_TYPE="layoutType";const PROP_LAYOUT_COLUMNS="layoutColumns";const PROP_SHOW_MAP="showMap";const PROP_SHOW_MENU="showMenu";const PROP_FROMDATE="fromDate";const PROP_TODATE="toDate";const DISPLAY_MULTI="multi";function addDisplayManager(displayManager){if(window.globalDisplayManagers==null){window.globalDisplayManagers={};}
window.globalDisplayManagers[displayManager.getId()]=displayManager;window.globalDisplayManager=displayManager;}
addGlobalDisplayType({type:DISPLAY_MULTI,label:"Multi Chart",requiresData:true,forUser:false,category:"Misc"});function getOrCreateDisplayManager(id,properties,force){if(!force){var displayManager=getDisplayManager(id);if(displayManager!=null){return displayManager;}
if(window.globalDisplayManager!=null){return window.globalDisplayManager;}}
var displayManager=new DisplayManager(id,properties);if(window.globalDisplayManager==null){window.globalDisplayManager=displayManager;}
return displayManager;}
function getDisplayManager(id){if(window.globalDisplayManagers==null){return null;}
var manager=window.globalDisplayManagers[id];return manager;}
var ID_DISPLAYS="displays";function DisplayManager(argId,argProperties){var ID_MENU_BUTTON="menu_button";var ID_MENU_CONTAINER="menu_container";var ID_MENU_OUTER="menu_outer";var ID_MENU_INNER="menu_inner";RamaddaUtil.inherit(this,this.SUPER=new DisplayThing(argId,argProperties));addRamaddaDisplay(this);RamaddaUtil.initMembers(this,{dataList:[],displayTypes:[],initMapBounds:null,});RamaddaUtil.defineMembers(this,{group:new DisplayGroup(this,argId,argProperties),showmap:this.getProperty(PROP_SHOW_MAP,null),setDisplayReady:function(){SUPER.setDisplayReadyCall(this);this.getLayoutManager().setDisplayReady();},getLayoutManager:function(){return this.group;},collectEntries:function(){var entries=this.getLayoutManager().collectEntries();return entries;},getData:function(){return this.dataList;},handleEventFieldValueSelect:function(source,args){this.notifyEvent(DisplayEvent.fieldValueSelected,source,args);},handleEventFieldsSelected:function(source,fields){this.notifyEvent(DisplayEvent.fieldsSelected,source,fields);},handleEventPropertyChanged:function(source,prop){this.notifyEvent(DisplayEvent.propertyChanged,source,prop);},handleEventEntriesChanged:function(source,entries){this.notifyEvent(DisplayEvent.entriesChanged,source,entries);},handleEventMapBoundsChanged:function(source,bounds,forceSet){var args={"bounds":bounds,"force":forceSet};this.notifyEvent(DisplayEvent.mapBoundsChanged,source,args);},addMapLayer:function(source,entry){this.notifyEvent("addMapLayer",source,{entry:entry});},propagateEventRecordSelection:function(source,pointData,args){var index=args.index;if(pointData==null&&this.dataList.length>0){pointData=this.dataList[0];}
var fields=pointData.getRecordFields();var records=pointData.getRecords();if(records==null){return;}
if(index<0||index>=records.length){console.log("propagateEventRecordSelection: bad index= "+index);return;}
var record=records[index];if(record==null)return;var values=source?source.getRecordHtml(record,fields):"";if(source.recordSelectionCallback){var func=source.recordSelectionCallback;if((typeof func)=="string"){func=window[func];}
func({display:source,pointData:pointData,index:index,pointRecord:record});}
var params={index:index,record:record,html:values,data:pointData};this.notifyEvent(DisplayEvent.recordSelection,source,params);var entries=source.getEntries();if(entries!=null&&entries.length>0){this.handleEventEntrySelection(source,{entry:entries[0],selected:true});}},handleEventEntrySelection:function(source,props){this.notifyEvent(DisplayEvent.entrySelection,source,props);},handleEventEntryMouseover:function(source,props){this.notifyEvent(DisplayEvent.entryMouseover,source,props);},handleEventEntryMouseout:function(source,props){this.notifyEvent(DisplayEvent.entryMouseout,source,props);},handleEventPointDataLoaded:function(source,pointData){this.notifyEvent(DisplayEvent.pointDataLoaded,source,pointData);},ranges:{},setRange:function(field,range){if(this.ranges[field.getId()]==null){this.ranges[field.getId()]=range;}},getRange:function(field){return this.ranges[field.getId()];},makeMainMenu:function(){if(!this.getShowMenu()){return"";}
var get="getDisplayManager('"+this.getId()+"')";var layout="getDisplayManager('"+this.getId()+"').getLayoutManager()";var html="";var newMenus={};var cats=[];var displayTypes=[];if(window.globalDisplayTypes!=null){displayTypes=window.globalDisplayTypes;}
DISPLAY_CATEGORIES.forEach(category=>{newMenus[category]=[];cats.push(category);});for(var i=0;i<displayTypes.length;i++){var type=displayTypes[i];if(Utils.isDefined(type.forUser)&&!type.forUser){continue;}
var category=type.category;if(!category){category=CATEGORY_MISC;}
if(newMenus[category]==null){newMenus[category]=[];cats.push(category);}
let menuAttrs=["onclick",get+".userCreateDisplay('"+type.type+"');"];if(type.desc){menuAttrs.push(TITLE);menuAttrs.push(type.desc);}
newMenus[category].push(HU.tag(TAG_LI,[],HU.tag(TAG_A,menuAttrs,type.label)));}
let newMenu="";for(var i=0;i<cats.length;i++){var cat=cats[i];var menu=Utils.join(newMenus[cat],"");var subMenu=HU.tag("ul",[],menu);var catLabel=HU.tag(TAG_A,[],cat);newMenu+=HU.tag(TAG_LI,[],catLabel+subMenu);}
var publishMenu=HU.tag(TAG_LI,[],HU.onClick(layout+".publish('media_photoalbum');","New Photo Album"))+"\n"+
HU.tag(TAG_LI,[],HU.onClick(layout+".publish('wikipage');","New Wiki Page"))+"\n"+
HU.tag(TAG_LI,[],HU.onClick(layout+".publish('blogentry');","New Blog Post"))+"\n";var fileMenu=HU.tag(TAG_LI,[],"<a>Publish</a>"+HU.tag("ul",[],publishMenu))+"\n"+
HU.tag(TAG_LI,[],HU.onClick(layout+".showWikiText();","Show Text"))+"\n"+
HU.tag(TAG_LI,[],HU.onClick(layout+".copyWikiText();","Copy Text"))+"\n"+
HU.tag(TAG_LI,[],HU.onClick(layout+".copyDisplayedEntries();","Save entries"))+"\n";var titles=HU.tag(TAG_DIV,["class","ramadda-menu-block"],"Titles: "+HU.onClick(layout+".titlesOn();","On")+"/"+HU.onClick(layout+".titlesOff();","Off"));var dates=HU.tag(TAG_DIV,["class","ramadda-menu-block"],"Set date range: "+
HU.onClick(layout+".askMinDate();","Min")+"/"+
HU.onClick(layout+".askMaxDate();","Max"));var editMenu=HU.tag(TAG_LI,[],HU.tag(TAG_DIV,["class","ramadda-menu-block"],"Set axis range :"+
HU.onClick(layout+".askMinZAxis();","Min")+"/"+
HU.onClick(layout+".askMaxZAxis();","Max")))+
HU.tag(TAG_LI,[],dates)+
HU.tag(TAG_LI,[],titles)+"\n"+
HU.tag(TAG_LI,[],HU.tag(TAG_DIV,["class","ramadda-menu-block"],"Details: "+HU.onClick(layout+".detailsOn();","On",[])+"/"+
HU.onClick(layout+".detailsOff();","Off",[])))+
HU.tag(TAG_LI,[],HU.onClick(layout+".deleteAllDisplays();","Delete all displays"))+"\n"+
"";var table=HU.tag(TAG_DIV,["class","ramadda-menu-block"],"Table: "+
HU.onClick(layout+".setLayout('table',1);","1 column")+" / "+
HU.onClick(layout+".setLayout('table',2);","2 column")+" / "+
HU.onClick(layout+".setLayout('table',3);","3 column")+" / "+
HU.onClick(layout+".setLayout('table',4);","4 column"));var layoutMenu=HU.tag(TAG_LI,[],table)+
HU.tag(TAG_LI,[],HU.onClick(layout+".setLayout('rows');","Rows"))+"\n"+
HU.tag(TAG_LI,[],HU.onClick(layout+".setLayout('columns');","Columns"))+"\n"+
HU.tag(TAG_LI,[],HU.onClick(layout+".setLayout('tabs');","Tabs"));var menuBar=HU.tag(TAG_LI,[],"<a>File</a>"+HU.tag("ul",[],fileMenu));menuBar+=HU.tag(TAG_LI,[],"<a>Edit</a>"+HU.tag("ul",[],editMenu))+
HU.tag(TAG_LI,[],"<a>New</a>"+HU.tag("ul",[],newMenu))+
HU.tag(TAG_LI,[],"<a>Layout</a>"+HU.tag("ul",[],layoutMenu));var menu=HU.div([STYLE,"background:#fff;z-index:1000;",ATTR_CLASS,"xramadda-popup",ATTR_ID,this.getDomId(ID_MENU_OUTER)],HU.tag("ul",[ATTR_ID,this.getDomId(ID_MENU_INNER),ATTR_CLASS,"sf-menu"],menuBar));html+=menu;return html;},hasGeoMacro:function(jsonUrl){if(!jsonUrl)return false;return jsonUrl.match(/(\${latitude})/g)!=null;},getJsonUrl:function(jsonUrl,display,props){display.getRequestMacros().forEach(m=>{jsonUrl=m.apply(jsonUrl);});if(display.getAnimationEnabled()){}
if(display.getProperty('dbSelect')){jsonUrl+="&"+"dbSelect"+"="+display.getProperty("select");}
if(display.getProperty("requestArgs")){let args=display.getProperty("requestArgs").split(",");for(let i=0;i<args.length;i+=2){jsonUrl+="&"+args[i]+"="+args[i+1];}}
if(display.pageSkip){jsonUrl+="&skip="+display.pageSkip;}
var fromDate=display.getProperty(PROP_FROMDATE);if(fromDate!=null){jsonUrl+="&fromdate="+fromDate;}
var toDate=display.getProperty(PROP_TODATE);if(toDate!=null){jsonUrl+="&todate="+toDate;}
if(this.hasGeoMacro(jsonUrl)){var lon=props.lon;var lat=props.lat;if((lon==null||lat==null)&&this.map!=null){var tuple=this.getPosition();if(tuple!=null){lat=tuple[0];lon=tuple[1];}}
if(lon!=null&&lat!=null){jsonUrl=jsonUrl.replace("${latitude}",lat.toString());jsonUrl=jsonUrl.replace("${longitude}",lon.toString());}}
jsonUrl=jsonUrl.replace("${numpoints}",1000);return jsonUrl;},getDefaultData:function(){for(var i in this.dataList){var data=this.dataList[i];var records=data.getRecords();if(records!=null){return data;}}
if(this.dataList.length>0){return this.dataList[0];}
return null;},writeDisplay:function(){if(this.originalLocation==null){this.originalLocation=document.location;}
var url=this.originalLocation+"#";url+="&display0=linechart";for(var attr in document){}
document.location=url;},userCreateDisplay:function(type,props){if(props==null){props={};}
props.editMode=true;props.layoutHere=false;if(type==DISPLAY_LABEL&&props.text==null){var text=prompt("Text");if(text==null)return;props.text=text;}
return this.createDisplay(type,props);},createDisplay:function(type,props){if(props==null){props={};}
if(props.data!=null){props.theData=props.data;props.data=null;}
if(props.theData!=null&&!props.theData.hasData()){let haveItAlready=false;for(var i=0;i<this.dataList.length;i++){let existingData=this.dataList[i];if(existingData.equals(props.theData)){props.theData=existingData;haveItAlready=true;break;}}
if(!haveItAlready){this.dataList.push(props.theData);}
}
if(type==null||type.trim().length==0)return null;var proc=type.substring(0,1).toUpperCase()+type.substring(1);var classname=null;var names=["Ramadda"+proc+"Display",proc+"Display","Display"+proc,proc];var func=null;var funcName=null;var msg="";for(var i=0;i<names.length;i++){msg+=("trying:"+names[i]+"\n");if(window[names[i]]!=null){funcName=names[i];func=window[names[i]];break;}}
if(func==null){console.log("Error: could not find display function:"+type);alert("Error: could not find display function:"+type+" msg: "+msg);return;}
let displayId=props.displayId;if(!displayId)
displayId=this.getUniqueId("display");if(props.theData==null&&this.dataList.length>0){props.theData=this.dataList[0];}
props.createdInteractively=true;if(!props.entryId){props.entryId=this.group.entryId;}
let display=eval(" new "+funcName+"(this,'"+displayId+"', props);");if(display==null){console.log("Error: could not create display using:"+funcName);alert("Error: could not create display using:"+funcName);return;}
if(props.dummy)return display;this.addDisplay(display);display.doFinalInitialization();return display;},pageHasLoaded:function(display){this.getLayoutManager().pageHasLoaded();},addDisplay:function(display){display.setDisplayManager(this);display.loadInitialData();this.getLayoutManager().addDisplay(display);},getDisplays:function(){return this.getLayoutManager().getDisplays();},notifyEvent:function(event,source,data){this.getLayoutManager().notifyEvent(event,source,data);},removeDisplay:function(display){this.getLayoutManager().removeDisplay(display);this.notifyEvent(DisplayEvent.removeDisplay,this,display);},setEntry:function(entry){this.getLayoutManager().getDisplays().forEach(display=>{display.setEntry(entry);});},});addDisplayManager(this);let displaysHtml=HU.div([ATTR_ID,this.getDomId(ID_DISPLAYS),ATTR_CLASS,"display-container",STYLE,HU.css("display","block")]);let html=HU.openTag(TAG_DIV,["style","position:relative;"]);html+=HU.div(["id",this.getDomId(ID_MENU_CONTAINER)]);html+=this.getEntriesMenu(argProperties);if(this.getShowMenu()){html+=HU.tag(TAG_A,[ATTR_CLASS,"display-menu-button",ATTR_ID,this.getDomId(ID_MENU_BUTTON)],SPACE);}
let targetDiv=this.getProperty("target",this.getProperty("targetDiv"));let _this=this;if(targetDiv!=null){if($("#"+targetDiv).length==0){console.log("Error: display group could not find targetDiv:"+targetDiv);targetDiv=null;}}
if(targetDiv!=null){$(document).ready(function(){$("#"+targetDiv).html(displaysHtml);_this.getLayoutManager().doLayout();});}else{html+=displaysHtml;}
html+=HU.closeTag(TAG_DIV);let divid=this.getProperty("divId",this.getId());$("#"+divid).html(html)
this.initializeEntriesMenu();this.jq(ID_MENU_BUTTON).html(HU.getIconImage("fa-cog",[TITLE,"Display menu"])).button({classes:{"ui-button":"display-manager-button",}}).click(function(event){if(this.dialog){this.dialog.remove();}
let html=_this.makeMainMenu();this.dialog=HU.makeDialog({content:html,title:"Displays",my:"left top",at:"left bottom",anchor:_this.jq(ID_MENU_BUTTON)});_this.jq(ID_MENU_INNER).superfish({speed:'fast',delay:300});});}
function RamaddaMultiDisplay(displayManager,id,properties){this.props=properties;let SUPER=new DisplayGroup(displayManager,id,properties,DISPLAY_MULTI);RamaddaUtil.inherit(this,SUPER);addRamaddaDisplay(this);RamaddaUtil.defineMembers(this,{inInitDisplay:false,haveInited:false,needsData:function(){return true;},pointDataLoaded:function(pointData,url,reload){SUPER.pointDataLoaded.call(this,pointData,url,reload);this.initDisplay();},processMacros:function(selectedFields,value,makeList){if((typeof value)!="string")return null;var toks=[];if(value.includes("${fieldLabel}")){for(i=0;i<selectedFields.length;i++){var v=value.replace("\${fieldLabel}",selectedFields[i].getLabel());toks.push(v);}}else if(value.includes("${fieldId}")){for(i=0;i<selectedFields.length;i++){var v=value.replace("\${fieldId}",selectedFields[i].getId());toks.push(v);}}else if(value.includes("${fieldCnt}")){var v=value.replace("\${fieldCnt}",selectedFields.length);toks.push(v);}else if(value.includes("${")){}else{return null;}
if(makeList)return toks;return Utils.join(toks,",");},initDisplay:function(){try{this.initDisplayInner();}catch(e){this.setContents(this.getMessage("An error occurred:"+e));console.log("An error occurred:"+e);console.log(e.stack);}},useChartableFields:function(){return false;},initDisplayInner:function(){SUPER.initDisplay.call(this);let records=this.filterData();if(!records){this.setDisplayMessage(this.getLoadingMessage());return null;}
var allFields=this.getData().getRecordFields();var fields=this.getSelectedFields(allFields);if(fields.length==0){this.setContents(this.getMessage("no fields"));return;}
if(this.inInitDisplay)return;if(this.haveInited)return;this.haveInited=true;this.inInitDisplay=true;var props={};var foreachMap={};var foreachList=[];var cnt=0;for(a in this.props){if(a.startsWith("foreach_")){var value=this.props[a];var toks;var tmp=this.processMacros(fields,value,true);if(tmp){toks=tmp;}else{toks=value.split(",");}
a=a.substring(8);if(toks.length>cnt)cnt=toks.length;foreachMap[a]=toks;foreachList.push({attr:a,toks:toks});}
if(a.startsWith("sub_")){var value=this.props[a];a=a.substring(4);var tmp=this.processMacros(fields,value,false);if(tmp){value=tmp;}
props[a]=value;}}
var html=HU.div([ATTR_ID,this.getDomId(ID_DISPLAYS),ATTR_CLASS,"display-container"]);this.setContents(html);var groupProps={target:this.getDomId(ID_DISPLAYS),}
groupProps[PROP_LAYOUT_TYPE]='table';groupProps[PROP_LAYOUT_COLUMNS]=this.getProperty(PROP_LAYOUT_COLUMNS,"2");this.displayManager=new DisplayManager(this.getId()+"_manager",groupProps);props.layoutHere=false;if(this.props['data'])
props['data']=this.props['data'];var subType=this.getProperty("subType","table");if(cnt==0)cnt=1;for(var i=0;i<cnt;i++){var dprops={};$.extend(dprops,props);for(var j=0;j<foreachList.length;j++){if(i<foreachList[j].toks.length){dprops[foreachList[j].attr]=foreachList[j].toks[i];}}
if(dprops['fields'])dprops['fields']=dprops['fields'].split(",");this.displayManager.createDisplay(subType,dprops);}
this.inInitDisplay=false;}});}
const FILTER_ALL="-all-";let pointDataCache={};function DataCollection(){RamaddaUtil.defineMembers(this,{data:[],hasData:function(){for(var i=0;i<this.data.length;i++){if(this.data[i])
if(this.data[i].hasData())return true;}
return false;},getList:function(){return this.data;},setData:function(data){this.data=[data];},addData:function(data){this.data.push(data);},handleEventMapClick:function(myDisplay,source,lon,lat){var anyHandled=false;for(var i=0;i<this.data.length;i++){if(this.data[i].handleEventMapClick(myDisplay,source,lon,lat)){anyHandled=true;}}
return anyHandled;},});}
function BasePointData(name,properties){if(properties==null)properties={};RamaddaUtil.defineMembers(this,{recordFields:null,records:null,entryId:null,entry:null});$.extend(this,properties);RamaddaUtil.defineMembers(this,{name:name,properties:properties,initWith:function(thatPointData){this.recordFields=thatPointData.recordFields;this.records=thatPointData.records;this.setGroupField();return this;},handleEventMapClick:function(myDisplay,source,lon,lat){return false;},hasData:function(){return this.records!=null&&this.records.length>0;},clear:function(){this.records=null;this.recordFields=null;},getProperties:function(){return this.properties;},getProperty:function(key,dflt){var value=this.properties[key];if(value==null)return dflt;return value;},getRecordFields:function(){return this.recordFields;},addRecordField:function(field){this.recordFields.push(field);},getRecords:function(){return this.records;},getNumericFields:function(){var recordFields=this.getRecordFields();var numericFields=[];for(var i=0;i<recordFields.length;i++){var field=recordFields[i];if(field.isNumeric())numericFields.push(field);}
return numericFields;},getChartableFields:function(display){var recordFields=this.getRecordFields();var numericFields=[];var skip=/(TIME|HOUR|MINUTE|SECOND|YEAR|MONTH|DAY|LATITUDE|LONGITUDE|^ELEVATION$)/g;var skip=/(xxxnoskip)/g;for(var i=0;i<recordFields.length;i++){var field=recordFields[i];if(!field.isNumeric()||!field.isChartable()){continue;}
var ID=field.getId().toUpperCase();if(ID.match(skip)){continue;}
numericFields.push(field);}
return RecordUtil.sort(numericFields);},getNonGeoFields:function(display){var recordFields=this.getRecordFields();var numericFields=[];var hadDate=false;for(var i=0;i<recordFields.length;i++){var field=recordFields[i];if(field.isFieldGeo()){continue;}
if(field.isFieldDate()){if(hadDate&&field.getId()=="recordDate"){continue;}
hadDate=true;}
numericFields.push(field);}
return numericFields;},loadData:function(display){},getName:function(){return this.name;},getTitle:function(){if(this.records!=null&&this.records.length>0)
return this.name+" - "+this.records.length+" points";return this.name;}});}
function convertToPointData(array){var fields=[];var records=[];var header=array[0];var samples=array[1];for(var i=0;i<header.length;i++){let label=String(header[i]);let id=label.toLowerCase().replace(/[ ., ]+/g,"_");let sample=samples[i];let tof=typeof sample;let type;if(tof=="string")
type="string";else if(tof=="number")
type="double";else if(sample.getTime)
type="date";else
console.log("Unknown type:"+tof);fields.push(new RecordField({id:id,index:i,label:label,type:type,chartable:true}));}
for(var i=1;i<array.length;i++){records.push(new PointRecord(fields,NaN,NaN,NaN,null,array[i]));}
return new PointData("pointdata",fields,records,null,null);}
function PointData(name,recordFields,records,url,properties){RamaddaUtil.inherit(this,new BasePointData(name,properties));this.parentPointData=properties?properties.parent:null;RamaddaUtil.defineMembers(this,{recordFields:recordFields,records:records,url:url,baseUrl:url,loadingCnt:0,getRootPointData:function(){if(this.parentPointData)
return this.parentPointData.getRootPointData();return this;},getUrl:function(){if(this.url)return this.url;if(this.parentPointData)return this.parentPointData.getUrl();return null;},getCacheUrl:function(){if(this.baseUrl)return this.baseUrl;if(this.parentPointData)return this.parentPointData.getCacheUrl();return null;},equals:function(that){if(this.jsonUrl){return this.jsonUrl==that.jsonUrl;}
return this.url==that.url;},getIsLoading:function(){return this.loadingCnt>0;},handleEventMapClick:function(myDisplay,source,lon,lat){let url=this.getUrl();let cacheObject=pointDataCache[url];this.lon=lon;this.lat=lat;if(myDisplay.getDisplayManager().hasGeoMacro(url)){this.loadData(myDisplay,true);return true;}
return false;},startLoading:function(){this.loadingCnt++;},stopLoading:function(){this.loadingCnt--;},setGroupField:function(){if(this.recordFields){for(var i=0;i<this.recordFields.length;i++){var field=this.recordFields[i];if(field.isFieldGroup()){this.groupField=field;break;}}}},extractGroup:function(group,records){if(!this.groupField)return records;var groupData=this.getDataGroups(records);if(groupData.length==0)return records;if(!group)group=groupData[0];return records;},getDataGroups:function(records){if(!this.groupData){if(!records)return[];this.groupData=[];var groupField=this.getGroupField();if(!groupField)return this.groupData;var seen={};for(var i=0;i<records.length;i++){var record=records[i];var data;if(record.tuple)
data=record.tuple;else if(record.record)
data=record.record.getData();console.log("data:"+data);var value=groupField.getValue(record);if(!seen[value]){seen[value]=true;this.groupData.push(value);}}}
console.log(this.groupData);return this.groupData;},getGroupField:function(){return this.groupField;},isGroup:function(){return this.getGroupField()!=null;},loadData:function(display,reload){let root=this.getRootPointData();if(root.url==null){console.log("No URL");return;}
let props={lat:this.lat,lon:this.lon,};let jsonUrl=display.displayManager.getJsonUrl(root.url,display,props);root.jsonUrl=jsonUrl;root.loadPointJson(jsonUrl,display,reload);},getCacheObject:function(){let cacheObject=pointDataCache[this.getUrl()];if(!cacheObject){let cacheUrl=this.getCacheUrl();if(cacheUrl)cacheObject=pointDataCache[cacheUrl];}
return cacheObject;},propagateEventDataChanged:function(source){let cacheObject=this.getCacheObject();if(cacheObject){let displays=cacheObject.displays;if(displays){displays.forEach(display=>{if(display==source)return;display.pointDataLoaded(this,this.url,true);});}}},loadPointJson:function(url,display,reload){let debug=displayDebug.loadPointJson;let debug2=false;let pointData=this;this.startLoading();let _this=this;if(debug){console.log("loadPointJson: "+display.type+" "+display.getId()+" url:"+url);}
let cacheId=this.getCacheUrl();let cacheObject=pointDataCache[cacheId];if(cacheObject==null){cacheObject={pointData:null,pending:[],displays:[],size:0,url:url,toString:function(){return"cache:"+(this.pointData==null?" no data ":" data:"+this.pointData.pdcnt+" "+this.pointData.getRecords().length)+" url:"+this.url;}};if(debug)
console.log("\tcreated cache object: "+cacheId);pointDataCache[cacheId]=cacheObject;}else{if(cacheObject.pending.indexOf(display)>=0){if(debug)
console.log("\tcache hit - display in pending list");return;}else{if(debug)
console.log("\tcache hit - display not in pending list");}}
if(cacheObject.displays.indexOf(display)<0){if(debug2)
console.log("adding to displays-1:"+display);cacheObject.displays.push(display);}
if(reload){cacheObject.pointData=null;cacheObject.pending=[];if(debug)
console.log("\treloading adding to pending:"+cacheObject.displays);cacheObject.displays.forEach(d=>{if(debug)
console.log("\tdisplay:"+d.type+" "+d.getId());cacheObject.pending.push(d);});}else{if(cacheObject.displays.indexOf(display)<0){if(debug2)
console.log("adding to displays-2:"+display);cacheObject.displays.push(display);}
if(cacheObject.pointData!=null){if(debug)
console.log("\tdata was in cache:"+cacheObject.pointData.getRecords().length+" url:"+url);display.pointDataLoaded(cacheObject.pointData,url,reload);return;}
cacheObject.pending.push(display);if(cacheObject.pending.length>1){if(debug)
console.log("\tWaiting on callback:"+cacheObject.pending.length+" "+url+" d:"+display);return;}}
let fail=function(jqxhr,textStatus,error){console.log("Point data load error:"+textStatus+" "+error);var err=textStatus;if(err){if(error)
err+=": "+error;}else{err=error;}
console.log("Point data load error:"+(err?err:""));cacheObject.pending.map(display=>{display.pointDataLoadFailed(err);});delete pointDataCache[url];pointData.stopLoading();}
let success=function(data){if(typeof data=="string"){try{data=JSON.parse(data);}catch(exc){console.log("Error:"+exc);if(data.length>1000)data=data.substring(0,999);console.log("data:"+data);display.displayError("Error loading data:"+exc+"<br>URL:"+url);return;}}
if(debug)console.log("pointDataLoaded");if(GuiUtils.isJsonError(data)){if(debug)
console.log("\tloadPointData failed");console.log("loadPointData failed:"+data);display.pointDataLoadFailed(data);return;}
if(data.errorcode=="nodata"||!data.fields){if(debug)
console.log("\tno data:"+url);let dummy=new PointData("",[],[]);let pending=cacheObject.pending;cacheObject.pending=[];pending.forEach(d=>{d.handleNoData(dummy);});return;}
if(debug)
console.log("\tmaking point data");let t1=new Date();var newData=makePointData(data,_this.derived,display,_this.url);let t2=new Date();if(debug)
Utils.displayTimes("makePointData",[t1,t2],true);if(debug)
console.log("\tdone making point data #records:"+newData.getRecords().length);pointData=cacheObject.pointData=newData;if(data.properties){display.applyRequestProperties(data.properties);}
let tmp=cacheObject.pending;if(debug){console.log("\tcalling pointDataLoaded on  "+tmp.length+" pending displays");if(cacheObject.displays)
console.log("\tcacheObject.displays:"+cacheObject.displays.length)}
cacheObject.pending=[];for(let i=0;i<tmp.length;i++){if(debug)
console.log("\tcalling pointDataLoaded:"+tmp[i]+" #:"+pointData.getRecords().length);tmp[i].pointDataLoaded(pointData,url,reload);}
if(cacheObject.pointData.records&&cacheObject.pointData.records.length){cacheObject.size=cacheObject.pointData.records.length*cacheObject.pointData.records[0].getData().length;}
let size=0;Object.keys(pointDataCache).map(key=>{size+=pointDataCache[key].size;});if(debug)
console.log("\tcache size:"+size);if(size>1000000){Object.keys(pointDataCache).map(key=>{if(pointDataCache[key].pending.length==0){if(debug)
console.log("\tDeleting from cache:"+key);delete pointDataCache[key];}});}
pointData.stopLoading();}
let fullUrl=url;if(!fullUrl.startsWith("http")){var base=window.location.protocol+"//"+window.location.host;fullUrl=base+fullUrl;}
if(!url.startsWith("/")&&!url.startsWith("http")){let root=String(window.location).replace(/\/[^\/]+$/,"");url=root+"/"+url;}
console.log(display.type+" load point data:"+url);Utils.doFetch(url,success,fail,null);}});this.setGroupField();}
function DerivedPointData(displayManager,name,pointDataList,operation){RamaddaUtil.inherit(this,new BasePointData(name));RamaddaUtil.defineMembers(this,{displayManager:displayManager,operation:operation,pointDataList:pointDataList,loadDataCalls:0,display:null,pointDataLoaded:function(pointData){this.loadDataCalls--;if(this.loadDataCalls<=0){this.initData();}},equals:function(that){if(that.pointDataList==null)return false;if(this.pointDataList.length!=that.pointDataList.length)return false;for(var i in this.pointDataList){if(!this.pointDataList[i].equals(that.pointDataList[i])){return false;}}
return true;},initData:function(){var pointData1=this.pointDataList[0];if(this.pointDataList.length==1){this.records=pointData1.getRecords();this.recordFields=pointData1.getRecordFields();console.log("initData:"+this.recordFields.length);}else if(this.pointDataList.length>1){var results=this.combineData(pointData1,this.pointDataList[1]);this.records=results.records;this.recordFields=results.recordFields;console.log("initData 2:"+this.recordFields.length);}
this.setGroupField();this.display.pointDataLoaded(this);},combineData:function(pointData1,pointData2){var records1=pointData1.getRecords();var records2=pointData2.getRecords();var newRecords=[];var newRecordFields;if(records1.length!=records2.length){console.log("bad records:"+records1.length+" "+records2.length);}
if(this.operation=="average"){for(var recordIdx=0;recordIdx<records1.length;recordIdx++){var record1=records1[recordIdx];var record2=records2[recordIdx];if(record1.getDate()!=record2.getDate()){console.log("Bad record date:"+record1.getDate()+" "+record2.getDate());break;}
var newRecord=$.extend(true,{},record1);var data1=newRecord.getData();var data2=record2.getData();for(var colIdx=0;colIdx<data1.length;colIdx++){data1[colIdx]=(data1[colIdx]+data2[colIdx])/2;}
newRecords.push(newRecord);}
newRecordFields=pointData1.getRecordFields();}else if(this.operation=="other func"){}
if(newRecordFields==null){newRecords=records1;newRecordFields=pointData1.getRecordFields();}
return{records:newRecords,recordFields:newRecordFields};},loadData:function(display){this.display=display;this.loadDataCalls=0;for(var i in this.pointDataList){var pointData=this.pointDataList[i];if(!pointData.hasData()){this.loadDataCalls++;pointData.loadData(this);}
if(this.loadDataCalls==0){this.initData();}}
}});}
function RecordField(props,source){$.extend(this,{isDate:props.type=="date",isLatitude:false,isLongitude:false,isElevation:false,forDisplay:true});$.extend(this,props);$.extend(this,{isGroup:props.group,properties:props});if(source&&source.getProperty){["type","label","unit"].forEach(t=>{let ext=source.getProperty(props.id+"."+t);if(ext)this[t]=ext;});}
RamaddaUtil.defineMembers(this,{clone:function(){var newField={};$.extend(newField,this);return newField;},toString:function(){if(this.group)
return this.getId();return this.getId();},getForDisplay:function(){return this.forDisplay;},getIndex:function(){return this.index;},getValue:function(record,dflt){let v;if(record.getValue)
v=record.getValue(this.index);else
v=record[this.index];if(!v&&!Utils.isDefined(v))return dflt;return v;},getGroup:function(){return this.group;},getEnumeratedValues:function(row){return this.enumeratedValues;},isFieldGroup:function(){return this.isGroup;},isRecordDate:function(){return this.getId()=="recordDate";},isFieldGeo:function(){return this.isFieldLatitude()||this.isFieldLongitude()||this.isFieldElevation();},isFieldLatitude:function(){return this.isLatitude||this.id.toLowerCase()=="latitude";},isFieldLongitude:function(){return this.isLongitude||this.id.toLowerCase()=="longitude";},isFieldElevation:function(){return this.isElevation||this.id.toLowerCase()=="elevation"||this.id.toLowerCase()=="altitude";},isFieldNumeric:function(){return this.isNumeric();},isFieldString:function(){return this.type=="string"||this.type=="enumeration"||this.type=="multienumeration";},isFieldEnumeration:function(){return this.type=="enumeration"||this.type=="multienumeration";},isFieldMultiEnumeration:function(){return this.type=="multienumeration";},isFieldDate:function(){return this.isDate;},isChartable:function(){return this.chartable;},getSortOrder:function(){return this.sortorder;},getId:function(){return this.id;},getTypeLabel:function(){var type="fa-font";if(this.isFieldGeo()){type="fa-globe";}else if(this.isFieldNumeric()){type="fa-hashtag";}else if(this.isFieldEnumeration()){type="fa-list";}
var tt=this.getType();return HtmlUtils.span(["title",tt,"class","fa "+type,"style","color:rgb(169, 169, 169);font-size:12pt;"]);},getUnitLabel:function(){return this.getLabel()+this.getUnitSuffix();},getUnitSuffix:function(){if(this.unit&&this.unit!="")
return"&nbsp;["+this.unit+"]";return"";},getLabel:function(){if(this.label==null||this.label.length==0)return this.id;return this.label;},setLabel:function(l){this.label=l;},canEdit:function(){return this.canedit==true;},isNumeric:function(){return this.type=="double"||this.type=="integer";},isString:function(){return this.type=="string"||this.isFieldEnumeration()||this.type=="url"||this.type=="image";},getType:function(){return this.type;},setType:function(t){this.type=t;},getMissing:function(){return this.missing;},setUnit:function(u){this.unit=u;},getUnit:function(){return this.unit;}});}
function PointRecord(fields,lat,lon,elevation,time,data,rowIdx){this.isPointRecord=true;$.extend(this,{rowIndex:rowIdx,fields:fields,latitude:lat,longitude:lon,elevation:elevation,recordTime:time,data:data,id:HtmlUtils.getUniqueId(),});if(!time&&data){data.every(d=>{if(d&&d.getTime){this.recordTime=d;return false;}
return true;});}}
PointRecord.prototype={clone:function(){var newRecord={};$.extend(newRecord,this);newRecord.data=[];this.data.map((v,idx)=>{newRecord.data[idx]=v;});return newRecord;},isHighlight:function(display){if(!this.highlightForDisplay)this.highlightForDisplay={};return this.highlightForDisplay[display];},getDisplayProperty:function(display,prop,dflt){if(!this.displayProperties)this.displayProperties={};let props=this.displayProperties[display];if(!props){props=this.displayProperties[display]={};}
return props[prop]||dflt;},setDisplayProperty:function(display,prop,value){if(!this.displayProperties)this.displayProperties={};let props=this.displayProperties[display];if(!props){props=this.displayProperties[display]={};}
props[prop]=value;},setHighlight:function(display,value){if(!this.highlightForDisplay)this.highlightForDisplay={};if(!value||this.highlightForDisplay[display]==null){this.highlightForDisplay[display]=value;}},clearHighlight:function(display){if(!this.highlightForDisplay)this.highlightForDisplay={};delete this.highlightForDisplay[display];},toString:function(){return"data:"+this.data;},getId:function(){return this.id;},getData:function(){return this.data;},setData:function(d){this.data=d;},getValueFromField:function(id){let value=null;this.fields.every(field=>{if(field.getId()==id){value=this.getValue(field.getIndex());return false;}
return true;});return value;},allZeros:function(){var tuple=this.getData();var allZeros=false;var nums=0;var nonZero=0;for(var j=0;j<tuple.length;j++){if(typeof tuple[j]=="number"){nums++;if(!isNaN(tuple[j])&&tuple[j]!=0){nonZero++;break;}}}
if(nums>0&&nonZero==0){return true;}
return false;},getValue:function(index){return this.data[index];},setValue:function(index,value){this.data[index]=value;},push:function(v){this.data.push(v);},hasDate:function(){return this.getDate()!=null;},hasLocation:function(){return this.latitude!=null&&!isNaN(this.latitude);},hasElevation:function(){return this.elevation!=null&&!isNaN(this.elevation);},setLocation:function(lat,lon){this.latitude=lat;this.longitude=lon;},getLatitude:function(){return this.latitude;},getLongitude:function(){return this.longitude;},getTime:function(){return this.recordTime;},getElevation:function(){return this.elevation;},getDate:function(){return this.recordTime;}};function makePointData(json,derived,source,url){let debug=false;if(debug)console.log("makePointData");var fields=[];var latitudeIdx=-1;var longitudeIdx=-1;var elevationIdx=-1;var dateIdx=-1;var dateIndexes=[];var offsetFields=[];var lastField=null;for(var i=0;i<json.fields.length;i++){var field=json.fields[i];var recordField=new RecordField(field,source);if(recordField.isFieldNumeric()){if(source.getProperty){var offset1=source.getProperty(recordField.getId()+".offset1",source.getProperty("offset1"));var offset2=source.getProperty(recordField.getId()+".offset2",source.getProperty("offset2"));var scale=source.getProperty(recordField.getId()+".scale",source.getProperty("scale"));if(offset1||offset2||scale){var unit=source.getProperty(recordField.getId()+".unit",source.getProperty("unit"));if(unit){recordField.unit=unit;}
var o={offset1:0,offset2:0,scale:1};if(offset1)o.offset1=parseFloat(offset1);if(offset2)o.offset2=parseFloat(offset2);if(scale)o.scale=parseFloat(scale);recordField.offset=o;offsetFields.push(recordField);}}}
lastField=recordField;fields.push(recordField);if(recordField.isFieldLatitude()){latitudeIdx=recordField.getIndex();}else if(recordField.isFieldLongitude()){longitudeIdx=recordField.getIndex();}else if(recordField.isFieldElevation()){elevationIdx=recordField.getIndex();}else if(recordField.isFieldDate()){dateIdx=recordField.getIndex();dateIndexes.push(dateIdx);}}
if(derived){var index=lastField.getIndex()+1;for(var dIdx=0;dIdx<derived.length;dIdx++){var d=derived[dIdx];var label=d.label||d.name;var recordField=new RecordField({type:"double",index:(index+dIdx),chartable:true,id:d.name,label:label,});recordField.derived=d;fields.push(recordField);}}
let pointRecords=[];let isArray=false;let hasGeo=false;let hasDate=false;let setDateFlags=false;let dateIsString=false;json.data.forEach((tuple,rowIndex)=>{if(debug&&rowIndex>0&&(rowIndex%10000)==0)console.log("\tprocessed:"+i);if(rowIndex==0){isArray=Array.isArray(tuple);hasDate=!(typeof tuple.date==='undefined');}
let values;if(isArray)
values=tuple;else
values=tuple.values;let date=null;if(isArray||!hasDate){if(dateIdx>=0){if(!setDateFlags){dateIsString=(typeof values[dateIdx]=="string");setDateFlags=true;}
if(dateIsString){date=new Date(values[dateIdx]);}else{date=new Date(0);date.setUTCMilliseconds(values[dateIdx]);}}}else{if(tuple.date!=null&&tuple.date!=0){date=new Date(0);date.setUTCMilliseconds(tuple.date);}}
if(isArray||(typeof tuple.latitude==='undefined')){if(latitudeIdx>=0)
tuple.latitude=values[latitudeIdx];else
tuple.latitude=NaN;}
if(isArray||(typeof tuple.longitude==='undefined')){if(longitudeIdx>=0)
tuple.longitude=values[longitudeIdx];else
tuple.longitude=NaN;}
for(var j=0;j<dateIndexes.length;j++){values[dateIndexes[j]]=new Date(values[dateIndexes[j]]);}
for(var col=0;col<values.length;col++){if(values[col]==null){values[col]=NaN;}}
if(derived){for(var dIdx=0;dIdx<derived.length;dIdx++){var d=derived[dIdx];if(!d.isRow){continue;}
if(!d.compiledFunction){var funcParams=[];var params=(d.columns.indexOf(";")>=0?d.columns.split(";"):d.columns.split(","));d.fieldsToUse=[];for(var i=0;i<params.length;i++){var param=params[i].trim();funcParams.push("v"+(i+1));var theField=null;for(var fIdx=0;fIdx<fields.length;fIdx++){var f=fields[fIdx];if(f.getId()==param){theField=f;break;}}
d.fieldsToUse.push(theField);}
var code="";for(var i=0;i<funcParams.length;i++){code+="var v"+(i+1)+"=args["+i+"];\n";}
let tmpFunc=d["function"];if(tmpFunc.indexOf("return")<0)tmpFunc="return "+tmpFunc;code+=tmpFunc+"\n";d.compiledFunction=new Function("args",code);}
var args=[];var anyNotNan=false;for(var fIdx=0;fIdx<d.fieldsToUse.length;fIdx++){var f=d.fieldsToUse[fIdx];var v=NaN;if(f!=null){v=values[f.getIndex()];if(v==null)v=NaN;}
if(!isNaN(v)){anyNotNan=true;}else{}
args.push(v);}
try{var result=NaN;if(anyNotNan){result=d.compiledFunction(args);if(d.decimals>=0){result=result.toFixed(d.decimals);}
result=parseFloat(result);}else{}
values.push(result);}catch(e){console.log("Error evaluating function:"+d["function"]+"\n"+e);values.push(NaN);}}}
for(var fieldIdx=0;fieldIdx<offsetFields.length;fieldIdx++){var field=offsetFields[fieldIdx];var offset=field.offset;var value=values[field.getIndex()];value=(value+offset.offset1)*offset.scale+offset.offset2;values[field.getIndex()]=value;}
var record=new PointRecord(fields,tuple.latitude,tuple.longitude,tuple.elevation,date,values,rowIndex);pointRecords.push(record);});if(source!=null){for(var i=0;i<fields.length;i++){var field=fields[i];var prefix="field."+field.getId()+".";if(Utils.isDefined(source[prefix+"unit"])){field.setUnit(source[prefix+"unit"]);}
if(Utils.isDefined(source[prefix+"label"])){field.setLabel(source[prefix+"label"]);}
if(Utils.isDefined(source[prefix+"scale"])||Utils.isDefined(source[prefix+"offset1"])||Utils.isDefined(source[prefix+"offset2"])){var offset1=Utils.isDefined(source[prefix+"offset1"])?parseFloat(source[prefix+"offset1"]):0;var offset2=Utils.isDefined(source[prefix+"offset2"])?parseFloat(source[prefix+"offset2"]):0;var scale=Utils.isDefined(source[prefix+"scale"])?parseFloat(source[prefix+"scale"]):1;var index=field.getIndex();for(var rowIdx=0;rowIdx<pointRecords.length;rowIdx++){var record=pointRecords[rowIdx];var values=record.getData();var value=values[index];values[index]=(value+offset1)*scale+offset2;}}}}
var name=json.name;if((typeof name==='undefined')){name="Point Data";}
pointRecords.sort(function(a,b){if(a.getDate()&&b.getDate()){if(a.getDate().getTime()<b.getDate().getTime())return-1;if(a.getDate().getTime()>b.getDate().getTime())return 1;return 0;}});let pd=new PointData(name,fields,pointRecords,url);return pd;}
function BaseFilter(display,properties){this.display=display;if(properties==null)properties={};RamaddaUtil.defineMembers(this,{properties:properties,isEnabled:function(){return true;},prepareToFilter:function(){},isRecordOk:function(display,record,values){return true;},getWidget:function(){return""},initWidget:function(inputFunc){}});}
function BoundsFilter(display,properties){RamaddaUtil.inherit(this,new BaseFilter(display,properties));$.extend(this,{enabled:true,getWidget:function(){let id=this.display.getDomId("boundsfilter");return HtmlUtils.span([STYLE,HU.css("margin-left","4px","margin-right","4px"),ID,id,CLASS,"ramadda-clickable",TITLE,"Filter records on map view. Shift-click to clear"],HtmlUtils.getIconImage("fas fa-globe-americas"));},initWidget:function(inputFunc){this.inputFunc=inputFunc;let id=this.display.getDomId("boundsfilter");let _this=this;this.display.jq("boundsfilter").click(function(event){if(event.shiftKey){if(!_this.bounds)return;_this.bounds=null;}else{_this.bounds=_this.display.getBounds();}
inputFunc($(this),null,_this.bounds);});},isRecordOk:function(record){if(!this.bounds){return true;}
if(record.hasLocation()){var b=this.bounds;var lat=record.getLatitude();var lon=record.getLongitude();if(lat>b.top||lat<b.bottom||lon<b.left||lon>b.right)
return false;}
return true;},});}
function RecordFilter(display,filterFieldId,properties){const ID_TEXT="_text_";this.id=filterFieldId;this.isText=this.id==ID_TEXT;let fields;if(this.isText){fields=display.getFieldsByType(null,"string");}else{let filterField=display.getFieldById(null,filterFieldId);if(filterField)
fields=[filterField];else{console.log("Error: could not find filter field::"+filterFieldId);fields=[];}}
$.extend(this,new BaseFilter(display,properties));this.getId=function(){return this.id;}
let getAttr=(suffix,dflt)=>{let key=this.getId()+"."+suffix;let v=display.getProperty(key,dflt);return v;};let label="";if(this.isText){label=getAttr("filterLabel","Text");}else{label=getAttr("filterLabel",fields.length>0?fields[0].getLabel():"");}
$.extend(this,{fields:fields,values:[],hideFilterWidget:display.getProperty("hideFilterWidget",false,true),displayType:getAttr("filterDisplay","menu"),label:label,suffix:getAttr("filterSuffix",""),depends:getAttr("filterDepends",null),dateIds:[],prefix:display.getProperty(this.getId()+".filterPrefix"),suffix:display.getProperty(this.getId()+".filterSuffix"),startsWith:display.getProperty(this.getId()+".filterStartsWith",false),ops:Utils.split(display.getProperty(this.getId()+".filterOps"),";",true,true),labelField:display.getFieldById(null,display.getProperty(this.getId()+".labelField"))});if(this.ops){let tmp=[];this.ops.forEach(tok=>{let tuple=tok.split(",");tmp.push({op:tuple[0],value:tuple[1],label:tuple[2]||this.id+tuple[0]+tuple[1]});});this.ops=tmp;}
$.extend(this,{toString:function(){return"filter:"+this.getId();},getField:function(){return this.fields[0];},getFieldId:function(){return this.fields[0].getId();},getLabel:function(){return this.label;},getValue:function(record){if(this.fields.length==1){return record.getValue(this.fields[0].getIndex());}else{let v=this.fields.reduce((acc,field)=>{return acc+=" "+record.getValue(field.getIndex());},"");return v;}},isFieldNumeric:function(){return this.getField().isNumeric();},isFieldEnumeration:function(){return this.getField().isFieldEnumeration();},isFieldMultiEnumeration:function(){return this.getField().isFieldMultiEnumeration();},getFieldType:function(){return this.getField().getType();},getFilterId:function(id){return this.display.getDomId("filterby_"+(id||this.getId()));},isEnabled:function(){return this.isText||this.getField()!=null;},recordOk:function(display,record,values){return true;},getProperty:function(key,dflt){return this.display.getProperty(key,dflt);},getPropertyFromUrl:function(key,dflt){return this.display.getPropertyFromUrl(key,dflt);},prepareToFilter:function(){this.mySearch=null;if(this.depend){this.checkDependency();}
if(!this.isEnabled()){return;}
let value=null;let _values=[];let values=null;let matchers=[];if(this.ops){let v=$("#"+this.getFilterId(this.getId())).val();if(v==FILTER_ALL){this.mySearch=null;return;}
this.mySearch={index:parseFloat(v)};return;}else if(this.isFieldNumeric()){let minField=$("#"+this.display.getDomId("filterby_"+this.getId()+"_min"));let maxField=$("#"+this.display.getDomId("filterby_"+this.getId()+"_max"));if(!minField.val()||!maxField.val())return;let minValue=parseFloat(minField.val().trim());let maxValue=parseFloat(maxField.val().trim());let dfltMinValue=parseFloat(minField.attr("data-min"));let dfltMaxValue=parseFloat(maxField.attr("data-max"));if(minValue!=dfltMinValue||maxValue!=dfltMaxValue){value=[minValue,maxValue];}}else if(this.getFieldType()=="date"){let date1=$("#"+this.display.getDomId("filterby_"+this.getId()+"_date1")).val();let date2=$("#"+this.display.getDomId("filterby_"+this.getId()+"_date2")).val();if(date1!=null&&date1.trim()!="")
date1=Utils.parseDate(date1);else
date1=null;if(date2!=null&&date2.trim()!="")
date2=Utils.parseDate(date2);else
date2=null;if(date1!=null||date2!=null)
value=[date1,date2];}else{values=this.getFieldValues();if(!values)return;if(!Array.isArray(values))values=[values];if(values.length==0)return;values=values.map(v=>{return v.replace(/_comma_/g,",");});values.forEach(v=>{_values.push((""+v).toLowerCase());try{matchers.push(new TextMatcher(v));}catch(skipIt){}});}
let anyValues=value!=null;if(!anyValues&&values){values.forEach(v=>{if(v.length>0&&v!=FILTER_ALL)anyValues=true});}
if(anyValues){this.mySearch={value:value,values:values,matchers:matchers,_values:_values,anyValues:anyValues,};}else{this.mySearch=null;}
},isRecordOk:function(record,debug){let ok=true;if(!this.isEnabled()||!this.mySearch){if(debug){if(!this.isEnabled())
console.log("\tfilter  not enabled");if(!this.mySearch)
console.log("\tfilter  no mySearch");}
return ok;}
if(debug)console.log("\tfilter.isRecordOk:"+JSON.stringify(this.mySearch));let rowValue=this.getValue(record);if(this.ops){let op=this.ops[this.mySearch.index];if(op.op=="<")ok=rowValue<op.value;else if(op.op=="<=")ok=rowValue<=op.value;else if(op.op==">")ok=rowValue>op.value;else if(op.op==">=")ok=rowValue>=op.value;else if(op.op=="==")ok=rowValue==op.value;}else if(this.isFieldEnumeration()){rowValue=String(rowValue);if(this.isFieldMultiEnumeration()){ok=false;let values=rowValue.split(",");values.forEach(value=>{value=value.trim();if(this.mySearch.values.includes(value))ok=true;});}else{ok=this.mySearch.values.includes(rowValue);}}else if(this.isFieldNumeric()){if(isNaN(this.mySearch.value[0])&&isNaN(this.mySearch.value[1]))return ok;if(isNaN(rowValue)||rowValue=="")ok=false;else if(!isNaN(this.mySearch.value[0])&&rowValue<this.mySearch.value[0])ok=false;else if(!isNaN(this.mySearch.value[1])&&rowValue>this.mySearch.value[1])ok=false;}else if(this.getFieldType()=="date"){if(this.mySearch.value&&Array.isArray(this.mySearch.value)){if(rowValue==null){ok=false;}else{let date1=this.mySearch.value[0];let date2=this.mySearch.value[1];let dttm=rowValue.getTime();if(isNaN(dttm))ok=false;else if(date1&&dttm<date1.getTime())
ok=false;else if(date2&&dttm>date2.getTime())
ok=false;}}}else{let startsWith=this.startsWith;ok=false;rowValue=String(rowValue).toLowerCase();for(let j=0;j<this.mySearch._values.length;j++){let fv=this.mySearch._values[j];if(startsWith){if(rowValue.toString().startsWith(fv)){ok=true;break;}}else if(rowValue.toString().indexOf(fv)>=0){ok=true;break;}}
if(!ok&&!startsWith){for(ri=0;ri<this.mySearch.matchers.length;ri++){let matcher=this.mySearch.matchers[ri];if(matcher.matches(rowValue.toString())){ok=true;break;}}}}
return ok;},doTags:function(){if(!this.getProperty(this.getId()+".showFilterTags",true))return false;let tags=this.getProperty(this.getId()+".showFilterTags")||this.getProperty("showFilterTags");return tags;},doTagsColor:function(){if(!this.getProperty(this.getId()+".colorFilterTags",true))return false;let tags=this.getProperty(this.getId()+".colorFilterTags",true)||this.getProperty("colorFilterTags");return tags;},getFieldValues:function(){if(this.isFieldEnumeration()){if(this.doTags()){return this.selectedTags||[];}}
let element=$("#"+this.display.getDomId("filterby_"+this.getId()));let value=null;if(element.attr("isCheckbox")){if(element.is(':checked')){value=element.attr("onValue");}else{value=element.attr("offValue");}}else if(element.attr("isButton")){value=element.attr("data-value");}else{value=element.val();}
if(!value){if(this.defaultValue)value=this.defaultValue;else value=FILTER_ALL;}
if(!Array.isArray(value)){if(!this.isFieldEnumeration()){value=value.split(",");}else{value=[value];}}
let tmp=[];value.forEach(v=>tmp.push(v.trim()));value=tmp;return value;},toggleTag:function(value,on,cbx,propagateEvent){let _this=this;let type=this.getFilterId();let tagId=Utils.makeId(type+"_"+value);if(on){if(this.selectedTags.includes(value))return;this.selectedTags=Utils.addUnique(this.selectedTags,value);let tagGroup=this.display.jq(ID_TAGBAR).find(".tag-group"+HU.attrSelect("tag-type",this.getFilterId()));if(tagGroup.length==0){let bar;if(this.display.getProperty("tagDiv"))
bar=$("#"+this.display.getProperty("tagDiv"));else
bar=this.display.jq(ID_TAGBAR);tagGroup=$(HU.div([STYLE,HU.css("display","inline-block"),CLASS,"tag-group","tag-type",this.getFilterId()])).appendTo(bar);}
let tag=$(HU.div(["metadata-type",type,"metadata-value",value,TITLE,value,STYLE,HU.css("background",Utils.getEnumColor(this.getFieldId())),CLASS,"display-search-tag",ID,tagId],value+SPACE+HU.getIconImage("fas fa-times"))).appendTo(tagGroup);tag.click(function(){_this.selectedTags=Utils.removeElement(_this.selectedTags,value);if(cbx)
cbx.prop('checked',false);$(this).remove();_this.inputFunc(_this.fakeInput,null,_this.selectedTags);});}else{this.selectedTags=Utils.removeElement(this.selectedTags,value);$("#"+tagId).remove();}
if(propagateEvent&&this.inputFunc){this.inputFunc(this.fakeInput,null,this.selectedTags);}},initWidget:function(inputFunc){if(!this.isEnabled())return;this.inputFunc=inputFunc;this.fakeInput={attr:function(key){return this[key];},val:function(){return null},id:this.getId(),fieldId:this.getFieldId()};this.initDateWidget(inputFunc);if(this.tagCbxs){let _this=this;let cbxChange=function(){let cbx=$(this);let on=cbx.is(':checked');let value=$(this).attr("metadata-value");_this.toggleTag(value,on,cbx,true);}
let clickId=this.getFilterId()+"_popup";$("#"+clickId).click(()=>{let dialog=this.display.createTagDialog(this.tagCbxs,$("#"+clickId),cbxChange,this.getFilterId(),this.getLabel());dialog.find(".metadata-cbx").each(function(){let value=$(this).attr('metadata-value');$(this).prop('checked',_this.selectedTags.includes(value));});});}},initDateWidget:function(inputFunc){if(!this.hideFilterWidget){for(let i=0;i<this.dateIds.length;i++){let id=this.dateIds[i];HtmlUtils.datePickerInit(id);$("#"+id).change(function(){inputFunc($(this));});}}},checkDependency:function(){if(!this.depend||!this.records||!this.dependMySearch||!this.depend.mySearch||!this.dependMySearch.values||!this.depend.mySearch.values){console.log("no depend:"+this.depend+" "+(this.records!=null)+" "+this.dependMySearch);return;}
let v1=this.dependMySearch.values;let v2=this.depend.mySearch.values;if(v1.length==v2.length){let equals=true;for(let i=0;i<v1.length&&equals;i++)
equals=v1[i]==v2[i];if(equals)return;}
let enums=this.getEnums(this.records);let widgetId=this.getFilterId(this.getId());let tmp=[];enums.map(e=>tmp.push(e.value));this.display.ignoreFilterChange=true;let widget=$("#"+widgetId);let val=widget.val();if(!val)val=widget.attr("data-value");widget.html(HU.makeOptions(tmp,val));this.display.ignoreFilterChange=false;},handleEventPropertyChanged:function(prop){if(this.isFieldEnumeration()&&this.doTags()){if(this.selectedTags){let type=this.getFilterId();this.selectedTags.forEach(value=>{let tagId=Utils.makeId(type+"_"+value);$("#"+tagId).remove();});}
this.selectedTags=[];prop.value.forEach(value=>{this.toggleTag(value,true);});return;}
let id=this.widgetId;if(prop.id&&prop.id.endsWith("date1")){id+="_date1";}else if(prop.id&&prop.id.endsWith("date2")){id+="_date2";}
let widget=$("#"+id);if(widget.attr("isCheckbox")){let on=widget.attr("onValue");widget.prop('checked',prop.value.includes(on));}else{widget.val(prop.value);}
widget.attr("data-value",prop.value);if(widget.attr("isButton")){widget.find(".display-filter-button").removeClass("display-filter-button-selected");widget.find("[value='"+prop.value+"']").addClass("display-filter-button-selected");}},getWidget:function(fieldMap,bottom,records,vertical){this.records=records;let debug=false;if(debug)console.log(this.id+".getWidget");if(!this.isEnabled()){if(debug)console.log("\tnot enabled");return"";}
let widgetStyle="";if(this.hideFilterWidget)
widgetStyle="display:none;";fieldMap[this.getId()]={field:this.fields[0],values:[],};let showLabel=true;let widget;let widgetId=this.widgetId=this.getFilterId(this.getId());let widgetLabel=this.getProperty(this.getId()+".filterLabel",this.getLabel());let suffix=this.getProperty(this.getId()+".filterSuffix","");if(this.ops){let labels=[];this.ops.forEach((op,idx)=>{labels.push([String(idx),op.label]);});let selected=this.getPropertyFromUrl(this.getId()+".filterValue",FILTER_ALL);let showLabel=this.getProperty(this.getId()+".showFilterLabel",this.getProperty("showFilterLabel",true));let allName=this.getProperty(this.getId()+".allName",!showLabel?this.getLabel():"All");let enums=Utils.mergeLists([[FILTER_ALL,allName]],labels);let attrs=[STYLE,widgetStyle,ID,widgetId,"fieldId",this.getId()];widget=HU.select("",attrs,enums,selected);}else if(this.isFieldEnumeration()){if(debug)console.log("\tis enumeration");let dfltValue=this.defaultValue=this.getPropertyFromUrl(this.getId()+".filterValue",FILTER_ALL);let enums=this.getEnums(records);let attrs=["style",widgetStyle,"id",widgetId,"fieldId",this.getId()];if(this.getProperty(this.getId()+".filterMultiple",false)){attrs.push("multiple");attrs.push("");attrs.push("size");attrs.push(this.getProperty(this.getId()+".filterMultipleSize","3"));dfltValue=dfltValue.split(",");}
if(this.displayType!="menu"){if(debug)console.log("\tnot menu");let includeAll=this.getProperty(this.getId()+".includeAll",this.getProperty("filter.includeAll",true));if(!includeAll&&dfltValue==FILTER_ALL)dfltValue=enums[0].value;let buttons="";let colorMap=Utils.parseMap(this.getProperty(this.getId()+".filterColorByMap"));let useImage=this.displayType=="image";let imageAttrs=[];let imageMap=Utils.getNameValue(this.getProperty(this.getId()+".filterImages"));if(useImage){let w=this.getProperty(this.getId()+".filterImageWidth");let h=this.getProperty(this.getId()+".filterImageHeight");if(h){imageAttrs.push("height");imageAttrs.push(h);}
if(w){imageAttrs.push("width");imageAttrs.push(w);}
if(!h&&!w){imageAttrs.push("width");imageAttrs.push("50");}
imageAttrs.push("style");imageAttrs.push(this.getProperty(this.getId()+".filterImageStyle","border-radius:50%;"));}
for(let j=0;j<enums.length;j++){let extra="";let v=enums[j].value;let color=colorMap?colorMap[v]:null;let label;if(Array.isArray(v)){label=v[1];v=v[0];}else{label=v;}
let style=this.getProperty(this.getId()+".filterItemStyle","");if(color){style+=" background-color:"+color+"; ";}
let clazz=" display-filter-item display-filter-item-"+this.displayType+" ";if(v==dfltValue){clazz+=" display-filter-item-"+this.displayType+"-selected ";}
if(v==FILTER_ALL){extra=" display-filter-item-all ";}
if(useImage){let image=null;if(imageMap)image=imageMap[v];if(!image||image=="")image=enums[j].image;if(image){buttons+=HtmlUtils.div(["fieldId",this.getId(),"class",clazz,"style",style,"data-value",v,"title",label],HtmlUtils.image(image,imageAttrs));}else{buttons+=HtmlUtils.div(["fieldId",this.getId(),"class",clazz,"style",style,"data-value",v,"title",label],label);}}else{buttons+=HtmlUtils.div(["fieldId",this.getId(),"class",clazz,"style",style,"data-value",v],label);}
buttons+="\n";}
if(useImage&&this.getProperty(this.getId()+".filterShowButtonsLabel")){buttons+=HtmlUtils.div(["class","display-filter-item-label","id",this.display.getDomId("filterby_"+this.getId()+"_label")],"&nbsp;");}
bottom[0]+=HtmlUtils.div(["data-value",dfltValue,"class","display-filter-items","id",widgetId,"isButton","true","fieldId",this.getId()],buttons);if(debug)console.log("\treturn 1");return"";}else if(this.getProperty(this.getId()+".filterCheckbox")){if(debug)console.log("\tis checkbox");attrs.push("isCheckbox");attrs.push(true);let tmp=[];enums.map(e=>tmp.push(e.value));let checked=tmp.includes(dfltValue);if(tmp.length>0){attrs.push("onValue");attrs.push(tmp[0]);}
if(tmp.length>1){attrs.push("offValue");attrs.push(tmp[1]);}
widget=HtmlUtils.checkbox("",attrs,checked);}else if(this.doTags()){let doColor=this.doTagsColor();showLabel=false;let cbxs=[];this.tagToCbx={};this.selectedTags=[];enums.map((e,idx)=>{let count=e.count;let value=e.value;let label=value;if(Array.isArray(value)){value=e.value[0];label=e.value[1];if(value==="")
label="-blank-";}
let showCount=true;if(count)label=label+(showCount?" ("+count+")":"");let cbxId=this.getFilterId()+"_cbx_"+idx;this.tagToCbx[value]=cbxId;let cbx=HU.checkbox("",[CLASS,"metadata-cbx",ID,cbxId,"metadata-type",this.getFilterId(),"metadata-value",value],false)+" "+HU.tag("label",[CLASS,"ramadda-noselect ramadda-clickable","for",cbxId],label);cbx=HU.span([CLASS,'display-search-tag','tag',label,STYLE,HU.css("background",Utils.getEnumColor(this.getFieldId()))],cbx);cbxs.push(cbx);});this.tagCbxs=cbxs;let clickId=this.getFilterId()+"_popup";let label=" "+this.getLabel()+" ("+cbxs.length+")";label=label.replace(/ /g,"&nbsp;");let style=HU.css("white-space","nowrap","line-height","1.5em","margin-top","6px","padding-right","5px");if(doColor)
style+=HU.css("border","1px solid #ccc","background",Utils.getEnumColor(this.getFieldId()));else
style+=HU.css();widget=HU.div([STYLE,style,TITLE,"Click to select tag",ID,clickId,CLASS,"ramadda-clickable entry-toggleblock-label"],HU.makeToggleImage("fas fa-plus","font-size:8pt;")+label);}else{if(debug)console.log("\tis select");let tmp=[];let showCount=this.getProperty(this.getId()+".filterShowCount",this.getProperty("filterShowCount",true));enums.map(e=>{let count=e.count;let v=e.value;let label=v;if(Array.isArray(v)){v=e.value[0];label=e.value[1];if(v==="")
label="-blank-";}
if(count)label=label+(showCount?" ("+count+")":"");tmp.push([v,label]);});widget=HtmlUtils.select("",attrs,tmp,dfltValue);}}else if(this.isFieldNumeric()){if(debug)console.log("\tis numeric");let min=0;let max=0;let cnt=0;records.map(record=>{let value=this.getValue(record);if(isNaN(value))return;if(cnt==0){min=value;max=value;}
else{min=Math.min(min,value);max=Math.max(max,value);}
cnt++;});let tmpMin=this.getPropertyFromUrl(this.getId()+".filterValueMin",this.getProperty("filterValueMin"));let tmpMax=this.getPropertyFromUrl(this.getId()+".filterValueMax",this.getProperty("filterValueMax"));let minStyle="";let maxStyle="";let dfltValueMin=min;let dfltValueMax=max;if(Utils.isDefined(tmpMin)){minStyle="background:"+TEXT_HIGHLIGHT_COLOR+";";dfltValueMin=parseFloat(tmpMin);}
if(Utils.isDefined(tmpMax)){maxStyle="background:"+TEXT_HIGHLIGHT_COLOR+";";dfltValueMax=parseFloat(tmpMax);}
widget=HtmlUtils.input("",dfltValueMin,[STYLE,minStyle,"data-min",min,"class","display-filter-range display-filter-input","style",widgetStyle,"id",widgetId+"_min","size",3,"fieldId",this.getId()]);widget+="-";widget+=HtmlUtils.input("",dfltValueMax,[STYLE,maxStyle,"data-max",max,"class","display-filter-range display-filter-input","style",widgetStyle,"id",widgetId+"_max","size",3,"fieldId",this.getId()]);}else if(this.getFieldType()=="date"){widget=HtmlUtils.datePicker("","",["class","display-filter-input","style",widgetStyle,"id",widgetId+"_date1","fieldId",this.getId()])+"-"+
HtmlUtils.datePicker("","",["class","display-filter-input","style",widgetStyle,"id",widgetId+"_date2","fieldId",this.getId()]);this.dateIds.push(widgetId+"_date1");this.dateIds.push(widgetId+"_date2");}else{let dfltValue=this.getPropertyFromUrl(this.getId()+".filterValue","");let width=this.getProperty(this.getId()+".filterWidth","150px");let attrs=[STYLE,widgetStyle+"width:"+HU.getDimension(width),"id",widgetId,"fieldId",this.getId(),"class","display-filter-input"];let placeholder=this.getProperty(this.getId()+".filterPlaceholder");attrs.push("width");attrs.push(width);if(placeholder){attrs.push("placeholder");attrs.push(placeholder);}else{showLabel=false;attrs.push("placeholder");attrs.push(widgetLabel);}
widget=HtmlUtils.input("",dfltValue,attrs);let values=fieldMap[this.getId()].values;let seen={};records.map(record=>{let value=this.getValue(record);if(!seen[value]){seen[value]=true;values.push(value);}});}
if(!this.hideFilterWidget){let tt=widgetLabel;if(widgetLabel.length>50)widgetLabel=widgetLabel.substring(0,49)+"...";if(!this.getProperty(this.getId()+".showFilterLabel",this.getProperty("showFilterLabel",true))){widgetLabel="";}
else
widgetLabel=widgetLabel+": ";let labelVertical=vertical||this.getProperty(this.getId()+".filterLabelVertical",false)||this.getProperty("filterLabelVertical",false);widgetLabel=this.display.makeFilterLabel(widgetLabel,tt,labelVertical);if(labelVertical)widgetLabel=widgetLabel+"<br>";if(vertical){widget=HtmlUtils.div([],(showLabel?widgetLabel:"")+widget+suffix);}else{widget=HtmlUtils.div(["style","display:inline-block;"],(showLabel?widgetLabel:"")+widget+suffix);}}
if(!vertical)
widget=widget+(this.hideFilterWidget?"":"&nbsp;&nbsp;");return widget;},getEnums:function(records){let counts={};let isMulti=this.isFieldMultiEnumeration();records.forEach((record,idx)=>{let value=this.getValue(record);if(value===null)return;value=String(value);let values=isMulti?value.split(","):[value];values.forEach(v=>{v=v.trim();if(!counts[v])counts[v]=1;else counts[v]++;});});let enums=null;let filterValues=this.getProperty(this.getId()+".filterValues");let showLabel=this.getProperty(this.getId()+".showFilterLabel",this.getProperty("showFilterLabel",true));if(filterValues){let toks;if((typeof filterValues)=="string"){filterValues=Utils.getMacro(filterValues);toks=filterValues.split(",");}else{toks=filterValues;}
enums=[];toks.map(tok=>{let tmp=tok.split(":");if(tmp.length>1){tok=[tmp[0],tmp[1]];}else if(tok==FILTER_ALL){let allName=this.getProperty(this.getId()+".allName",!showLabel?this.getLabel():"All");tok=[tmp[0],allName];}else{tok=[tok,tok];}
let count=counts[tok[0]];enums.push({value:tok,count:count});})}
let includeAll=this.getProperty(this.getId()+".includeAll",this.getProperty("filter.includeAll",true));if(enums==null){let depend=this.getProperty(this.getId()+".depends");if(depend){depend=this.depend=this.display.getRecordFilter(depend);}
let allName=this.getProperty(this.getId()+".allName",!showLabel?this.getLabel():"All");enums=[];if(includeAll&&!this.getProperty(this.getId()+".filterLabel")){enums.push({value:[FILTER_ALL,allName]});}
let seen={};let dflt=this.getField().getEnumeratedValues();if(dflt){for(let v in dflt){seen[v]=true;let count=counts[v];enums.push({value:[v,dflt[v]],count:count});}}
let enumValues=[];let imageField=this.display.getFieldByType(null,"image");let valuesAreNumbers=true;if(depend){depend.prepareToFilter();this.dependMySearch=depend.mySearch;}
records.forEach((record,idx)=>{if(depend){if(!depend.isRecordOk(record,idx<5))return;}
let value=this.getValue(record);let values;if(isMulti){values=value.split(",").map(v=>{return v.trim();});}else{values=[value];}
values.forEach(value=>{if(seen[value])return;seen[value]=true;let obj={};if(imageField)
obj.image=this.display.getDataValues(record)[imageField.getIndex()];if((+value+"")!=value)valuesAreNumbers=false;let label=value;if(label.length>30){label=label.substring(0,29)+"...";}
if(this.labelField){label+=" - "+this.labelField.getValue(record);console.log("l:"+label);}
if(typeof value=="string")
value=value.replace(/\'/g,"&apos;");let tuple=[value,label];obj.value=tuple;obj.count=counts[value];enumValues.push(obj);});});if(this.getProperty(this.getId()+".filterSort",true)){let sortCount=this.getProperty(this.getId()+".filterSortCount",true);enumValues.sort((a,b)=>{if(sortCount&&a.count&&b.count){if(b.count!=a.count)
return b.count-a.count;}
a=a.value;b=b.value;if(valuesAreNumbers){return+a-+b;}
return(""+a[1]).localeCompare(""+b[1]);});}
for(let j=0;j<enumValues.length;j++){let v=enumValues[j];enums.push(v);}}
return enums;}});}
function MonthFilter(param){RamaddaUtil.inherit(this,new BaseFilter());RamaddaUtil.defineMembers(this,{months:param.split(","),recordOk:function(display,record,values){for(i in this.months){let month=this.months[i];let date=record.getDate();if(date==null)return false;if(date.getMonth==null){return false;}
if(date.getMonth()==month)return true;}
return false;}});}
var ArrayUtil={add:function(v1,v2){if(isNaN(v1)||isNaN(v2))return NaN;return v1+v2;},average:function(values){var sum=0;if(values.length==0)return 0;for(var i=0;i<values.length;i++){sum+=values[i];}
return sum/values.length;},percentIncrease:function(values){var percents=[];var sum=0;if(values.length==0)return 0;var lastValue;for(var i=0;i<values.length;i++){var v=values[i];var incr=NaN;if(i>0&&lastValue!=0){incr=(v-lastValue)/lastValue;}
lastValue=v;percents.push(incr*100);}
return percents;},movingAverage:function(values,props){if(!props){props={};}
if(!props.step)props.step=5;if(values.length==0)return values;var newValues=[];console.log("STEP:"+props.step);let tupleGetter=values[0].tuple?v=>{return v.tuple}:v=>{return v};let isNumeric=tupleGetter(values[0]).map((v,idx)=>{return Utils.isNumber(v);});dataList.forEach((o,rowIdx)=>{if(rowIdx==0)return;let tuple=Utils.mergeLists(o.tuple);tmp.push({record:o.record,tuple:tuple});tuple[0]="x";tuple[1]=5;tuple.forEach((v,colIdx)=>{if(!isNumeric[colIdx])return;tuple[colIdx]=5;});});dataList=tmp;for(var i=props.step;i<values.length;i++){var total=0;var cnt=0;for(var j=i-props.step;j<i;j++){if(values[j]==values[j]){total+=values[j];cnt++;}}
var value=(cnt>0?total/cnt:NaN);if(newValues.length==0){for(var extraIdx=0;extraIdx<props.step;extraIdx++){newValues.push(value);}}
newValues.push(value);}
console.log("MovingAverage: values:"+values.length+" new:"+newValues.length);return newValues;},expMovingAverage:function(values,props){if(!props){props={};}
if(!props.step)props.step=5;var sma=ArrayUtil.movingAverage(values,props);var mult=(2.0/(props.step+1));var newValues=[];console.log("STEP:"+props.step);for(var i=props.step;i<values.length;i++){var total=0;var cnt=0;for(var j=i-props.step;j<i;j++){if(values[j]==values[j]){total+=values[j];cnt++;}}
var value=(cnt>0?total/cnt:NaN);if(newValues.length==0){for(var extraIdx=0;extraIdx<props.step;extraIdx++){newValues.push(value);}}
newValues.push(value);}
console.log("MovingAverage: values:"+values.length+" new:"+newValues.length);return newValues;},max:function(values){var max=NaN;for(var i=0;i<values.length;i++){if(i==0||values[i]>max){max=values[i];}}
return max;},min:function(values){var min=NaN;for(var i=0;i<values.length;i++){if(i==0||values[i]<min){min=values[i];}}
return min;},}
var RecordUtil={groupBy:function(records,display,dateBin,field){let debug=displayDebug.groupBy;if(debug)console.log("groupBy");let groups={max:0,values:[],labels:[],map:{},}
records.forEach((r,idx)=>{let key;let label=null;let date=r.getDate();if(field){if(field=="latlon"){key=label=r.getLatitude()+"/"+r.getLongitude();}else{key=label=r.getValue(field.getIndex());}}else{if(!date){return;}
key=date;if(dateBin===true){}else{if(dateBin=="day"){key=new Date(label=date.getFullYear()+"-"+date.getUTCMonth()+"-"+date.getUTCDay())}else if(dateBin=="month"){label=date.getFullYear()+"-"+date.getUTCMonth();key=new Date(label+"-01");}else if(dateBin=="year"){label=date.getFullYear();key=new Date(date.getFullYear()+"-01-01");}else if(dateBin=="decade"){let year=date.getFullYear();year=year-year%10;label=year+"s";key=new Date(year+"-01-01");}else if(dateBin){label=String(key);}}}
let array=groups.map[key];if(!array){if(debug)console.log("\tadding group:"+key);array=groups.map[key]=[];groups.values.push(key);if(label==null)
label=display.formatDate(date,null,true);groups.labels.push(label);}
array.push(r);groups.max=Math.max(groups.max,array.length);});return groups;},expandBounds:function(bounds,perc){return new RamaddaBounds(Math.min(90,bounds.north+(bounds.north-bounds.south)*perc),Math.max(-180,bounds.west-(bounds.east-bounds.west)*perc),Math.max(-90,bounds.south-(bounds.north-bounds.south)*perc),Math.min(180,bounds.east+(bounds.east-bounds.west)*perc));},convertBounds:function(bounds){if(!bounds)return null;return new RamaddaBounds(bounds);},subset:function(records,bounds){bounds=RecordUtil.convertBounds(bounds);let cnt=0;records=records.filter((record,idx)=>{let lat=record.getLatitude?record.getLatitude():record.r?record.r.getLatitude():record.y;let lon=record.getLongitude?record.getLongitude():record.r?record.r.getLongitude():record.x;let ok=lat<=bounds.north&&lat>=bounds.south&&lon>=bounds.west&&lon<=bounds.east;return ok;});return records;},getRanges:function(fields,records){var maxValues=[];var minValues=[];for(var i=0;i<fields.length;i++){maxValues.push(NaN);minValues.push(NaN);}
for(var row=0;row<records.length;row++){for(var col=0;col<fields.length;col++){var value=records[row].getValue(col);if(isNaN(value))continue;maxValues[col]=(isNaN(maxValues[col])?value:Math.max(value,maxValues[col]));minValues[col]=(isNaN(minValues[col])?value:Math.min(value,minValues[col]));}}
var ranges=[];for(var col=0;col<fields.length;col++){ranges.push([minValues[col],maxValues[col]]);}
return ranges;},getElevationRange:function(fields,records){var maxValue=NaN;var minValue=NaN;for(var row=0;row<records.length;row++){if(records[row].hasElevation()){var value=records[row].getElevation();maxValue=(isNaN(maxValue)?value:Math.max(value,maxValue));minValue=(isNaN(minValue)?value:Math.min(value,minValue));}}
return[minValue,maxValue];},slice:function(records,index){var values=[];for(var rowIdx=0;rowIdx<records.length;rowIdx++){var row=records[rowIdx];if(row.getValue){values.push(row.getValue(index));}else{values.push(row[index]);}}
return values;},sort:function(fields){fields=fields.slice(0);fields.sort(function(a,b){var s1=a.getSortOrder();var s2=b.getSortOrder();return s1<s2;});return fields;},getPoints:function(records,bounds){let points=[];this.getBounds(records,bounds,points);return points;},getBounds:function(records,bounds,points){bounds=bounds||{};if(records==null){return bounds;}
var north=NaN,west=NaN,south=NaN,east=NaN;let errorCnt=0;for(j=0;j<records.length;j++){var record=records[j];if(!isNaN(record.getLatitude())&&!isNaN(record.getLongitude())){if(j==0){north=record.getLatitude();south=record.getLatitude();west=record.getLongitude();east=record.getLongitude();}else{north=Math.max(north,record.getLatitude());south=Math.min(south,record.getLatitude());west=Math.min(west,record.getLongitude());east=Math.max(east,record.getLongitude());}
if(record.getLongitude()<-180||record.getLatitude()>90){}
if(points)
points.push(new OpenLayers.Geometry.Point(record.getLongitude(),record.getLatitude()));}}
bounds.north=north;bounds.west=west;bounds.south=south;bounds.east=east;return new RamaddaBounds(bounds);},findClosest:function(records,lon,lat,indexObj){if(records==null)return null;var closestRecord=null;var minDistance=1000000000;var index=-1;for(j=0;j<records.length;j++){var record=records[j];if(isNaN(record.getLatitude())){continue;}
var distance=Math.sqrt((lon-record.getLongitude())*(lon-record.getLongitude())+(lat-record.getLatitude())*(lat-record.getLatitude()));if(distance<minDistance){minDistance=distance;closestRecord=record;index=j;}}
if(indexObj!=null){indexObj.index=index;}
return closestRecord;},clonePoints:function(points){var result=[];for(var i=0;i<points.length;i++){var point=points[i];result.push(new OpenLayers.Geometry.Point(point.x,point.y));}
return result;}};function CsvUtil(){let eg="convertData=\"derived(field=field_id, function=population*10);\nrotateData(includeFields=true,includeDate=true,flipColumns=true);\naddPercentIncrease(replaceValues=false);\"\n";$.extend(this,{process:function(display,pointData,cmds){this.display=display;let theCmd;try{let commands=DataUtils.parseCommands(cmds);commands.map(cmd=>{theCmd=cmd;if(this[cmd.command]){let orig=pointData;pointData=this[cmd.command](pointData,cmd.args);if(!pointData)pointData=orig;else pointData.entryId=orig.entryId;}else{console.log("unknown command:"+cmd.command);}});}catch(e){console.log("Error applying derived function:"+theCmd.command);console.log(e);console.log(e.stack);}
return pointData;},help:function(pointData,args){console.log(eg);return null;},furlData:function(pointData,args){},derived:function(pointData,args){let records=pointData.getRecords();let fields=pointData.getRecordFields();let newFields=fields.slice();let newRecords=[];let id=args["field"]||("field_"+fields.length);newFields.push(new RecordField({id:id,index:fields.length,label:Utils.makeLabel(id),type:"double",chartable:true,unit:args.unit}));let func=args["function"];if(!func){console.log("No func specified in derived");return null;}
func=func.replace(/_nl_/g,"\n").replace(/_semi_/g,";");if(func.indexOf("return")<0){func="return "+func;}
let setVars="";fields.forEach((field,idx)=>{if(field.getId()!=""){if(func.indexOf(field.getId())<0)return;let varName=field.getId().replace(/^([0-9]+)/g,"v$1");setVars+="\tvar "+varName+"=displayGetFunctionValue(args[\""+field.getId()+"\"]);\n";}});let code="function displayDerivedEval(args) {\n"+setVars+func+"\n}";eval(code);records.forEach((record,rowIdx)=>{let newRecord=record.clone();newRecord.data=record.data.slice();newRecord.fields=newFields;newRecords.push(newRecord);let funcArgs={};fields.map((field,idx)=>{if(field.getId()!=""){funcArgs[field.getId()]=record.getValue(field.getIndex());}});try{let value=displayDerivedEval(funcArgs);newRecord.data.push(value);}catch(exc){console.log("Error processing derived:"+exc);newRecord.data.push(NaN);}});return new PointData("pointdata",newFields,newRecords,null,{parent:pointData});},rotateData:function(pointData,args){let records=pointData.getRecords();let header=this.display.getDataValues(records[0]);let rotated=[];for(var colIdx=0;colIdx<header.length;colIdx++){rotated.push([]);}
let includeFields=args["includeFields"]=="true";let includeDate=args["includeDate"]=="true";let flipColumns=args["flipColumns"]=="true";let fields=pointData.getRecordFields();if(!flipColumns&&includeFields){fields.map((f,colIdx)=>{if(f.isRecordDate())return;rotated[colIdx].push(colIdx==0?args["fieldName"]||"Field":f.getLabel());});}
for(var rowIdx=0;rowIdx<records.length;rowIdx++){let row=this.display.getDataValues(records[rowIdx]);for(var colIdx=0;colIdx<row.length;colIdx++){let field=fields[colIdx];if(field.isRecordDate()){continue;}
var value=row[colIdx];if(value.f)value=value.f;if(value.getTime){value=this.display.formatDate(value);}
if(!includeFields&&rowIdx==0&&colIdx==0)value="";if(flipColumns)
rotated[colIdx].unshift(value);else
rotated[colIdx].push(value);}}
if(flipColumns&&includeFields){fields.map((f,colIdx)=>{if(f.isRecordDate())return;rotated[colIdx].unshift(colIdx==0?args["fieldName"]||"Field":f.getLabel());});}
return convertToPointData(rotated);},addPercentIncrease:function(pointData,args){let records=pointData.getRecords();let header=this.display.getDataValues(records[0]);let fields=pointData.getRecordFields();let newRecords=[];let firstRecord=records[0];let replaceValues=args["replaceValues"]=="true";let newFields=[];let fieldOk=f=>{return!f.isFieldGeo()&&f.isNumeric();};fields.forEach((f,fieldIdx)=>{f=f.clone();let newField=f.clone();f.index=newFields.length;if(!fieldOk(newField)){newFields.push(f);return;}
if(!replaceValues){newFields.push(f);}
newField.unit="%";newField.index=newFields.length;newField.id=newField.id+"_percent";newField.label=newField.label+" % increase";newFields.push(newField);});let keyFields=this.display.getFieldsByIds(fields,(args.keyFields||"").replace(/_comma_/g,","));records.forEach((record,rowIdx)=>{let data=[];let newRecord=record.clone();newRecord.data=data;newRecord.fields=newFields;newRecords.push(newRecord);fields.forEach((f,fieldIdx)=>{let value=record.data[f.getIndex()];if(!fieldOk(f)){if(rowIdx==records.length-1){}
data.push(value);return;}
if(!replaceValues){data.push(value);}
if(rowIdx==0){data.push(0);}else{let basev=firstRecord.data[f.getIndex()];let perc=basev==0?0:(value-basev)/basev;data.push(perc);if(rowIdx==records.length-1){}}});});return new PointData("pointdata",newFields,newRecords,null,{parent:pointData});},addFixed:function(pointData,args){let records=pointData.getRecords();let header=this.display.getDataValues(records[0]);let fields=pointData.getRecordFields();let newRecords=[];let value=args["value"];let type=args["type"]||"double";if(type=="double")value=parseFloat(value);let id=args["id"];let label=args["label"]||Utils.makeLabel(id);let newFields=[];fields.forEach((f,fieldIdx)=>{newFields.push(f.clone());});newFields.push(new RecordField({id:id,index:newFields.length,label:label,type:type,chartable:true,}));records.forEach((record,rowIdx)=>{let newRecord=record.clone();newRecord.data=[];record.data.forEach(d=>{newRecord.data.push(d)});newRecord.data.push(value);newRecords.push(newRecord);});return new PointData("pointdata",newFields,newRecords,null,{parent:pointData});},addBearing:function(pointData,args){let records=pointData.getRecords();let fields=pointData.getRecordFields();let newRecords=[];let newFields=[];fields.forEach((f,fieldIdx)=>{f=f.clone();newFields.push(f);});let bearingField=new RecordField();newFields.push(new RecordField({id:"bearing",index:newFields.length,label:"Bearing",type:"double",chartable:true,}));let pervPoint;records.forEach((record,rowIdx)=>{let newRecord=record.clone();newRecord.fields=newFields;newRecords.push(newRecord);let bearing=NaN;if(prevPoint){let point={lat:newRecord.getLatitude(),lon:newRecord.getLongitude()};bearing=Utils.getBearing(prevPoint,point);prevPoint=point;}
newRecord.data.push(bearing);});return new PointData("pointdata",newFields,newRecords,null,{parent:pointData});},cut:function(pointData,args){let cut=args.fields?args.fields.split(","):[];let records=pointData.getRecords();let header=this.display.getDataValues(records[0]);let fields=pointData.getRecordFields();let newFields=[];let newRecords=[];let indices=[];fields.forEach((f,fieldIdx)=>{if(cut.indexOf(f.getId())>=0)return;f=f.clone();let newField=f.clone();indices.push(newField.index);newField.index=newFields.length;newFields.push(newField);});records.forEach((record,rowIdx)=>{let newRecord=record.clone();newRecord.fields=newFields;let data=newRecord.data;let newData=[];indices.forEach(i=>{newData.push(data[i]);});newRecord.data=newData;newRecords.push(newRecord);});return new PointData("pointdata",newFields,newRecords,null,{parent:pointData});},doAverage:function(pointData,args){let records=pointData.getRecords();let header=this.display.getDataValues(records[0]);let fields=pointData.getRecordFields();var newRecords=[];var newFields=[];var firstRow=records[0];fields.forEach(f=>{var newField=f.clone();newFields.push(newField);newField.label=newField.label+" (avg)";});var sums=[];fields.forEach(f=>{sums.push(0)});var newRecord;for(var rowIdx=0;rowIdx<records.length;rowIdx++){var record=records[rowIdx];if(newRecord==null){newRecord=record.clone();newRecords.push(newRecord);newRecord.fields=newFields;newRecord.parentRecords=[];}
newRecord.parentRecords.push(record);fields.forEach((f,idx)=>{if(!f.isNumeric())return;var v=record.data[f.getIndex()];sums[idx]+=v;});fields.map((f,idx)=>{if(!f.isNumeric())return;newRecord.data[idx]=sums[idx]/records.length;});}
return new PointData("pointdata",newFields,newRecords,null,{parent:pointData});},noop:function(pointData,args){return pointData;},doublingRate:function(pointData,args){let records=pointData.getRecords();let allFields=pointData.getRecordFields();let fields=this.display.getFieldsByIds(allFields,(args.fields||"").replace(/_comma_/g,","));let keyFields=this.display.getFieldsByIds(allFields,(args.keyFields||"").replace(/_comma_/g,","));let newRecords=[]
let newFields=Utils.cloneList(allFields);fields.map(f=>{if(!f.isNumeric())return;let newField=f.clone();newField.id=newField.id+"_doubling";newField.unit="days";newField.label=newField.label+" doubling";newField.index=newFields.length;newFields.push(newField);});let keys=[];for(var rowIdx=0;rowIdx<records.length;rowIdx++){let record=records[rowIdx];let newRecord=record.clone();let key="";keyFields.forEach(f=>{key+="_"+record.getValue(f.getIndex());});keys.push(key);}
for(var rowIdx=0;rowIdx<records.length;rowIdx++){let record=records[rowIdx];let newRecord=record.clone();let key=keys[rowIdx];newRecords.push(newRecord);newRecord.fields=newFields;fields.map((f,idx)=>{if(!f.isNumeric())return;let v=record.getValue(f.getIndex());let v2=NaN;let lastDate=null;for(var j=rowIdx-1;j>=0;j--){if(keyFields.length>0){let key2=keys[j];if(key!=key2)continue;}
let record2=records[j];v2=record2.getValue(f.getIndex());if(v>=v2*2){lastDate=record2.getDate();break;}}
let diff=NaN;if(lastDate){diff=(record.getDate().getTime()-lastDate.getTime())/1000/60/60/24;}
newRecord.data.push(diff);});}
return new PointData("pointdata",newFields,newRecords,null,{parent:pointData});},scaleAndOffset:function(pointData,args){let records=pointData.getRecords();let allFields=pointData.getRecordFields();let fields;if(args.fields)
fields=this.display.getFieldsByIds(allFields,(args.fields||"").replace(/_comma_/g,","));else
fields=allFields;let unit=args.unit;let scale=args.scale?parseFloat(args.scale):1;let offset1=args.offset1?parseFloat(args.offset1):0;let offset2=args.offset?parseFloat(args.offset):args.offset2?parseFloat(args.offset2):0;let newRecords=[]
let newFields=[];let changedFields={};fields.forEach(f=>{changedFields[f.getId()]=true});allFields.map(f=>{let newField=f.clone();newFields.push(newField);if(!f.isNumeric()){return;}
if(changedFields[newField.getId()]){newField.unit=unit;}});for(var rowIdx=0;rowIdx<records.length;rowIdx++){let record=records[rowIdx];let newRecord=record.clone();newRecords.push(newRecord);let data=record.getData();let newData=Utils.cloneList(data);fields.forEach(f=>{if(!f.isNumeric())return;let d=data[f.getIndex()];if(!isNaN(d)){d=(d+offset1)*scale+offset2;newData[f.getIndex()]=d;}});newRecord.setData(newData);}
return new PointData("pointdata",newFields,newRecords,null,{parent:pointData});},scaleAndOffset:function(pointData,args){let records=pointData.getRecords();let allFields=pointData.getRecordFields();let fields;if(args.fields)
fields=this.display.getFieldsByIds(allFields,(args.fields||"").replace(/_comma_/g,","));else
fields=allFields;let unit=args.unit;let scale=args.scale?parseFloat(args.scale):1;let offset1=args.offset1?parseFloat(args.offset1):0;let offset2=args.offset?parseFloat(args.offset):args.offset2?parseFloat(args.offset2):0;let newRecords=[]
let newFields=[];let changedFields={};fields.forEach(f=>{changedFields[f.getId()]=true});allFields.map(f=>{let newField=f.clone();newFields.push(newField);if(!f.isNumeric()){return;}
if(changedFields[newField.getId()]){newField.unit=unit;}});for(var rowIdx=0;rowIdx<records.length;rowIdx++){let record=records[rowIdx];let newRecord=record.clone();newRecords.push(newRecord);let data=record.getData();let newData=Utils.cloneList(data);fields.forEach(f=>{if(!f.isNumeric())return;let d=data[f.getIndex()];if(!isNaN(d)){d=(d+offset1)*scale+offset2;newData[f.getIndex()]=d;}});newRecord.setData(newData);}
return new PointData("pointdata",newFields,newRecords,null,{parent:pointData});},function:function(pointData,args){},accum:function(pointData,args){let records=pointData.getRecords();let allFields=pointData.getRecordFields();let fields;let suffix=args.suffix!=null?args.suffix:"_accum";if(args.fields)
fields=this.display.getFieldsByIds(allFields,(args.fields||"").replace(/_comma_/g,","));else
fields=allFields;let newRecords=[]
let newFields=[];let totals=[];allFields.map(f=>{totals.push(0);let newField=f.clone();newFields.push(newField);if(!f.isNumeric())return;newField.id=newField.id+suffix;newField.label=newField.label+suffix;});for(var rowIdx=0;rowIdx<records.length;rowIdx++){let record=records[rowIdx];let newRecord=record.clone();newRecords.push(newRecord);let data=record.getData();let newData=Utils.cloneList(data);fields.forEach(f=>{if(!f.isNumeric())return;let d=data[f.getIndex()];if(!isNaN(d)){let x=d;totals[f.getIndex()]+=d;d=totals[f.getIndex()];}
newData[f.getIndex()]=d;});newRecord.setData(newData);}
return new PointData("pointdata",newFields,newRecords,null,{parent:pointData});},aggregate:function(pointData,args){let records=pointData.getRecords();let allFields=pointData.getRecordFields();let groupField=this.display.getFieldById(allFields,args.groupBy);if(!groupField)throw new Error("No groupBy defined: "+args.groupBy+" args:"+JSON.stringify(args));let includeRows=args.includeRows;let fields;let suffix=args.suffix!==null?args.suffix:"_accum";suffix="";if(args.fields)
fields=this.display.getFieldsByIds(allFields,(args.fields||"").replace(/_comma_/g,","));else
fields=allFields;let newRecords=[]
let newFields=[];let totals=[];let groupMap={};let groups=[];let prop=(f,p)=>{let id=f.getId()+"."+p;if(Utils.isDefined(args[id]))return args[id];if(Utils.isDefined(this.display.getProperty(id)))return this.display.getProperty(id);return this.display.getProperty(p);};fields.forEach(f=>{let newField=f.clone();newFields.push(newField);newField.id=newField.id+suffix;newField.label=newField.label+suffix;if(newField.isNumeric()){newField.weightedByField=this.display.getFieldById(allFields,prop(newField,"weightedByField"));let op=prop(newField,"operator");if(!op&&newField.getUnit()=="%")
op="average";newField.operator=op;}});records.forEach(record=>{let groupValue=groupField.getValue(record);let group=groupMap[groupValue];if(!group){group=groupMap[groupValue]=[];groups.push(groupValue);}
group.push(record);});groups.forEach(group=>{let newData=[];let rows=groupMap[group];newFields.forEach(f=>{if(f.weightedByField){f.weight=Utils.sumList(rows.map(record=>{return f.weightedByField.getValue(record);}));}
if(f.isFieldNumeric())newData.push(0);else{if(f.getId()==groupField.getId())
newData.push(group);else
newData.push("");}});let debug=group=="Delaware";rows.forEach((record,recordIdx)=>{newFields.forEach((f,idx)=>{let v=f.getValue(record);if(f.isFieldNumeric()){if(!isNaN(v)){if(f.operator=="average"&&f.weightedByField){let weight=f.weightedByField.getValue(record);let percent=weight/f.weight;v=v*percent;}
newData[idx]+=v;}}else{if(recordIdx==0)
newData[idx]=v;if(groupField.getId()==f.getId()){newData[idx]=groupField.getValue(record);}}});});let newRecord=rows[0].clone();newRecords.push(newRecord);newFields.forEach(f=>{if(!f.isNumeric()){if(groupField.getId()!=f.getId())
newData[f.getIndex()]="";return;}
let debug=group=="Delaware";let d=newData[f.getIndex()]
if(!isNaN(d)){if(f.operator=="average"){if(!f.weightedByField){d=d/rows.length;}}
let decimals=prop(f,"numberFormatDecimals");if(decimals!==null)
d=Utils.roundDecimals(d,decimals);newData[f.getIndex()]=d;}});newRecord.setData(newData);newRecord.isAggregate=true;newRecord.aggregateValue=group;if(includeRows)
newRecords=Utils.mergeLists(newRecords,rows);})
return new PointData("pointdata",newFields,newRecords,null,{parent:pointData});},mean:function(pointData,args){let records=pointData.getRecords();let allFields=pointData.getRecordFields();let fields;if(args.fields)
fields=this.display.getFieldsByIds(allFields,(args.fields||"").replace(/_comma_/g,","));else
fields=allFields;let newRecords=[]
let newFields=[];allFields.map(f=>{newFields.push(f.clone());});newFields.push(new RecordField({id:"mean",index:newFields.length,label:"Mean",type:"double",chartable:true,}));for(var rowIdx=0;rowIdx<records.length;rowIdx++){let record=records[rowIdx];let newRecord=record.clone();newRecords.push(newRecord);let data=record.getData();let newData=Utils.cloneList(data);let total=0;let fieldCnt=0;fields.forEach(f=>{if(!f.isNumeric())return;fieldCnt++;let d=data[f.getIndex()];if(!isNaN(d)){total+=d;}});newData.push(total/fieldCnt);newRecord.setData(newData);}
return new PointData("pointdata",newFields,newRecords,null,{parent:pointData});},prune:function(pointData,args){let records=pointData.getRecords();let allFields=pointData.getRecordFields();let fields;if(args.fields)
fields=this.display.getFieldsByIds(allFields,(args.fields||"").replace(/_comma_/g,","));else
fields=allFields;let newRecords=[]
let newFields=[];allFields.map(f=>{newFields.push(f.clone());});for(var rowIdx=0;rowIdx<records.length;rowIdx++){let record=records[rowIdx];let data=record.getData();let newData=Utils.cloneList(data);let ok=false;let fieldCnt=0;fields.every(f=>{if(!f.isNumeric())return true;fieldCnt++;let d=data[f.getIndex()];if(!isNaN(d)){ok=true;return false;}
return true;});if(ok){let newRecord=record.clone();newRecord.setData(newData);newRecords.push(newRecord);}}
return new PointData("pointdata",newFields,newRecords,null,{parent:pointData});},mergeRows:function(pointData,args){let records=pointData.getRecords();let fields=pointData.getRecordFields();let op=args.operator||"count";let ops={};let keyFields=this.display.getFieldsByIds(fields,(args.keyFields||"").replace(/_comma_/g,","));let altFields=this.display.getFieldsByIds(fields,(args.altFields||"").replace(/_comma_/g,","));let newFields=[];let seen={};keyFields.forEach((f,idx)=>{seen[f.getId()]=true;let newField=f.clone();newField.index=newFields.length;newFields.push(newField);});let tmp=this.display.getFieldsByIds(fields,(args["valueFields"]||"").replace(/_comma_/g,","));if(args.valueFields==null)tmp=fields;let valueFields=[];tmp.forEach(f=>{if(!seen[f.getId()]){ops[f.getId()]=args[f.getId()+".operator"];valueFields.push(f);}});valueFields.forEach((f,idx)=>{var newField=f.clone();newField.index=newFields.length;if(newField.isNumeric()){let label=args[newField.id+".label"];newField.id=newField.id+"_"+(ops[f.getId()+".operator"]||op);newField.label=label||Utils.makeLabel(newField.id);}
newFields.push(newField);});if(op=="count"){newFields.push(new RecordField({id:"count",index:newFields.length,label:"Count",type:"double",chartable:true,}));}
let keys=[];let collection={};for(var rowIdx=0;rowIdx<records.length;rowIdx++){var record=records[rowIdx];let key="";keyFields.forEach(f=>{let v=record.getValue(f.getIndex());if(v==""&&altFields.length>0){altFields.forEach(f2=>{v+=record.getValue(f1.getIndex())+"-";});}
key+=v+"-";});let obj=collection[key];if(!obj){keys.push(key);obj=collection[key]={count:0,sums:[],mins:[],maxs:[],records:[]};valueFields.forEach((f,idx)=>{obj.sums.push(0);obj.mins.push(NaN);obj.maxs.push(NaN);});}
valueFields.forEach((f,idx)=>{let v=record.getValue(f.getIndex());if(f.isNumeric()&&!isNaN(v)){obj.sums[idx]+=v;obj.mins[idx]=isNaN(obj.mins[idx])?v:Math.min(obj.mins[idx],v);obj.maxs[idx]=isNaN(obj.maxs[idx])?v:Math.max(obj.maxs[idx],v);}});obj.count++;obj.records.push(record);}
let newRecords=[];let cnt=0;keys.forEach((key,idx)=>{let obj=collection[key];let data=[];let seen={};let date=obj.records[0].getDate();let bounds=RecordUtil.getBounds(obj.records);let lat=bounds.south+(bounds.north-bounds.south)/2;let lon=bounds.west+(bounds.east-bounds.west)/2;if(key.indexOf("US")>=0){cnt++;if(cnt==1){obj.records.forEach(r=>{});}}
keyFields.forEach(f=>{let v=obj.records[0].getValue(f.getIndex());data.push(v);seen[f.getId()]=true;});valueFields.forEach((f,idx)=>{if(seen[f.getId()])return;if(!f.isNumeric()){data.push(obj.records[0].getValue(f.getIndex())