var debugBounds=!1,getMapDebug=!1,debugPopup=!1,debugSelect=!1,RamaddaToFloat=t=>(null!=t&&(t=parseFloat(t)),t),MapUtils={me:"MapUtils",regions:null,POSITIONMARKERID:"location",LABEL_MAP:{aiannhr:"Federal Recognition",mtfcc:"Feature Class",geoid:"Geographic ID",aland:"Land Area",awater:"Water Area",countyfp:"County FIPS",statefp:"State FIPS",namelsad:"Name-LSAD",lsad:"Legal Area Descriptor",aiannhce:"American Indian Census Code",aiannhns:"Anerican Indian Standard Code",classfp:"Class Code",comptyp:"Component Type",intptlat:"Latitude",intptlon:"Longitude",usps:"USPS State Abbrev.",ansicode:"ANSI Code",funcstat:"Functional Status",drawseq:"Draw Sequence",cdsessn:"CD Session",cd115fp:"CD FIPS",affgeoid:"Amer. Fact Finder ID"},properties:{},testSize:{active:!1,out:null,fontUnit:"px",fontSize:3,line:"ABCDEFGHIJKLMNOPQRSTUVWXYZABCD\nABCDEFGHIJKLMNOPQRSTUVWXYZABCD",rows:2,seen:{}},MAP_RESOURCES:null,MAP_RESOURCES_MAP:null,initMapResources:function(){this.MAP_RESOURCES||$.getJSON(RamaddaUtil.getUrl("/mapresources.json"),(t=>{this.MAP_RESOURCES_MAP={},this.MAP_RESOURCES=t,this.MAP_RESOURCES.forEach(((t,e)=>{this.MAP_RESOURCES_MAP[e]=t}))})).fail((t=>{console.error("Failed loading mapresources.json:"+t)}))},handleSize:function(t){if(!this.testSize.active)return;if(this.testSize.out||(this.testSize.out="let "+this.testSize.fontUnit+"Map={"),this.testSize.seen[this.testSize.fontSize])return;this.testSize.seen[this.testSize.fontSize]=!0;let e=this.testSize.fontSize+":{x:"+Utils.trimDecimals(t.width/this.testSize.line.length,2)+",y:"+Utils.trimDecimals(t.height/this.testSize.rows,2)+"},";console.log(e),this.testSize.out+=e+"\n",24==this.testSize.fontSize&&Utils.makeDownloadFile(this.testSize.fontUnit+"map.txt",this.testSize.out+"\n};\n")},loadTurf:function(t){if(!window.turf){let e=RamaddaUtil.getCdnUrl("/lib/turf.min.js");return Utils.loadScript(e,t),!1}return!0},extendBounds:function(t,e){return t?(e&&t.extend(e),t):e},intercept:function(t,e,a,i){let r=t,s=e,o=a,n=i,l=Math.abs(s-n);return l>180&&(l=360-l),r+(180-s)*((o-r)/l)},crossIDL:function(t,e){if(t>0&&e<0||t<0&&e>0){if(Math.abs(t-e)>180)return!0}return!1},addMapProperty:function(t,e){this.properties[t]=e},getMapProperty:function(t,e){return this.properties[t]??e},makeLabel:function(t){if(!t)return t;let e=t.toLowerCase();return this.LABEL_MAP[e]??Utils.makeLabel(t)},stopEvent:function(t){OpenLayers.Event.stop(t)},createGraticule:function(t){return new OpenLayers.Control.Graticule(t)},createLinearRing:function(t){return new OpenLayers.Geometry.LinearRing(t)},createLineString:function(t){return new OpenLayers.Geometry.LineString(t)},createPolygon:function(t){return new OpenLayers.Geometry.Polygon(t)},setFeatureStyle:function(t,e,a){if(t)return t.style=e,void 0!==a&&(t.originalStyle=a),e},createVector:function(t,e,a){return new OpenLayers.Feature.Vector(t,e,a)},formatLocationValue:function(t){t=parseFloat(t);let e=Math.pow(10,7);return t=Math.floor(t*e)/e},getVectorStyle:function(t){return OpenLayers.Feature.Vector.style[t]},createStyleMap:function(t){return new OpenLayers.StyleMap(t)},createLonLat:function(t,e){return new OpenLayers.LonLat(RamaddaToFloat(t),RamaddaToFloat(e))},createPoint:function(t,e){return new OpenLayers.Geometry.Point(RamaddaToFloat(t),RamaddaToFloat(e))},getCenter:function(t){return MapUtils.createPoint(t.left+(t.right-t.left)/2,t.bottom+(t.top-t.bottom)/2)},boundsDefined:function(t){return null!=t&&null!=t.left},createBoundsFromPoints:function(t){let e=0,a=0,i=0,r=0;return t.forEach(((t,s)=>{e=0==s?t.x:Math.min(e,t.x),a=0==s?t.x:Math.max(a,t.x),r=0==s?t.y:Math.max(r,t.y),i=0==s?t.y:Math.min(i,t.y)})),this.createBounds(e,i,a,r)},createBounds:function(t,e,a,i,r){if(!Utils.isNumber(t)&&t&&t.left&&!r)return this.createBounds(t.left,t.bottom,t.right,t.top,!0);return new OpenLayers.Bounds(RamaddaToFloat(t),RamaddaToFloat(e),RamaddaToFloat(a),RamaddaToFloat(i))},createPixel:function(t,e){return new OpenLayers.Pixel(t,e)},createSize:function(t,e){return new OpenLayers.Size(t,e)},createMarker:function(t,e){return new OpenLayers.Marker(t,e)},createBox:function(t){return new OpenLayers.Marker.Box(t)},createIcon:function(t,e,a,i){return new OpenLayers.Icon(t,e,a,i)},createImage:function(t,e,a,i){return OpenLayers.Util.createImage(t,e,a,i)},createLayerGeoJson:function(t,e,a){return MapUtils.createLayerVector(e,{projection:t.displayProjection,strategies:[new OpenLayers.Strategy.Fixed],protocol:new OpenLayers.Protocol.HTTP({url:a,format:new OpenLayers.Format.GeoJSON({ignoreExtraDims:!0})})})},createLayerKML:function(t,e,a){return MapUtils.createLayerVector(e,{projection:t.displayProjection,strategies:[new OpenLayers.Strategy.Fixed],protocol:new OpenLayers.Protocol.HTTP({url:a,format:new OpenLayers.Format.KML({extractStyles:!0,extractAttributes:!0,maxDepth:2})})})},createLayerGPX:function(t,e,a){return MapUtils.createLayerVector(e,{strategies:[new OpenLayers.Strategy.Fixed],projection:t.displayProjection,protocol:new OpenLayers.Protocol.HTTP({url:a,format:new OpenLayers.Format.GPX({extractStyles:!0,extractAttributes:!0,maxDepth:2})})})},createLayerImage:function(t,e,a,i,r){return new OpenLayers.Layer.Image(t,e,a,i,r)},createLayerWMS:function(t,e,a){return new OpenLayers.Layer.WMS(t,e,a)},createLayerXYZ:function(t,e,a){return new OpenLayers.Layer.XYZ(t,e,a)},createLayerMarkers:function(t,e){return new OpenLayers.Layer.Markers(t,e)},createLayerBoxes:function(t,e){return new OpenLayers.Layer.Boxes(t,e)},createLayerVector:function(t,e,a){return new OpenLayers.Layer.Vector(t,e,a)},createProjection:function(t){return new OpenLayers.Projection(t)},distance:function(t,e,a,i){const r=t*Math.PI/180,s=a*Math.PI/180,o=(a-t)*Math.PI/180,n=(i-e)*Math.PI/180,l=Math.sin(o/2)*Math.sin(o/2)+Math.cos(r)*Math.cos(s)*Math.sin(n/2)*Math.sin(n/2),p=6371e3*(2*Math.atan2(Math.sqrt(l),Math.sqrt(1-l)));return MapUtils.metersToFeet(p)},metersToFeet:function(t){return 3.28084*t},squareMetersToSquareFeet:function(t){return 10.7639*t},calculateArea:function(t){let e=0,a=t=>t*Math.PI/180;if(t.length>2){for(let i=0;i<t.length;i++){let r=t[i],s=i<t.length-1?t[i+1]:t[0];e+=a(s.x-r.x)*(2+Math.sin(a(r.y))+Math.sin(a(s.y)))}return e=6378137*e*6378137/2,e<0&&(e=-e),e=MapUtils.squareMetersToSquareFeet(e),e}return-1},squareFeetInASquareMile:27878400,symbols:{lightning:[0,0,4,2,6,0,10,5,6,3,4,5,0,0],rectangle:[0,0,4,0,4,10,0,10,0,0],diamond:[5,0,10,5,5,10,0,5,5,0],church:[4,0,6,0,6,4,10,4,10,6,6,6,6,14,4,14,4,6,0,6,0,4,4,4,4,0],_x:[0,0,6,6,3,3,6,0,0,6,3,3],thinx:[0,0,6,6,3,3,6,0,0,6,3,3],arrow:[0,10,5,7,10,10,5,0,0,10],downtriangle:[0,0,5,10,10,0],plane:[5,0,5,0,4,1,4,3,0,5,0,6,4,5,4,8,2,10,3,10,5,9,5,9,8,10,8,10,6,8,6,5,10,6,10,5,6,3,6,1,5,0,5,0]},initSymbols:function(){for(a in this.symbols)OpenLayers.Renderer.symbol[a]=this.symbols[a]},isFeatureVisible:function(t){return!t.style||t.style.display!=DISPLAY_NONE},setFeatureVisible:function(t,e){if(!t.style){if(e)return;t.style=t.layer?$.extend({},t.layer.style):{}}t.style.display=e?DISPLAY_INLINE:DISPLAY_NONE,t.originalStyle&&(t.originalStyle.display=t.style.display)},declutter:function(t,e,a){let i={fontSize:"12px",padding:1,granularity:1};a&&$.extend(i,a),i.padding=Math.min(10,i.padding);let r={4:{x:1.75,y:5.99},5:{x:2.19,y:7.5},6:{x:2.63,y:8.99},7:{x:3.07,y:10.16},8:{x:3.51,y:11.83},9:{x:3.94,y:13.25},10:{x:4.38,y:14.66},11:{x:4.82,y:16.08},12:{x:5.26,y:17.5},13:{x:5.69,y:19.16},14:{x:6.13,y:20.33},15:{x:6.56,y:22},16:{x:7,y:23.41},17:{x:7.44,y:24.83},18:{x:7.88,y:26.25},19:{x:8.31,y:27.66},20:{x:8.75,y:29.08},21:{x:9.19,y:30.5},22:{x:9.62,y:31.91},23:{x:10.06,y:33.58},24:{x:10.5,y:34.75}},s=(i.fontSize??"12px").match(/^([0-9]+)($|[^\d]+)/),o=12,n="px";s&&(o=parseInt(s[1]),n=s[2]);let l={4:{x:1.31,y:4.5},5:{x:1.64,y:5.62},6:{x:1.97,y:6.75},7:{x:2.3,y:7.87},8:{x:2.63,y:9},9:{x:2.96,y:10},10:{x:3.29,y:11.25},11:{x:3.62,y:12},12:{x:3.94,y:13.25},13:{x:4.27,y:14.25},14:{x:4.6,y:15.24},15:{x:4.93,y:16.5},16:{x:5.26,y:17.5},17:{x:5.58,y:18.75},18:{x:5.91,y:19.75},19:{x:6.24,y:21},20:{x:6.56,y:22},21:{x:6.89,y:22.75},22:{x:7.22,y:24},23:{x:7.55,y:25},24:{x:7.88,y:26.25}};"pt"==n&&(l=r);let p=()=>l[o]?l[o]:o<4?l[4]:l[25];if(i.pixelsPerCharacter||(i.pixelsPerCharacter=p().x*i.padding),i.pixelsPerLine||(i.pixelsPerLine=p().y*i.padding),this.testSize.active){let t=++this.testSize.fontSize;e.forEach((e=>{e.style.fontSize=t+this.testSize.fontUnit,e.style.label=this.testSize.line}))}let c,h=t.transformLLBounds(t.getBounds()),u=[];if(e.forEach(((e,a)=>{if(e.gridSpacingInfo=null,!e.geometry)return;if(!e.style)return;let r=e.geometry.getBounds();if(!h.contains(r)&&!h.intersectsBounds(r))return void MapUtils.setFeatureVisible(e,!1);MapUtils.setFeatureVisible(e,!0),u.push(e);let s=r.getCenterLonLat(),o=t.getMap().getViewPortPxFromLonLat(s),n=o.x,l=o.y,p=n,y=n,d=l,m=l,g=1,M=1;if(e.style.label){let t=e.style.label.split("\n"),a=0;t.forEach((t=>{a=Math.max(a,t.length)}));let r=M=i.pixelsPerCharacter*a,s=g=i.pixelsPerLine*t.length;p=o.x-r/2,y=o.x+r/2,d=o.y,m=o.y+s}else if(e.style.pointRadius){let t=+e.style.pointRadius;M=2*t,g=2*t,p==y&&(p=n-t,y=n+t),d==m&&(d=l-t,m=l+t)}else g=i.padding*(d-m),M=i.padding*(y-p);c?(c.minx=Math.min(c.minx,p),c.maxx=Math.max(c.maxx,y),c.miny=Math.min(c.miny,d),c.maxy=Math.max(c.maxy,m)):c={minx:p,maxx:y,miny:d,maxy:m},e.gridSpacingInfo={height:Math.ceil(g),width:Math.ceil(M),left:Math.floor(p),right:Math.ceil(y),top:Math.floor(d),bottom:Math.ceil(m)}})),!c)return;c={minx:Math.floor(c.minx),maxx:Math.ceil(c.maxx),miny:Math.floor(c.miny),maxy:Math.ceil(c.maxy)},e=u;let y=-c.minx,d=-c.miny,m=parseInt(c.maxx+y),g=parseInt(c.maxy+d),M={};e.forEach(((t,e)=>{if(!this.isFeatureVisible(t))return void console.log("not viz");let a=t.gridSpacingInfo,r=parseInt(y+a.left),s=parseInt(d+a.top),o=!0;if(r+t.gridSpacingInfo.width<0||s+t.gridSpacingInfo.height<0)o=!1,console.log("skipping:",r,s);else{let e=[];r=Math.max(0,r),s=Math.max(0,s);for(let a=r;o&&a<r+t.gridSpacingInfo.width&&!(a>=m);a+=i.granularity)for(let r=s;o&&r<s+t.gridSpacingInfo.height&&!(r>=g);r+=i.granularity){M[a+"_"+r]?o=!1:e.push([a,r])}o&&e.forEach((t=>{let e=t[0]+"_"+t[1];M[e]=!0}))}this.testSize.active&&(o=!1),o?(MapUtils.setFeatureVisible(t,!0)):(MapUtils.setFeatureVisible(t,!1))}))},makeDefaultFeatureText:function(t,e,a,i){e||(e=Object.keys(t));let r="<table>",s=[],o=[],n=[];return e.forEach((t=>{let e=t.toLowerCase();"latitude"==e||"lat"==e||"longitude"==e||"lon"==e||"long"==e?n.push(t):"name"==e?s.push(t):o.push(t)})),(e=Utils.mergeLists(s,o,n)).forEach((e=>{let s,o,n=e.toLowerCase();if("objectid"!=n&&"feature_type"!=n&&"shapearea"!=n&&"styleurl"!=n&&"shapelen"!=n){if(i&&(s=i(e)),Utils.isDefined(s)||(s=MapUtils.makeLabel(e)),"startdate"==n?s="Start Date":"enddate"==n?s="End Date":"aland"==n?s="Land Area":"awater"==n&&(s="Water Area"),r+="<tr valign=top><td align=right><div style='margin-right:5px;margin-bottom:3px;'><b>"+HU.span(["title",e],s)+":</b></div></td><td><div style='margin-right:5px;margin-bottom:3px;'>",null==t[e]||"object"!=typeof t[e]&&"Object"!=typeof t[e])o=""+t[e];else{o=""+t[e].value}(o.startsWith("http:")||o.startsWith("https:"))&&(o="<a target=_link href='"+o+"'>"+o+"</a>"),"null"!=o&&(a&&(o=a(e,o)),r+=o,r+="</div></td></tr>")}})),r+="</table>",r}};MapUtils.defaults={maxLatValue:85,zoomLevels:40,defaultZoomLevel:-1,maxExtent:MapUtils.createBounds(-20037508,-20037508,20037508,20037508),sourceProjection:MapUtils.createProjection("EPSG:900913"),displayProjection:MapUtils.createProjection("EPSG:4326"),units:"m",doSphericalMercator:!0,wrapDateline:!0,location:MapUtils.createLonLat(0,0)},MapUtils.circleHiliteAttrs={strokeColor:"black",strokeWidth:1,fill:!0,fillOpacity:.5,fillColor:"red"};var RAMADDA_MAP_LAYERS=[],RAMADDA_MAP_LAYERS_MAP={};function MapLayer(t,e,a,i){a.replace&&(a=a.replace(/([^\$]){/g,"$1${")),this.opts=i??{},Utils.stringDefined(t)||(t=Utils.makeID(e)),this.id=t,Utils.stringDefined(e)||(e=Utils.makeLabel(t)),this.name=e,this.url=a,RAMADDA_MAP_LAYERS.push(this),RAMADDA_MAP_LAYERS_MAP[t]=this}MapLayer.prototype={isForMap:function(){return!Utils.isDefined(this.opts.isForMap)||this.opts.isForMap},createMapLayer:function(t){return this.layer=this.createMapLayerInner(t),this.layer},createMapLayerInner:function(t){return this.opts.creator?this.opts.creator(this,t):"simple"==this.opts.type?t.makeSimpleWms(this.id):"wms"==this.opts.type?t.addWMSLayer(this.name,this.url,this.opts.layer,!Utils.isDefined(this.opts.isOverlay)||!this.opts.isOverlay):t.createXYZLayer(this.name,this.url,this.opts.attribution,this.opts.isOverlay)}};var map_default_layer="osm";new MapLayer("osm","OSM",["//a.tile.openstreetmap.org/${z}/${x}/${y}.png","//b.tile.openstreetmap.org/${z}/${x}/${y}.png","//c.tile.openstreetmap.org/${z}/${x}/${y}.png"],{attribution:"<a target=_help href=https://www.openstreetmap.org/copyright>© OpenStreetMap</a>"}),new MapLayer("esri.topo","ESRI Topo","https://server.arcgisonline.com/ArcGIS/rest/services/World_Topo_Map/MapServer/tile/${z}/${y}/${x}",{isForMap:!0,attribution:"Map courtesy of ESRI"}),new MapLayer("google.roads","Google Maps - Roads","https://mt0.google.com/vt/lyrs=m&hl=en&x=${x}&y=${y}&z=${z}",{attribution:"Map courtesy of Google"}),new MapLayer("google.hybrid","Google Maps - Hybrid","https://mt0.google.com/vt/lyrs=y&hl=en&x=${x}&y=${y}&z=${z}",{attribution:"Map courtesy of Google"}),new MapLayer("esri.street","ESRI Streets","https://server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer/tile/${z}/${y}/${x}",{attribution:"Map courtesy of ESRI"}),new MapLayer("esri.natgeoworldmap","ESRI NatGeo World Map","https://server.arcgisonline.com/ArcGIS/rest/services/NatGeo_World_Map/MapServer/tile/{z}/{y}/{x}",{attribution:"Tiles (C) Esri -- National Geographic, Esri, DeLor"}),new MapLayer("opentopo","OpenTopo","//a.tile.opentopomap.org/${z}/${x}/${y}.png",{attribution:"Map courtesy of OpenTopo"}),new MapLayer("usfs","Forest Service","https://caltopo.com/tile/f16a/${z}/${x}/${y}.png",{attribution:"Map courtesy of Caltopo"}),new MapLayer("usgs.topo","USGS Topo","https://basemap.nationalmap.gov/ArcGIS/rest/services/USGSTopo/MapServer/tile/${z}/${y}/${x}",{attribution:"USGS - The National Map"}),new MapLayer("esri.worldtopomap","ESRI World Topo","https://server.arcgisonline.com/ArcGIS/rest/services/World_Topo_Map/MapServer/tile/{z}/{y}/{x}",{attribution:"Tiles (C) Esri -- Esri, DeLorme, NAVTEQ, TomTom, I"}),new MapLayer("google.terrain","Google Maps - Terrain","https://mt0.google.com/vt/lyrs=p&hl=en&x=${x}&y=${y}&z=${z}",{attribution:"Map courtesy of Google"}),new MapLayer("google.satellite","Google Maps - Satellite","https://mt0.google.com/vt/lyrs=s&hl=en&x=${x}&y=${y}&z=${z}",{attribution:"Map courtesy of Google"}),new MapLayer("naip","NAIP - USDA","https://gis.apfo.usda.gov/arcgis/rest/services/NAIP/USDA_CONUS_PRIME/ImageServer/tile/${z}/${y}/${x}?blankTile=false",{attribution:"Map courtesy of USDA"}),new MapLayer("naip.esri","NAIP - ESRI","https://naip.maptiles.arcgis.com/arcgis/rest/services/NAIP/MapServer/tile/${z}/${y}/${x}",{attribution:"Map courtesy of ESRI"}),new MapLayer("naip.caltopo","NAIP - CalTopo","https://caltopo.com/tile/n/${z}/${x}/${y}.png",{attribution:"Map courtesy of Caltopo"}),new MapLayer("esri.worldimagery","ESRI World Imagery","https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}",{attribution:"Tiles (C) Esri -- Source: Esri, i-cubed, USDA, USG"}),new MapLayer("usgs.imagery","USGS Imagery","https://basemap.nationalmap.gov/ArcGIS/rest/services/USGSImageryOnly/MapServer/tile/${z}/${y}/${x}",{attribution:"USGS - The National Map"}),new MapLayer("usgs.imagery.topo","USGS Imagery-Topo","https://basemap.nationalmap.gov/arcgis/rest/services/USGSImageryTopo/MapServer/tile/${z}/${y}/${x}",{attribution:"USGS - The National Map"}),new MapLayer("usgs.hydro","USGS Hydro","https://basemap.nationalmap.gov/arcgis/rest/services/USGSHydroCached/MapServer/tile/${z}/${y}/${x}",{attribution:"USGS - The National Map"}),new MapLayer("esri.shaded","ESRI Shaded Relief","https://server.arcgisonline.com/ArcGIS/rest/services/World_Shaded_Relief/MapServer/tile/${z}/${y}/${x}",{attribution:"Map courtesy of ESRI"}),new MapLayer("esri.lightgray","ESRI Light Gray","https://services.arcgisonline.com/arcgis/rest/services/Canvas/World_Light_Gray_Base/MapServer/tile/${z}/${y}/${x}",{attribution:"Map courtesy of ESRI"}),new MapLayer("esri.darkgray","ESRI Dark Gray","https://services.arcgisonline.com/arcgis/rest/services/Canvas/World_Dark_Gray_Base/MapServer/tile/${z}/${y}/${x}",{attribution:"Map courtesy of ESRI"}),new MapLayer("esri.terrain","ESRI Terrain","https://server.arcgisonline.com/ArcGIS/rest/services/World_Terrain_Base/MapServer/tile/${z}/${y}/${x}",{attribution:"Map courtesy of ESRI"}),new MapLayer("shadedrelief","Shaded Relief","https://caltopo.com/tile/hs_m315z45s3/${z}/${x}/${y}.png",{attribution:"Map courtesy of Caltopo"}),new MapLayer("world.hillshade","World Hillshade","https://services.arcgisonline.com/arcgis/rest/services/Elevation/World_Hillshade/MapServer/tile/${z}/${y}/${x}",{attribution:"USGS - The National Map"}),new MapLayer("cartolight","Carto-Light","https://cartodb-basemaps-a.global.ssl.fastly.net/light_all/${z}/${x}/${y}.png"),new MapLayer("esri.worldgraycanvas","ESRI World Gray","https://server.arcgisonline.com/ArcGIS/rest/services/Canvas/World_Light_Gray_Base/MapServer/tile/{z}/{y}/{x}",{attribution:"Tiles (C) Esri -- Esri, DeLorme, NAVTEQ"}),new MapLayer("cartodb.positron","CartoDB Positron","https://a.basemaps.cartocdn.com/light_all/{z}/{x}/{y}.png",{attribution:"(C) OpenStreetMap contributors (C) CARTO"}),new MapLayer("cartodb.voyager","CartoDB Voyager","https://a.basemaps.cartocdn.com/rastertiles/voyager/{z}/{x}/{y}.png",{attribution:"(C) OpenStreetMap contributors (C) CARTO"}),new MapLayer("esri.worldphysical","ESRI World Physical","https://server.arcgisonline.com/ArcGIS/rest/services/World_Physical_Map/MapServer/tile/{z}/{y}/{x}",{attribution:"Tiles (C) Esri -- Source: US National Park Service"}),new MapLayer("publiclands","Public Lands","https://caltopo.com/tile/sma/${z}/${x}/${y}.png",{attribution:"Map courtesy of Caltopo",isOverlay:!0,legend:RamaddaUtil.getUrl("/images/publiclands.png")}),new MapLayer("federallands","Federal Lands",["//gis.blm.gov/arcgis/rest/services/lands/BLM_Natl_SMA_Cached_without_PriUnk/MapServer/tile/${z}/${y}/${x}"],{legend:RamaddaUtil.getUrl("/images/federallands.png"),attribution:"Map courtesy of BLM"}),new MapLayer("seafloor","Seafloor",["//tiles.arcgis.com/tiles/C8EMgrsFcRFL6LrL/arcgis/rest/services/GEBCO_basemap_NCEI/MapServer/tile/${z}/${y}/${x}"]),new MapLayer("esri.oceanbasemap","ESRI Ocean Basemap","https://server.arcgisonline.com/ArcGIS/rest/services/Ocean/World_Ocean_Base/MapServer/tile/{z}/{y}/{x}",{attribution:"Tiles (C) Esri -- Sources: GEBCO, NOAA, CHS, OSU,"}),new MapLayer("historic","Caltopo Historic","https://caltopo.com/tile/1900/${z}/${x}/${y}.png",{attribution:"Map courtesy of Caltopo",isOverlay:!0}),new MapLayer("strava.all","Strava - All","https://heatmap-external-a.strava.com/tiles/all/hot/{z}/{x}/{y}.png",{attribution:'Map tiles by <a href="https://labs.strava.com/heat'}),new MapLayer("nasa.earthatnight","Earth at Night","https://map1.vis.earthdata.nasa.gov/wmts-webmerc/VIIRS_CityLights_2012/default//GoogleMapsCompatible_Level8/{z}/{y}/{x}.jpg",{attribution:"Imagery provided by services from the Global Image"}),new MapLayer("moon","Moon","https://cartocdn-gusc.global.ssl.fastly.net/opmbuilder/api/v1/map/named/opm-moon-basemap-v0-1/all/${z}/${x}/${y}.png"),new MapLayer("mars","Mars","https://cartocdn-gusc.global.ssl.fastly.net/opmbuilder/api/v1/map/named/opm-mars-basemap-v0-1/all/${z}/${x}/${y}.png"),new MapLayer("lightblue","","",{type:"simple"}),new MapLayer("blue","","",{type:"simple"}),new MapLayer("white","","",{type:"simple"}),new MapLayer("black","","",{type:"simple"}),new MapLayer("gray","","",{type:"simple"}),MapUtils.initSymbols();var ARG_ZOOMLEVEL="zoomLevel",ARG_MAPCENTER="mapCenter",ramaddaMapMap={};function ramaddaMapAdd(t){null==window.globalMapList&&(window.globalMapList=[]),window.globalMapList.push(t),ramaddaMapMap[t.mapId]=t}function ramaddaMapRemove(t){null==window.globalMapList&&(window.globalMapList=[]),window.globalMapList.push(t),delete ramaddaMapMap[t.mapId]}function ramaddaMapCheckLayout(){setTimeout((()=>{null!=window.globalMapList&&window.globalMapList.map((t=>{t.map.updateSize()}))}),1e3)}var ramaddaMapLastShareTime=0,ramaddaMapLastShareMap="";function ramaddaMapShareState(t,e){let a=(new Date).getTime();if(t.mapId!=ramaddaMapLastShareMap&&a-ramaddaMapLastShareTime<2e3)return;if(ramaddaMapLastShareTime=a,ramaddaMapLastShareMap=t.mapId,t.stateIsBeingSet)return;let i=t.params.linkGroup;if(t.params.linked||t.params.linkMouse||i){t.getBounds(),t.map.baseLayer,t.map.getZoom();for(var r=0;r<window.globalMapList.length;r++){var s=window.globalMapList[r];s.stateIsBeingSet||s.mapId==t.mapId||i==s.params.linkGroup&&(s.stateIsBeingSet=!0,s.receiveShareState(t,e),s.stateIsBeingSet=!1)}}}function CollisionHandler(t,e){e=e??{},$.extend(this,{map:t,countAtPoint:{},offset:0,state:{},collisionArgs:e.collisionArgs??{},collisionInfos:[]}),this.opts=e;let a=this.map.getBounds(),i=a.right-a.left,r=jqid(this.map.mapDivId).width(),s=.025*i,o=e.pointSize??16,n=r/i,l=0;for(;n*this.offset<o&&l<100;)this.offset+=s,l++;this.getCollisionPoint=t=>{let e=MapUtils.createLonLat(t.x,t.y);e=this.map.transformLLPoint(e),e=this.map.getMap().getViewPortPxFromLonLat(e);const a=Math.round(e.x/o)*o,i=Math.round(e.y/o)*o;let r=this.map.transformProjPoint(this.map.getMap().getLonLatFromPixel({x:a,y:i})),s=MapUtils.createPoint(r.lon,r.lat);return this.countAtPoint[s]?this.countAtPoint[s]++:this.countAtPoint[s]=1,s}}function CollisionInfo(t,e,a,i){$.extend(this,{handler:t,fixed:!1,visible:!1,icon:null,iconSize:16,dotOpacity:1,dotColor:"blue",dotColorOn:null,dotColorOff:null,dotRadius:12,ringColor:"red",ringWidth:3,scaleDots:!1,labelTemplate:"${count}",labelColor:"#fff",labelFontSize:10,dots:null,collisionPoint:a,dot:null,numRecords:e,records:[],addLines:!1,lines:[],features:[]}),i&&($.extend(this,i),this.textGetter&&(this.myTextGetter=t=>this.textGetter(this.records))),Utils.stringDefined(this.labelTemplate)||(this.labelTemplate=null),this.visible&&this.checkLines()}function RamaddaBounds(t,e,a,i){if(t&&Utils.isDefined(t.north)){let e=t;this.north=e.north,this.west=e.west,this.south=e.south,this.east=e.east}else if(t&&Utils.isDefined(t.top)){let e=t;this.north=e.top,this.west=e.left,this.south=e.bottom,this.east=e.right}else this.north=t,this.west=e,this.south=a,this.east=i;$.extend(this,{toString:function(){return"N:"+this.north+" W:"+this.west+" S:"+this.south+" E:"+this.east}})}CollisionHandler.prototype={initPoints:function(t){return t.map((t=>{null!==t.x&&null!==t.y&&(t.collisionPoint=this.getCollisionPoint(t))}))},getCollisionInfo:function(t,e){let a=this.state[t];return a||(a=this.state[t]=new CollisionInfo(this,this.countAtPoint[t],t,this.collisionArgs),this.collisionInfos.push(a)),a},getCollisionInfos:function(){return this.collisionInfos},addCollisionLines:function(t,e){this.opts.addCollisionLines?this.opts.addCollisionLines(t,e):this.map.getLinesLayer().addFeatures(e)},setCollisionVisible:function(t,e){this.opts.setCollisionVisible&&this.opts.setCollisionVisible(t,e)}},CollisionInfo.prototype={addRecord:function(t){this.records.push(t)},addLine:function(t){this.lines.push(t)},checkLines:function(){this.addedLines||(this.addedLines=!0,this.handler.addCollisionLines(this,this.lines))},createDots:function(t){if(this.dots=[],this.icon)this.dots.push(this.handler.map.createMarker("dot-"+t,[this.collisionPoint.x,this.collisionPoint.y],this.icon,"","",null,this.iconSize,null,null,null,null,!1));else{let e=this.getCollisionDotStyle(this),a=this.handler.map.createPoint("dot-"+t,this.collisionPoint,e,null,this.myTextGetter);this.dots.push(a),e=$.extend({},e),e.label=null,e.fillColor="transparent",e.strokeColor=this.ringColor,e.strokeWidth=this.ringWidth,a=this.handler.map.createPoint("dot2-"+t,this.collisionPoint,e,null,this.myTextGetter),this.dots.push(a)}return this.dots.forEach((t=>{t.collisionInfo=this})),this.dots},dotSelected:function(t){return!this.fixed&&(this.setVisible(!this.visible),!0)},styleCollisionDot:function(t){$.extend(t.style,this.getCollisionDotStyle(t.collisionInfo))},addFeatures:function(t){this.features.push(...t)},getCollisionDotStyle:function(t){let e=this.dotColor,a=this.dotRadius;if(!this.fixed){if(this.scaleDots){let e=t.numRecords;e>1&&(a=Math.min(Math.ceil(a+e/2),28))}e=t.visible?this.dotColorOn??e:this.dotColorOff??e}let i={fillColor:e,fillOpacity:this.dotOpacity,pointRadius:a,strokeWidth:0};return this.labelTemplate&&(i=$.extend(i,{label:this.labelTemplate.replace("${count}",this.records.length),fontColor:this.labelColor,fontSize:this.labelFontSize,labelOutlineColor:"transparent"})),i},setVisible:function(t){this.visible=t,this.dots.forEach((t=>{this.styleCollisionDot(t),t.layer.drawFeature(t,t.style)})),this.checkLines(),this.lines.forEach((t=>{t.featureVisible=this.visible,this.handler.map.checkFeatureVisible(t,!0)})),this.handler.setCollisionVisible(this,t)}},RamaddaBounds.prototype={expand:function(t,e){this.north=isNaN(this.north)?t:Math.max(this.north,t),this.south=isNaN(this.south)?t:Math.min(this.south,t),this.west=isNaN(this.west)?e:Math.min(this.west,e),this.east=isNaN(this.east)?e:Math.max(this.east,e)}};
